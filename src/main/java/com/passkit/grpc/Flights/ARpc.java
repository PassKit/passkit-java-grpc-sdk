// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: io/flights/a_rpc.proto
// Protobuf Java Version: 4.31.0

package com.passkit.grpc.Flights;

@com.google.protobuf.Generated
public final class ARpc {
  private ARpc() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 0,
      /* suffix= */ "",
      ARpc.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026io/flights/a_rpc.proto\022\007flights\032\034googl" +
      "e/api/annotations.proto\032\033google/protobuf" +
      "/empty.proto\032.protoc-gen-openapiv2/optio" +
      "ns/annotations.proto\032\036io/flights/boardin" +
      "g_pass.proto\032\030io/flights/airport.proto\032\027" +
      "io/flights/flight.proto\032\"io/flights/flig" +
      "ht_designator.proto\032\030io/flights/carrier." +
      "proto\032\027io/flights/common.proto2\2278\n\007Fligh" +
      "ts\022\362\001\n\ncreatePort\022\r.flights.Port\032\026.googl" +
      "e.protobuf.Empty\"\274\001\222A\235\001\n\010Airports\022\016Creat" +
      "e Airport\032\031Creates an airport recordJ0\n\003" +
      "400\022)\n\'There is a problem with the input" +
      " data.J4\n\003403\022-\n+Returned when the user " +
      "lacks authorization.\202\323\344\223\002\025\"\020/flights/air" +
      "port:\001*\022\322\001\n\007getPort\022\024.flights.AirportCod" +
      "e\032\r.flights.Port\"\241\001\222Ax\n\010Airports\022\013Get Ai" +
      "rport\032\033Retrieves an airport recordJ\"\n\00340" +
      "3\022\033\n\031User lacks authorization.J\036\n\003404\022\027\n" +
      "\025Record was not found.\202\323\344\223\002 \022\036/flights/a" +
      "irport/{airportCode}\022\320\002\n\nupdatePort\022\r.fl" +
      "ights.Port\032\r.flights.Port\"\243\002\222A\204\002\n\010Airpor" +
      "ts\022\016Update Airport\032\031Updates an airport r" +
      "ecordJ0\n\003400\022)\n\'There is a problem with " +
      "the input data.J\"\n\003403\022\033\n\031User lacks aut" +
      "horization.J\036\n\003404\022\027\n\025Record was not fou" +
      "nd.JW\n\003503\022P\nNServer is unavailable. Bac" +
      "k off for 250ms and repeat request until" +
      " successful.\202\323\344\223\002\025\032\020/flights/airport:\001*\022" +
      "\347\001\n\ndeletePort\022\024.flights.AirportCode\032\026.g" +
      "oogle.protobuf.Empty\"\252\001\222A\213\001\n\010Airports\022\016D" +
      "elete Airport\032\031Deletes a airport record." +
      "J4\n\003403\022-\n+Returned when the user lacks " +
      "authorization.J\036\n\003404\022\027\n\025Record was not " +
      "found.\202\323\344\223\002\025*\020/flights/airport:\001*\022\367\001\n\rcr" +
      "eateCarrier\022\020.flights.Carrier\032\026.google.p" +
      "rotobuf.Empty\"\273\001\222A\234\001\n\010Carriers\022\016Create C" +
      "arrier\032\030Creates a carrier recordJ0\n\003400\022" +
      ")\n\'There is a problem with the input dat" +
      "a.J4\n\003403\022-\n+Returned when the user lack" +
      "s authorization.\202\323\344\223\002\025\"\020/flights/carrier" +
      ":\001*\022\327\001\n\ngetCarrier\022\024.flights.CarrierCode" +
      "\032\020.flights.Carrier\"\240\001\222Aw\n\010Carriers\022\013Get " +
      "Carrier\032\032Retrieves a carrier recordJ\"\n\0034" +
      "03\022\033\n\031User lacks authorization.J\036\n\003404\022\027" +
      "\n\025Record was not found.\202\323\344\223\002 \022\036/flights/" +
      "carrier/{carrierCode}\022\330\002\n\rupdateCarrier\022" +
      "\020.flights.Carrier\032\020.flights.Carrier\"\242\002\222A" +
      "\203\002\n\010Carriers\022\016Update Carrier\032\030Updates a " +
      "carrier recordJ0\n\003400\022)\n\'There is a prob" +
      "lem with the input data.J\"\n\003403\022\033\n\031User " +
      "lacks authorization.J\036\n\003404\022\027\n\025Record wa" +
      "s not found.JW\n\003503\022P\nNServer is unavail" +
      "able. Back off for 250ms and repeat requ" +
      "est until successful.\202\323\344\223\002\025\032\020/flights/ca" +
      "rrier:\001*\022\352\001\n\rdeleteCarrier\022\024.flights.Car" +
      "rierCode\032\026.google.protobuf.Empty\"\252\001\222A\213\001\n" +
      "\010Carriers\022\016Delete Carrier\032\031Deletes a car" +
      "rier record.J4\n\003403\022-\n+Returned when the" +
      " user lacks authorization.J\036\n\003404\022\027\n\025Rec" +
      "ord was not found.\202\323\344\223\002\025*\020/flights/carri" +
      "er:\001*\022\222\003\n\026createFlightDesignator\022\031.fligh" +
      "ts.FlightDesignator\032\026.google.protobuf.Em" +
      "pty\"\304\002\222A\242\002\n\022Flight Designators\022\031Create F" +
      "light Designation\032\"Creates a flight desi" +
      "gnator recordJ0\n\003400\022)\n\'There is a probl" +
      "em with the input data.J\"\n\003403\022\033\n\031User l" +
      "acks authorization.J\036\n\003404\022\027\n\025Record was" +
      " not found.JW\n\003503\022P\nNServer is unavaila" +
      "ble. Back off for 250ms and repeat reque" +
      "st until successful.\202\323\344\223\002\030\"\023/flights/des" +
      "ignator:\001*\022\262\002\n\023getFlightDesignator\022 .fli" +
      "ghts.FlightDesignatorRequest\032\031.flights.F" +
      "lightDesignator\"\335\001\222A\226\001\n\022Flight Designato" +
      "rs\022\026Get Flight Designation\032$Retrieves a " +
      "flight designator recordJ\"\n\003403\022\033\n\031User " +
      "lacks authorization.J\036\n\003404\022\027\n\025Record wa" +
      "s not found.\202\323\344\223\002=\022;/flights/designator/" +
      "{carrierCode}/{flightNumber}/{revision}\022" +
      "\225\003\n\026updateFlightDesignator\022\031.flights.Fli" +
      "ghtDesignator\032\031.flights.FlightDesignator" +
      "\"\304\002\222A\242\002\n\022Flight Designators\022\031Update Flig" +
      "ht Designation\032\"Updates a flight designa" +
      "tor recordJ0\n\003400\022)\n\'There is a problem " +
      "with the input data.J\"\n\003403\022\033\n\031User lack" +
      "s authorization.J\036\n\003404\022\027\n\025Record was no" +
      "t found.JW\n\003503\022P\nNServer is unavailable" +
      ". Back off for 250ms and repeat request " +
      "until successful.\202\323\344\223\002\030\032\023/flights/design" +
      "ator:\001*\022\217\002\n\026deleteFlightDesignator\022 .fli" +
      "ghts.FlightDesignatorRequest\032\026.google.pr" +
      "otobuf.Empty\"\272\001\222A\230\001\n\022Flight Designators\022" +
      "\031Delete Flight Designation\032#Deletes a fl" +
      "ight designator record.J\"\n\003403\022\033\n\031User l" +
      "acks authorization.J\036\n\003404\022\027\n\025Record was" +
      " not found.\202\323\344\223\002\030*\023/flights/designator:\001" +
      "*\022\300\003\n\014createFlight\022\017.flights.Flight\032\026.go" +
      "ogle.protobuf.Empty\"\206\003\222A\350\002\n\007Flights\022\rCre" +
      "ate Flight\032~Creates a flight record.  No" +
      "te that this method will often not be us" +
      "ed, since new flight records can be auto" +
      "matically created.J0\n\003400\022)\n\'There is a " +
      "problem with the input data.J\"\n\003403\022\033\n\031U" +
      "ser lacks authorization.J\037\n\003409\022\030\n\026Recor" +
      "d already exists.JW\n\003503\022P\nNServer is un" +
      "available. Back off for 250ms and repeat" +
      " request until successful.\202\323\344\223\002\024\"\017/fligh" +
      "ts/flight:\001*\022\304\002\n\tgetFlight\022\026.flights.Fli" +
      "ghtRequest\032\017.flights.Flight\"\215\002\222At\n\007Fligh" +
      "ts\022\nGet Flight\032\031Retrieves a flight recor" +
      "dJ\"\n\003403\022\033\n\031User lacks authorization.J\036\n" +
      "\003404\022\027\n\025Record was not found.\202\323\344\223\002\217\001\022\214\001/" +
      "flights/flight/{carrierCode}/{flightNumb" +
      "er}/{departureDate.year}/{departureDate." +
      "month}/{departureDate.day}/{boardingPoin" +
      "t}/{deplaningPoint}\022\211\004\n\014updateFlight\022\017.f" +
      "lights.Flight\032\017.flights.Flight\"\326\003\222A\270\003\n\007F" +
      "lights\022\024Update Flight Number\032\307\001Updates a" +
      " flight number record.  Note that if the" +
      " flight number is subscribed to automati" +
      "c flight alerts, this method may not be " +
      "required and that changes made may be ov" +
      "erwritten by automatic updatesJ0\n\003400\022)\n" +
      "\'There is a problem with the input data." +
      "J\"\n\003403\022\033\n\031User lacks authorization.J\036\n\003" +
      "404\022\027\n\025Record was not found.JW\n\003503\022P\nNS" +
      "erver is unavailable. Back off for 250ms" +
      " and repeat request until successful.\202\323\344" +
      "\223\002\024\032\017/flights/flight:\001*\022\335\002\n\014deleteFlight" +
      "\022\026.flights.FlightRequest\032\026.google.protob" +
      "uf.Empty\"\234\002\222A\376\001\n\007Flights\022\rDelete Flight\032" +
      "\237\001Deletes a flight record. Note that a d" +
      "eleted flight record may be automaticall" +
      "y recreated, unless the [active] flag on" +
      " the Flight Number record is set to fals" +
      "eJ\"\n\003403\022\033\n\031User lacks authorization.J\036\n" +
      "\003404\022\027\n\025Record was not found.\202\323\344\223\002\024*\017/fl" +
      "ights/flight:\001*\022\221\004\n\022createBoardingPass\022\033" +
      ".flights.BoardingPassRecord\032\037.flights.Bo" +
      "ardingPassesResponse\"\274\003\222A\230\003\n\017Boarding Pa" +
      "sses\022\024Create Boarding Pass\032\236\001Creates a b" +
      "oarding pass record. If flight record fo" +
      "r the date does not yet exist, it will b" +
      "e created using the Flight Designation d" +
      "efaults. Returns a pass id.J0\n\003400\022)\n\'Th" +
      "ere is a problem with the input data.J\"\n" +
      "\003403\022\033\n\031User lacks authorization.J\037\n\003409" +
      "\022\030\n\026Record already exists.JW\n\003503\022P\nNSer" +
      "ver is unavailable. Back off for 250ms a" +
      "nd repeat request until successful.\202\323\344\223\002" +
      "\032\"\025/flights/boardingPass:\001*\022\312\002\n\025getBoard" +
      "ingPassRecord\022\".flights.BoardingPassReco" +
      "rdRequest\032\033.flights.BoardingPassRecord\"\357" +
      "\001\222A\311\001\n\017Boarding Passes\022\030Get Boarding Pas" +
      "s Record\032XRetrieves a boarding pass reco" +
      "rd. One of ticketNumber, index or passId" +
      " must be provided.J\"\n\003403\022\033\n\031User lacks " +
      "authorization.J\036\n\003404\022\027\n\025Record was not " +
      "found.\202\323\344\223\002\034\"\027/flights/boardingRecord:\001*" +
      "\022\351\002\n\017getBoardingPass\022\034.flights.BoardingP" +
      "assRequest\032\037.flights.BoardingPassesRespo" +
      "nse\"\226\002\222A\372\001\n\017Boarding Passes\022\021Get Boardin" +
      "g Pass\032\217\001Retrieves digital boarding pass" +
      "(es) in the requested format based on th" +
      "e index provided. Supply only one of tic" +
      "ketNumber, index, pnr or passId.J\"\n\003403\022" +
      "\033\n\031User lacks authorization.J\036\n\003404\022\027\n\025R" +
      "ecord was not found.\202\323\344\223\002\022\"\r/flights/pas" +
      "s:\001*\022\252\004\n\022updateBoardingPass\022\033.flights.Bo" +
      "ardingPassRecord\032\033.flights.BoardingPassR" +
      "ecord\"\331\003\222A\263\003\n\017Boarding Passes\022\024Update Bo" +
      "arding Pass\032\272\001Updates a boarding pass re" +
      "cord. Either ticketNumber and ticketLeg " +
      "or carrier, flight number, flightDate, b" +
      "oardingPoint and sequenceNumber must be " +
      "provided. All other fields are optional." +
      "J0\n\003400\022)\n\'There is a problem with the i" +
      "nput data.J\"\n\003403\022\033\n\031User lacks authoriz" +
      "ation.J\036\n\003404\022\027\n\025Record was not found.JW" +
      "\n\003503\022P\nNServer is unavailable. Back off" +
      " for 250ms and repeat request until succ" +
      "essful.\202\323\344\223\002\034\032\027/flights/boardingRecord:\001" +
      "*\022\204\002\n\022deleteBoardingPass\022\".flights.Board" +
      "ingPassRecordRequest\032\026.google.protobuf.E" +
      "mpty\"\261\001\222A\213\001\n\017Boarding Passes\022\024Delete Boa" +
      "rding Pass\032\036Deletes a boarding pass reco" +
      "rdJ\"\n\003403\022\033\n\031User lacks authorization.J\036" +
      "\n\003404\022\027\n\025Record was not found.\202\323\344\223\002\034*\027/f" +
      "lights/boardingRecord:\001*B\215\003\n\030com.passkit" +
      ".grpc.FlightsZ,stash.passkit.com/io/mode" +
      "l/sdk/go/io/flights\252\002\024PassKit.Grpc.Fligh" +
      "ts\222A\252\002\022\200\002\n\023PassKit Flights API\022iThe Pass" +
      "Kit Flights API lets you manage your fli" +
      "ghts and boarding passes for Apple Walle" +
      "t and Google Pay.\0328https://passkit.com/l" +
      "egal/terms-of-subscription-service/\"?\n\017P" +
      "assKit Support\022\027https://docs.passkit.io\032" +
      "\023support@passkit.com2\0030.1*\001\0022\020applicatio" +
      "n/json:\020application/jsonb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
          com.passkit.grpc.Flights.BoardingPass.getDescriptor(),
          com.passkit.grpc.Flights.Airport.getDescriptor(),
          com.passkit.grpc.Flights.FlightOuterClass.getDescriptor(),
          com.passkit.grpc.Flights.FlightDesignatorOuterClass.getDescriptor(),
          com.passkit.grpc.Flights.CarrierOuterClass.getDescriptor(),
          com.passkit.grpc.Flights.Common.getDescriptor(),
        });
    descriptor.resolveAllFeaturesImmutable();
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
    com.passkit.grpc.Flights.BoardingPass.getDescriptor();
    com.passkit.grpc.Flights.Airport.getDescriptor();
    com.passkit.grpc.Flights.FlightOuterClass.getDescriptor();
    com.passkit.grpc.Flights.FlightDesignatorOuterClass.getDescriptor();
    com.passkit.grpc.Flights.CarrierOuterClass.getDescriptor();
    com.passkit.grpc.Flights.Common.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Operation);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Swagger);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
