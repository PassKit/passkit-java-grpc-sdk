// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: io/flights/flight_designator.proto
// Protobuf Java Version: 4.31.0

package com.passkit.grpc.Flights;

@com.google.protobuf.Generated
public final class FlightDesignatorOuterClass {
  private FlightDesignatorOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 0,
      /* suffix= */ "",
      FlightDesignatorOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlightDesignatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.FlightDesignator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    java.lang.String getCarrierCode();
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    com.google.protobuf.ByteString
        getCarrierCodeBytes();

    /**
     * <pre>
     * The flight number.  Note this number must match the carrier code.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    java.lang.String getFlightNumber();
    /**
     * <pre>
     * The flight number.  Note this number must match the carrier code.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    com.google.protobuf.ByteString
        getFlightNumberBytes();

    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     * @return Whether the validFrom field is set.
     */
    boolean hasValidFrom();
    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     * @return The validFrom.
     */
    com.passkit.grpc.CommonObjects.Date getValidFrom();
    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     */
    com.passkit.grpc.CommonObjects.DateOrBuilder getValidFromOrBuilder();

    /**
     * <pre>
     * Multiple designators can be active at a time. Provide a revision to distinguish between versions.
     * </pre>
     *
     * <code>uint32 revision = 4;</code>
     * @return The revision.
     */
    int getRevision();

    /**
     * <pre>
     * Setting to false will prevent further flights to be created against this flight number. Will automatically be set to false if a second designator with a validFrom date before the current date and after this designator's validFrom date is found.
     * </pre>
     *
     * <code>bool active = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The active.
     */
    boolean getActive();

    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     * @return Whether the schedule field is set.
     */
    boolean hasSchedule();
    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     * @return The schedule.
     */
    com.passkit.grpc.Flights.Common.FlightSchedule getSchedule();
    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     */
    com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder getScheduleOrBuilder();

    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
     * </pre>
     *
     * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingCarrierCode.
     */
    java.lang.String getOperatingCarrierCode();
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
     * </pre>
     *
     * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingCarrierCode.
     */
    com.google.protobuf.ByteString
        getOperatingCarrierCodeBytes();

    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
     * </pre>
     *
     * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingFlightNumber.
     */
    java.lang.String getOperatingFlightNumber();
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
     * </pre>
     *
     * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingFlightNumber.
     */
    com.google.protobuf.ByteString
        getOperatingFlightNumberBytes();

    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @return A list containing the codeShareFlightNumbers.
     */
    java.util.List<java.lang.String>
        getCodeShareFlightNumbersList();
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @return The count of codeShareFlightNumbers.
     */
    int getCodeShareFlightNumbersCount();
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @param index The index of the element to return.
     * @return The codeShareFlightNumbers at the given index.
     */
    java.lang.String getCodeShareFlightNumbers(int index);
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the codeShareFlightNumbers at the given index.
     */
    com.google.protobuf.ByteString
        getCodeShareFlightNumbersBytes(int index);

    /**
     * <pre>
     * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
     * </pre>
     *
     * <code>string origin = 10;</code>
     * @return The origin.
     */
    java.lang.String getOrigin();
    /**
     * <pre>
     * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
     * </pre>
     *
     * <code>string origin = 10;</code>
     * @return The bytes for origin.
     */
    com.google.protobuf.ByteString
        getOriginBytes();

    /**
     * <pre>
     * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
     * </pre>
     *
     * <code>string destination = 11;</code>
     * @return The destination.
     */
    java.lang.String getDestination();
    /**
     * <pre>
     * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
     * </pre>
     *
     * <code>string destination = 11;</code>
     * @return The bytes for destination.
     */
    com.google.protobuf.ByteString
        getDestinationBytes();

    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @return A list containing the transitPoints.
     */
    java.util.List<java.lang.String>
        getTransitPointsList();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @return The count of transitPoints.
     */
    int getTransitPointsCount();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @param index The index of the element to return.
     * @return The transitPoints at the given index.
     */
    java.lang.String getTransitPoints(int index);
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitPoints at the given index.
     */
    com.google.protobuf.ByteString
        getTransitPointsBytes(int index);

    /**
     * <pre>
     * The default terminal that the flight departs from.
     * </pre>
     *
     * <code>string departureTerminal = 13;</code>
     * @return The departureTerminal.
     */
    java.lang.String getDepartureTerminal();
    /**
     * <pre>
     * The default terminal that the flight departs from.
     * </pre>
     *
     * <code>string departureTerminal = 13;</code>
     * @return The bytes for departureTerminal.
     */
    com.google.protobuf.ByteString
        getDepartureTerminalBytes();

    /**
     * <pre>
     * The default terminal of the final destination.
     * </pre>
     *
     * <code>string arrivalTerminal = 14;</code>
     * @return The arrivalTerminal.
     */
    java.lang.String getArrivalTerminal();
    /**
     * <pre>
     * The default terminal of the final destination.
     * </pre>
     *
     * <code>string arrivalTerminal = 14;</code>
     * @return The bytes for arrivalTerminal.
     */
    com.google.protobuf.ByteString
        getArrivalTerminalBytes();

    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @return A list containing the transitTerminals.
     */
    java.util.List<java.lang.String>
        getTransitTerminalsList();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @return The count of transitTerminals.
     */
    int getTransitTerminalsCount();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @param index The index of the element to return.
     * @return The transitTerminals at the given index.
     */
    java.lang.String getTransitTerminals(int index);
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitTerminals at the given index.
     */
    com.google.protobuf.ByteString
        getTransitTerminalsBytes(int index);

    /**
     * <pre>
     * The Boarding Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
     * @return The enum numeric value on the wire for boardingPolicy.
     */
    int getBoardingPolicyValue();
    /**
     * <pre>
     * The Boarding Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
     * @return The boardingPolicy.
     */
    com.passkit.grpc.Flights.Common.BoardingPolicy getBoardingPolicy();

    /**
     * <pre>
     * The Seat Class Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
     * @return The enum numeric value on the wire for seatClassPolicy.
     */
    int getSeatClassPolicyValue();
    /**
     * <pre>
     * The Seat Class Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
     * @return The seatClassPolicy.
     */
    com.passkit.grpc.Flights.Common.SeatClassPolicy getSeatClassPolicy();

    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return A list containing the alerts.
     */
    java.util.List<com.passkit.grpc.Flights.Common.FlightAlerts> getAlertsList();
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return The count of alerts.
     */
    int getAlertsCount();
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @param index The index of the element to return.
     * @return The alerts at the given index.
     */
    com.passkit.grpc.Flights.Common.FlightAlerts getAlerts(int index);
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return A list containing the enum numeric values on the wire for alerts.
     */
    java.util.List<java.lang.Integer>
    getAlertsValueList();
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of alerts at the given index.
     */
    int getAlertsValue(int index);

    /**
     * <pre>
     * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
     * </pre>
     *
     * <code>string passTemplateId = 19;</code>
     * @return The passTemplateId.
     */
    java.lang.String getPassTemplateId();
    /**
     * <pre>
     * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
     * </pre>
     *
     * <code>string passTemplateId = 19;</code>
     * @return The bytes for passTemplateId.
     */
    com.google.protobuf.ByteString
        getPassTemplateIdBytes();

    /**
     * <pre>
     * Minutes after scheduled arrival time to automatically invalidate the pass. Enter a value of 9999999 or greater if the pass should not auto invalidate. Default is 48 hours.
     * </pre>
     *
     * <code>uint32 autoInvalidateAfter = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The autoInvalidateAfter.
     */
    int getAutoInvalidateAfter();

    /**
     * <pre>
     * Deprecated: Use InvalidateCancelledPasses.
     * </pre>
     *
     * <code>bool autoInvalidateCancelledPasses = 21 [deprecated = true];</code>
     * @deprecated flights.FlightDesignator.autoInvalidateCancelledPasses is deprecated.
     *     See io/flights/flight_designator.proto;l=69
     * @return The autoInvalidateCancelledPasses.
     */
    @java.lang.Deprecated boolean getAutoInvalidateCancelledPasses();

    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<com.passkit.grpc.Proximity.GPSLocation> 
        getLocationMessagesList();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index);
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    int getLocationMessagesCount();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
        getLocationMessagesOrBuilderList();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
        int index);

    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<com.passkit.grpc.Proximity.Beacon> 
        getBeaconMessagesList();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index);
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    int getBeaconMessagesCount();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
        getBeaconMessagesOrBuilderList();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
        int index);

    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    java.util.List<com.passkit.grpc.Links.Link> 
        getDefaultLinksList();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    com.passkit.grpc.Links.Link getDefaultLinks(int index);
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    int getDefaultLinksCount();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
        getDefaultLinksOrBuilderList();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    com.passkit.grpc.Links.LinkOrBuilder getDefaultLinksOrBuilder(
        int index);

    /**
     * <pre>
     * If PassKit are generating barcodes, include conditional items. Default false.
     * </pre>
     *
     * <code>bool ConditionalItems = 25;</code>
     * @return The conditionalItems.
     */
    boolean getConditionalItems();

    /**
     * <pre>
     * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
     * </pre>
     *
     * <code>string BarcodeAdditionalData = 26;</code>
     * @return The barcodeAdditionalData.
     */
    java.lang.String getBarcodeAdditionalData();
    /**
     * <pre>
     * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
     * </pre>
     *
     * <code>string BarcodeAdditionalData = 26;</code>
     * @return The bytes for barcodeAdditionalData.
     */
    com.google.protobuf.ByteString
        getBarcodeAdditionalDataBytes();

    /**
     * <pre>
     * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
     * </pre>
     *
     * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The enum numeric value on the wire for invalidateCancelledPasses.
     */
    int getInvalidateCancelledPassesValue();
    /**
     * <pre>
     * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
     * </pre>
     *
     * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The invalidateCancelledPasses.
     */
    com.passkit.grpc.CommonObjects.Toggle getInvalidateCancelledPasses();

    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     * @return Whether the urls field is set.
     */
    boolean hasUrls();
    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     * @return The urls.
     */
    com.passkit.grpc.Flights.Common.FlightURLs getUrls();
    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     */
    com.passkit.grpc.Flights.Common.FlightURLsOrBuilder getUrlsOrBuilder();
  }
  /**
   * <pre>
   * carrier code and flight number and valid from represent the primary key.
   * </pre>
   *
   * Protobuf type {@code flights.FlightDesignator}
   */
  public static final class FlightDesignator extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.FlightDesignator)
      FlightDesignatorOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 31,
        /* patch= */ 0,
        /* suffix= */ "",
        FlightDesignator.class.getName());
    }
    // Use FlightDesignator.newBuilder() to construct.
    private FlightDesignator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private FlightDesignator() {
      carrierCode_ = "";
      flightNumber_ = "";
      operatingCarrierCode_ = "";
      operatingFlightNumber_ = "";
      codeShareFlightNumbers_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      origin_ = "";
      destination_ = "";
      transitPoints_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      departureTerminal_ = "";
      arrivalTerminal_ = "";
      transitTerminals_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      boardingPolicy_ = 0;
      seatClassPolicy_ = 0;
      alerts_ = emptyIntList();
      passTemplateId_ = "";
      locationMessages_ = java.util.Collections.emptyList();
      beaconMessages_ = java.util.Collections.emptyList();
      defaultLinks_ = java.util.Collections.emptyList();
      barcodeAdditionalData_ = "";
      invalidateCancelledPasses_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.class, com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.Builder.class);
    }

    private int bitField0_;
    public static final int CARRIERCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object carrierCode_ = "";
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    @java.lang.Override
    public java.lang.String getCarrierCode() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carrierCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCarrierCodeBytes() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carrierCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLIGHTNUMBER_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object flightNumber_ = "";
    /**
     * <pre>
     * The flight number.  Note this number must match the carrier code.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    @java.lang.Override
    public java.lang.String getFlightNumber() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The flight number.  Note this number must match the carrier code.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlightNumberBytes() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALIDFROM_FIELD_NUMBER = 3;
    private com.passkit.grpc.CommonObjects.Date validFrom_;
    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     * @return Whether the validFrom field is set.
     */
    @java.lang.Override
    public boolean hasValidFrom() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     * @return The validFrom.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.Date getValidFrom() {
      return validFrom_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : validFrom_;
    }
    /**
     * <pre>
     * The date that the record is valid from. If not provided, then the date of submission will be used.
     * </pre>
     *
     * <code>.io.Date validFrom = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.DateOrBuilder getValidFromOrBuilder() {
      return validFrom_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : validFrom_;
    }

    public static final int REVISION_FIELD_NUMBER = 4;
    private int revision_ = 0;
    /**
     * <pre>
     * Multiple designators can be active at a time. Provide a revision to distinguish between versions.
     * </pre>
     *
     * <code>uint32 revision = 4;</code>
     * @return The revision.
     */
    @java.lang.Override
    public int getRevision() {
      return revision_;
    }

    public static final int ACTIVE_FIELD_NUMBER = 5;
    private boolean active_ = false;
    /**
     * <pre>
     * Setting to false will prevent further flights to be created against this flight number. Will automatically be set to false if a second designator with a validFrom date before the current date and after this designator's validFrom date is found.
     * </pre>
     *
     * <code>bool active = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The active.
     */
    @java.lang.Override
    public boolean getActive() {
      return active_;
    }

    public static final int SCHEDULE_FIELD_NUMBER = 6;
    private com.passkit.grpc.Flights.Common.FlightSchedule schedule_;
    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     * @return Whether the schedule field is set.
     */
    @java.lang.Override
    public boolean hasSchedule() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     * @return The schedule.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Common.FlightSchedule getSchedule() {
      return schedule_ == null ? com.passkit.grpc.Flights.Common.FlightSchedule.getDefaultInstance() : schedule_;
    }
    /**
     * <pre>
     * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
     * </pre>
     *
     * <code>.flights.FlightSchedule schedule = 6;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder getScheduleOrBuilder() {
      return schedule_ == null ? com.passkit.grpc.Flights.Common.FlightSchedule.getDefaultInstance() : schedule_;
    }

    public static final int OPERATINGCARRIERCODE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object operatingCarrierCode_ = "";
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
     * </pre>
     *
     * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingCarrierCode.
     */
    @java.lang.Override
    public java.lang.String getOperatingCarrierCode() {
      java.lang.Object ref = operatingCarrierCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operatingCarrierCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
     * </pre>
     *
     * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingCarrierCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperatingCarrierCodeBytes() {
      java.lang.Object ref = operatingCarrierCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatingCarrierCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPERATINGFLIGHTNUMBER_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object operatingFlightNumber_ = "";
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
     * </pre>
     *
     * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingFlightNumber.
     */
    @java.lang.Override
    public java.lang.String getOperatingFlightNumber() {
      java.lang.Object ref = operatingFlightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operatingFlightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
     * </pre>
     *
     * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingFlightNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperatingFlightNumberBytes() {
      java.lang.Object ref = operatingFlightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatingFlightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODESHAREFLIGHTNUMBERS_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList codeShareFlightNumbers_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @return A list containing the codeShareFlightNumbers.
     */
    public com.google.protobuf.ProtocolStringList
        getCodeShareFlightNumbersList() {
      return codeShareFlightNumbers_;
    }
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @return The count of codeShareFlightNumbers.
     */
    public int getCodeShareFlightNumbersCount() {
      return codeShareFlightNumbers_.size();
    }
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @param index The index of the element to return.
     * @return The codeShareFlightNumbers at the given index.
     */
    public java.lang.String getCodeShareFlightNumbers(int index) {
      return codeShareFlightNumbers_.get(index);
    }
    /**
     * <pre>
     * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
     * </pre>
     *
     * <code>repeated string codeShareFlightNumbers = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the codeShareFlightNumbers at the given index.
     */
    public com.google.protobuf.ByteString
        getCodeShareFlightNumbersBytes(int index) {
      return codeShareFlightNumbers_.getByteString(index);
    }

    public static final int ORIGIN_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private volatile java.lang.Object origin_ = "";
    /**
     * <pre>
     * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
     * </pre>
     *
     * <code>string origin = 10;</code>
     * @return The origin.
     */
    @java.lang.Override
    public java.lang.String getOrigin() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        origin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
     * </pre>
     *
     * <code>string origin = 10;</code>
     * @return The bytes for origin.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOriginBytes() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        origin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTINATION_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private volatile java.lang.Object destination_ = "";
    /**
     * <pre>
     * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
     * </pre>
     *
     * <code>string destination = 11;</code>
     * @return The destination.
     */
    @java.lang.Override
    public java.lang.String getDestination() {
      java.lang.Object ref = destination_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        destination_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
     * </pre>
     *
     * <code>string destination = 11;</code>
     * @return The bytes for destination.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDestinationBytes() {
      java.lang.Object ref = destination_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        destination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRANSITPOINTS_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList transitPoints_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @return A list containing the transitPoints.
     */
    public com.google.protobuf.ProtocolStringList
        getTransitPointsList() {
      return transitPoints_;
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @return The count of transitPoints.
     */
    public int getTransitPointsCount() {
      return transitPoints_.size();
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @param index The index of the element to return.
     * @return The transitPoints at the given index.
     */
    public java.lang.String getTransitPoints(int index) {
      return transitPoints_.get(index);
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
     * </pre>
     *
     * <code>repeated string transitPoints = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitPoints at the given index.
     */
    public com.google.protobuf.ByteString
        getTransitPointsBytes(int index) {
      return transitPoints_.getByteString(index);
    }

    public static final int DEPARTURETERMINAL_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private volatile java.lang.Object departureTerminal_ = "";
    /**
     * <pre>
     * The default terminal that the flight departs from.
     * </pre>
     *
     * <code>string departureTerminal = 13;</code>
     * @return The departureTerminal.
     */
    @java.lang.Override
    public java.lang.String getDepartureTerminal() {
      java.lang.Object ref = departureTerminal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        departureTerminal_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The default terminal that the flight departs from.
     * </pre>
     *
     * <code>string departureTerminal = 13;</code>
     * @return The bytes for departureTerminal.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDepartureTerminalBytes() {
      java.lang.Object ref = departureTerminal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        departureTerminal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARRIVALTERMINAL_FIELD_NUMBER = 14;
    @SuppressWarnings("serial")
    private volatile java.lang.Object arrivalTerminal_ = "";
    /**
     * <pre>
     * The default terminal of the final destination.
     * </pre>
     *
     * <code>string arrivalTerminal = 14;</code>
     * @return The arrivalTerminal.
     */
    @java.lang.Override
    public java.lang.String getArrivalTerminal() {
      java.lang.Object ref = arrivalTerminal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        arrivalTerminal_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The default terminal of the final destination.
     * </pre>
     *
     * <code>string arrivalTerminal = 14;</code>
     * @return The bytes for arrivalTerminal.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getArrivalTerminalBytes() {
      java.lang.Object ref = arrivalTerminal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        arrivalTerminal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRANSITTERMINALS_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList transitTerminals_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @return A list containing the transitTerminals.
     */
    public com.google.protobuf.ProtocolStringList
        getTransitTerminalsList() {
      return transitTerminals_;
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @return The count of transitTerminals.
     */
    public int getTransitTerminalsCount() {
      return transitTerminals_.size();
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @param index The index of the element to return.
     * @return The transitTerminals at the given index.
     */
    public java.lang.String getTransitTerminals(int index) {
      return transitTerminals_.get(index);
    }
    /**
     * <pre>
     * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
     * </pre>
     *
     * <code>repeated string transitTerminals = 15;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitTerminals at the given index.
     */
    public com.google.protobuf.ByteString
        getTransitTerminalsBytes(int index) {
      return transitTerminals_.getByteString(index);
    }

    public static final int BOARDINGPOLICY_FIELD_NUMBER = 16;
    private int boardingPolicy_ = 0;
    /**
     * <pre>
     * The Boarding Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
     * @return The enum numeric value on the wire for boardingPolicy.
     */
    @java.lang.Override public int getBoardingPolicyValue() {
      return boardingPolicy_;
    }
    /**
     * <pre>
     * The Boarding Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
     * @return The boardingPolicy.
     */
    @java.lang.Override public com.passkit.grpc.Flights.Common.BoardingPolicy getBoardingPolicy() {
      com.passkit.grpc.Flights.Common.BoardingPolicy result = com.passkit.grpc.Flights.Common.BoardingPolicy.forNumber(boardingPolicy_);
      return result == null ? com.passkit.grpc.Flights.Common.BoardingPolicy.UNRECOGNIZED : result;
    }

    public static final int SEATCLASSPOLICY_FIELD_NUMBER = 17;
    private int seatClassPolicy_ = 0;
    /**
     * <pre>
     * The Seat Class Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
     * @return The enum numeric value on the wire for seatClassPolicy.
     */
    @java.lang.Override public int getSeatClassPolicyValue() {
      return seatClassPolicy_;
    }
    /**
     * <pre>
     * The Seat Class Policy is used to determine informational labels on the pass.
     * </pre>
     *
     * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
     * @return The seatClassPolicy.
     */
    @java.lang.Override public com.passkit.grpc.Flights.Common.SeatClassPolicy getSeatClassPolicy() {
      com.passkit.grpc.Flights.Common.SeatClassPolicy result = com.passkit.grpc.Flights.Common.SeatClassPolicy.forNumber(seatClassPolicy_);
      return result == null ? com.passkit.grpc.Flights.Common.SeatClassPolicy.UNRECOGNIZED : result;
    }

    public static final int ALERTS_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList alerts_ =
        emptyIntList();
    private static final     com.google.protobuf.Internal.IntListAdapter.IntConverter<
        com.passkit.grpc.Flights.Common.FlightAlerts> alerts_converter_ =
            new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                com.passkit.grpc.Flights.Common.FlightAlerts>() {
              public com.passkit.grpc.Flights.Common.FlightAlerts convert(int from) {
                com.passkit.grpc.Flights.Common.FlightAlerts result = com.passkit.grpc.Flights.Common.FlightAlerts.forNumber(from);
                return result == null ? com.passkit.grpc.Flights.Common.FlightAlerts.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return A list containing the alerts.
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Flights.Common.FlightAlerts> getAlertsList() {
      return new com.google.protobuf.Internal.IntListAdapter<
          com.passkit.grpc.Flights.Common.FlightAlerts>(alerts_, alerts_converter_);
    }
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return The count of alerts.
     */
    @java.lang.Override
    public int getAlertsCount() {
      return alerts_.size();
    }
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @param index The index of the element to return.
     * @return The alerts at the given index.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Common.FlightAlerts getAlerts(int index) {
      return alerts_converter_.convert(alerts_.getInt(index));
    }
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @return A list containing the enum numeric values on the wire for alerts.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getAlertsValueList() {
      return alerts_;
    }
    /**
     * <pre>
     * An array of alerts to subscribe to for the flight. Note that additional charges apply.
     * </pre>
     *
     * <code>repeated .flights.FlightAlerts alerts = 18;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of alerts at the given index.
     */
    @java.lang.Override
    public int getAlertsValue(int index) {
      return alerts_.getInt(index);
    }
    private int alertsMemoizedSerializedSize;

    public static final int PASSTEMPLATEID_FIELD_NUMBER = 19;
    @SuppressWarnings("serial")
    private volatile java.lang.Object passTemplateId_ = "";
    /**
     * <pre>
     * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
     * </pre>
     *
     * <code>string passTemplateId = 19;</code>
     * @return The passTemplateId.
     */
    @java.lang.Override
    public java.lang.String getPassTemplateId() {
      java.lang.Object ref = passTemplateId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passTemplateId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
     * </pre>
     *
     * <code>string passTemplateId = 19;</code>
     * @return The bytes for passTemplateId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassTemplateIdBytes() {
      java.lang.Object ref = passTemplateId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passTemplateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTOINVALIDATEAFTER_FIELD_NUMBER = 20;
    private int autoInvalidateAfter_ = 0;
    /**
     * <pre>
     * Minutes after scheduled arrival time to automatically invalidate the pass. Enter a value of 9999999 or greater if the pass should not auto invalidate. Default is 48 hours.
     * </pre>
     *
     * <code>uint32 autoInvalidateAfter = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The autoInvalidateAfter.
     */
    @java.lang.Override
    public int getAutoInvalidateAfter() {
      return autoInvalidateAfter_;
    }

    public static final int AUTOINVALIDATECANCELLEDPASSES_FIELD_NUMBER = 21;
    private boolean autoInvalidateCancelledPasses_ = false;
    /**
     * <pre>
     * Deprecated: Use InvalidateCancelledPasses.
     * </pre>
     *
     * <code>bool autoInvalidateCancelledPasses = 21 [deprecated = true];</code>
     * @deprecated flights.FlightDesignator.autoInvalidateCancelledPasses is deprecated.
     *     See io/flights/flight_designator.proto;l=69
     * @return The autoInvalidateCancelledPasses.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getAutoInvalidateCancelledPasses() {
      return autoInvalidateCancelledPasses_;
    }

    public static final int LOCATIONMESSAGES_FIELD_NUMBER = 22;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Proximity.GPSLocation> locationMessages_;
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Proximity.GPSLocation> getLocationMessagesList() {
      return locationMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
        getLocationMessagesOrBuilderList() {
      return locationMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public int getLocationMessagesCount() {
      return locationMessages_.size();
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index) {
      return locationMessages_.get(index);
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
        int index) {
      return locationMessages_.get(index);
    }

    public static final int BEACONMESSAGES_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Proximity.Beacon> beaconMessages_;
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Proximity.Beacon> getBeaconMessagesList() {
      return beaconMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
        getBeaconMessagesOrBuilderList() {
      return beaconMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public int getBeaconMessagesCount() {
      return beaconMessages_.size();
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index) {
      return beaconMessages_.get(index);
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
        int index) {
      return beaconMessages_.get(index);
    }

    public static final int DEFAULTLINKS_FIELD_NUMBER = 24;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Links.Link> defaultLinks_;
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Links.Link> getDefaultLinksList() {
      return defaultLinks_;
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
        getDefaultLinksOrBuilderList() {
      return defaultLinks_;
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    @java.lang.Override
    public int getDefaultLinksCount() {
      return defaultLinks_.size();
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Links.Link getDefaultLinks(int index) {
      return defaultLinks_.get(index);
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link defaultLinks = 24;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Links.LinkOrBuilder getDefaultLinksOrBuilder(
        int index) {
      return defaultLinks_.get(index);
    }

    public static final int CONDITIONALITEMS_FIELD_NUMBER = 25;
    private boolean conditionalItems_ = false;
    /**
     * <pre>
     * If PassKit are generating barcodes, include conditional items. Default false.
     * </pre>
     *
     * <code>bool ConditionalItems = 25;</code>
     * @return The conditionalItems.
     */
    @java.lang.Override
    public boolean getConditionalItems() {
      return conditionalItems_;
    }

    public static final int BARCODEADDITIONALDATA_FIELD_NUMBER = 26;
    @SuppressWarnings("serial")
    private volatile java.lang.Object barcodeAdditionalData_ = "";
    /**
     * <pre>
     * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
     * </pre>
     *
     * <code>string BarcodeAdditionalData = 26;</code>
     * @return The barcodeAdditionalData.
     */
    @java.lang.Override
    public java.lang.String getBarcodeAdditionalData() {
      java.lang.Object ref = barcodeAdditionalData_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        barcodeAdditionalData_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
     * </pre>
     *
     * <code>string BarcodeAdditionalData = 26;</code>
     * @return The bytes for barcodeAdditionalData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBarcodeAdditionalDataBytes() {
      java.lang.Object ref = barcodeAdditionalData_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        barcodeAdditionalData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVALIDATECANCELLEDPASSES_FIELD_NUMBER = 27;
    private int invalidateCancelledPasses_ = 0;
    /**
     * <pre>
     * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
     * </pre>
     *
     * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The enum numeric value on the wire for invalidateCancelledPasses.
     */
    @java.lang.Override public int getInvalidateCancelledPassesValue() {
      return invalidateCancelledPasses_;
    }
    /**
     * <pre>
     * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
     * </pre>
     *
     * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The invalidateCancelledPasses.
     */
    @java.lang.Override public com.passkit.grpc.CommonObjects.Toggle getInvalidateCancelledPasses() {
      com.passkit.grpc.CommonObjects.Toggle result = com.passkit.grpc.CommonObjects.Toggle.forNumber(invalidateCancelledPasses_);
      return result == null ? com.passkit.grpc.CommonObjects.Toggle.UNRECOGNIZED : result;
    }

    public static final int URLS_FIELD_NUMBER = 37;
    private com.passkit.grpc.Flights.Common.FlightURLs urls_;
    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     * @return Whether the urls field is set.
     */
    @java.lang.Override
    public boolean hasUrls() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     * @return The urls.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Common.FlightURLs getUrls() {
      return urls_ == null ? com.passkit.grpc.Flights.Common.FlightURLs.getDefaultInstance() : urls_;
    }
    /**
     * <pre>
     * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
     * </pre>
     *
     * <code>.flights.FlightURLs urls = 37;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Common.FlightURLsOrBuilder getUrlsOrBuilder() {
      return urls_ == null ? com.passkit.grpc.Flights.Common.FlightURLs.getDefaultInstance() : urls_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getValidFrom());
      }
      if (revision_ != 0) {
        output.writeUInt32(4, revision_);
      }
      if (active_ != false) {
        output.writeBool(5, active_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(6, getSchedule());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingCarrierCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, operatingCarrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingFlightNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, operatingFlightNumber_);
      }
      for (int i = 0; i < codeShareFlightNumbers_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 9, codeShareFlightNumbers_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(origin_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 10, origin_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(destination_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 11, destination_);
      }
      for (int i = 0; i < transitPoints_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, transitPoints_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(departureTerminal_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 13, departureTerminal_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(arrivalTerminal_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 14, arrivalTerminal_);
      }
      for (int i = 0; i < transitTerminals_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 15, transitTerminals_.getRaw(i));
      }
      if (boardingPolicy_ != com.passkit.grpc.Flights.Common.BoardingPolicy.BOARDING_POLICY_UNSPECIFIED.getNumber()) {
        output.writeEnum(16, boardingPolicy_);
      }
      if (seatClassPolicy_ != com.passkit.grpc.Flights.Common.SeatClassPolicy.SEAT_CLASS_POLICY_UNSPECIFIED.getNumber()) {
        output.writeEnum(17, seatClassPolicy_);
      }
      if (getAlertsList().size() > 0) {
        output.writeUInt32NoTag(146);
        output.writeUInt32NoTag(alertsMemoizedSerializedSize);
      }
      for (int i = 0; i < alerts_.size(); i++) {
        output.writeEnumNoTag(alerts_.getInt(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(passTemplateId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 19, passTemplateId_);
      }
      if (autoInvalidateAfter_ != 0) {
        output.writeUInt32(20, autoInvalidateAfter_);
      }
      if (autoInvalidateCancelledPasses_ != false) {
        output.writeBool(21, autoInvalidateCancelledPasses_);
      }
      for (int i = 0; i < locationMessages_.size(); i++) {
        output.writeMessage(22, locationMessages_.get(i));
      }
      for (int i = 0; i < beaconMessages_.size(); i++) {
        output.writeMessage(23, beaconMessages_.get(i));
      }
      for (int i = 0; i < defaultLinks_.size(); i++) {
        output.writeMessage(24, defaultLinks_.get(i));
      }
      if (conditionalItems_ != false) {
        output.writeBool(25, conditionalItems_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodeAdditionalData_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 26, barcodeAdditionalData_);
      }
      if (invalidateCancelledPasses_ != com.passkit.grpc.CommonObjects.Toggle.DO_NOT_USE.getNumber()) {
        output.writeEnum(27, invalidateCancelledPasses_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(37, getUrls());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValidFrom());
      }
      if (revision_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, revision_);
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, active_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSchedule());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingCarrierCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, operatingCarrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingFlightNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, operatingFlightNumber_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < codeShareFlightNumbers_.size(); i++) {
          dataSize += computeStringSizeNoTag(codeShareFlightNumbers_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCodeShareFlightNumbersList().size();
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(origin_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(10, origin_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(destination_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(11, destination_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < transitPoints_.size(); i++) {
          dataSize += computeStringSizeNoTag(transitPoints_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTransitPointsList().size();
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(departureTerminal_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(13, departureTerminal_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(arrivalTerminal_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(14, arrivalTerminal_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < transitTerminals_.size(); i++) {
          dataSize += computeStringSizeNoTag(transitTerminals_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTransitTerminalsList().size();
      }
      if (boardingPolicy_ != com.passkit.grpc.Flights.Common.BoardingPolicy.BOARDING_POLICY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, boardingPolicy_);
      }
      if (seatClassPolicy_ != com.passkit.grpc.Flights.Common.SeatClassPolicy.SEAT_CLASS_POLICY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, seatClassPolicy_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alerts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(alerts_.getInt(i));
        }
        size += dataSize;
        if (!getAlertsList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }alertsMemoizedSerializedSize = dataSize;
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(passTemplateId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(19, passTemplateId_);
      }
      if (autoInvalidateAfter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, autoInvalidateAfter_);
      }
      if (autoInvalidateCancelledPasses_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, autoInvalidateCancelledPasses_);
      }
      for (int i = 0; i < locationMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, locationMessages_.get(i));
      }
      for (int i = 0; i < beaconMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, beaconMessages_.get(i));
      }
      for (int i = 0; i < defaultLinks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, defaultLinks_.get(i));
      }
      if (conditionalItems_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, conditionalItems_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodeAdditionalData_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(26, barcodeAdditionalData_);
      }
      if (invalidateCancelledPasses_ != com.passkit.grpc.CommonObjects.Toggle.DO_NOT_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(27, invalidateCancelledPasses_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getUrls());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator other = (com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator) obj;

      if (!getCarrierCode()
          .equals(other.getCarrierCode())) return false;
      if (!getFlightNumber()
          .equals(other.getFlightNumber())) return false;
      if (hasValidFrom() != other.hasValidFrom()) return false;
      if (hasValidFrom()) {
        if (!getValidFrom()
            .equals(other.getValidFrom())) return false;
      }
      if (getRevision()
          != other.getRevision()) return false;
      if (getActive()
          != other.getActive()) return false;
      if (hasSchedule() != other.hasSchedule()) return false;
      if (hasSchedule()) {
        if (!getSchedule()
            .equals(other.getSchedule())) return false;
      }
      if (!getOperatingCarrierCode()
          .equals(other.getOperatingCarrierCode())) return false;
      if (!getOperatingFlightNumber()
          .equals(other.getOperatingFlightNumber())) return false;
      if (!getCodeShareFlightNumbersList()
          .equals(other.getCodeShareFlightNumbersList())) return false;
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
      if (!getDestination()
          .equals(other.getDestination())) return false;
      if (!getTransitPointsList()
          .equals(other.getTransitPointsList())) return false;
      if (!getDepartureTerminal()
          .equals(other.getDepartureTerminal())) return false;
      if (!getArrivalTerminal()
          .equals(other.getArrivalTerminal())) return false;
      if (!getTransitTerminalsList()
          .equals(other.getTransitTerminalsList())) return false;
      if (boardingPolicy_ != other.boardingPolicy_) return false;
      if (seatClassPolicy_ != other.seatClassPolicy_) return false;
      if (!alerts_.equals(other.alerts_)) return false;
      if (!getPassTemplateId()
          .equals(other.getPassTemplateId())) return false;
      if (getAutoInvalidateAfter()
          != other.getAutoInvalidateAfter()) return false;
      if (getAutoInvalidateCancelledPasses()
          != other.getAutoInvalidateCancelledPasses()) return false;
      if (!getLocationMessagesList()
          .equals(other.getLocationMessagesList())) return false;
      if (!getBeaconMessagesList()
          .equals(other.getBeaconMessagesList())) return false;
      if (!getDefaultLinksList()
          .equals(other.getDefaultLinksList())) return false;
      if (getConditionalItems()
          != other.getConditionalItems()) return false;
      if (!getBarcodeAdditionalData()
          .equals(other.getBarcodeAdditionalData())) return false;
      if (invalidateCancelledPasses_ != other.invalidateCancelledPasses_) return false;
      if (hasUrls() != other.hasUrls()) return false;
      if (hasUrls()) {
        if (!getUrls()
            .equals(other.getUrls())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARRIERCODE_FIELD_NUMBER;
      hash = (53 * hash) + getCarrierCode().hashCode();
      hash = (37 * hash) + FLIGHTNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getFlightNumber().hashCode();
      if (hasValidFrom()) {
        hash = (37 * hash) + VALIDFROM_FIELD_NUMBER;
        hash = (53 * hash) + getValidFrom().hashCode();
      }
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getRevision();
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      if (hasSchedule()) {
        hash = (37 * hash) + SCHEDULE_FIELD_NUMBER;
        hash = (53 * hash) + getSchedule().hashCode();
      }
      hash = (37 * hash) + OPERATINGCARRIERCODE_FIELD_NUMBER;
      hash = (53 * hash) + getOperatingCarrierCode().hashCode();
      hash = (37 * hash) + OPERATINGFLIGHTNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getOperatingFlightNumber().hashCode();
      if (getCodeShareFlightNumbersCount() > 0) {
        hash = (37 * hash) + CODESHAREFLIGHTNUMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getCodeShareFlightNumbersList().hashCode();
      }
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + DESTINATION_FIELD_NUMBER;
      hash = (53 * hash) + getDestination().hashCode();
      if (getTransitPointsCount() > 0) {
        hash = (37 * hash) + TRANSITPOINTS_FIELD_NUMBER;
        hash = (53 * hash) + getTransitPointsList().hashCode();
      }
      hash = (37 * hash) + DEPARTURETERMINAL_FIELD_NUMBER;
      hash = (53 * hash) + getDepartureTerminal().hashCode();
      hash = (37 * hash) + ARRIVALTERMINAL_FIELD_NUMBER;
      hash = (53 * hash) + getArrivalTerminal().hashCode();
      if (getTransitTerminalsCount() > 0) {
        hash = (37 * hash) + TRANSITTERMINALS_FIELD_NUMBER;
        hash = (53 * hash) + getTransitTerminalsList().hashCode();
      }
      hash = (37 * hash) + BOARDINGPOLICY_FIELD_NUMBER;
      hash = (53 * hash) + boardingPolicy_;
      hash = (37 * hash) + SEATCLASSPOLICY_FIELD_NUMBER;
      hash = (53 * hash) + seatClassPolicy_;
      if (getAlertsCount() > 0) {
        hash = (37 * hash) + ALERTS_FIELD_NUMBER;
        hash = (53 * hash) + alerts_.hashCode();
      }
      hash = (37 * hash) + PASSTEMPLATEID_FIELD_NUMBER;
      hash = (53 * hash) + getPassTemplateId().hashCode();
      hash = (37 * hash) + AUTOINVALIDATEAFTER_FIELD_NUMBER;
      hash = (53 * hash) + getAutoInvalidateAfter();
      hash = (37 * hash) + AUTOINVALIDATECANCELLEDPASSES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoInvalidateCancelledPasses());
      if (getLocationMessagesCount() > 0) {
        hash = (37 * hash) + LOCATIONMESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getLocationMessagesList().hashCode();
      }
      if (getBeaconMessagesCount() > 0) {
        hash = (37 * hash) + BEACONMESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getBeaconMessagesList().hashCode();
      }
      if (getDefaultLinksCount() > 0) {
        hash = (37 * hash) + DEFAULTLINKS_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultLinksList().hashCode();
      }
      hash = (37 * hash) + CONDITIONALITEMS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getConditionalItems());
      hash = (37 * hash) + BARCODEADDITIONALDATA_FIELD_NUMBER;
      hash = (53 * hash) + getBarcodeAdditionalData().hashCode();
      hash = (37 * hash) + INVALIDATECANCELLEDPASSES_FIELD_NUMBER;
      hash = (53 * hash) + invalidateCancelledPasses_;
      if (hasUrls()) {
        hash = (37 * hash) + URLS_FIELD_NUMBER;
        hash = (53 * hash) + getUrls().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * carrier code and flight number and valid from represent the primary key.
     * </pre>
     *
     * Protobuf type {@code flights.FlightDesignator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.FlightDesignator)
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.class, com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          internalGetValidFromFieldBuilder();
          internalGetScheduleFieldBuilder();
          internalGetLocationMessagesFieldBuilder();
          internalGetBeaconMessagesFieldBuilder();
          internalGetDefaultLinksFieldBuilder();
          internalGetUrlsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        carrierCode_ = "";
        flightNumber_ = "";
        validFrom_ = null;
        if (validFromBuilder_ != null) {
          validFromBuilder_.dispose();
          validFromBuilder_ = null;
        }
        revision_ = 0;
        active_ = false;
        schedule_ = null;
        if (scheduleBuilder_ != null) {
          scheduleBuilder_.dispose();
          scheduleBuilder_ = null;
        }
        operatingCarrierCode_ = "";
        operatingFlightNumber_ = "";
        codeShareFlightNumbers_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        origin_ = "";
        destination_ = "";
        transitPoints_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        departureTerminal_ = "";
        arrivalTerminal_ = "";
        transitTerminals_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        boardingPolicy_ = 0;
        seatClassPolicy_ = 0;
        alerts_ = emptyIntList();
        passTemplateId_ = "";
        autoInvalidateAfter_ = 0;
        autoInvalidateCancelledPasses_ = false;
        if (locationMessagesBuilder_ == null) {
          locationMessages_ = java.util.Collections.emptyList();
        } else {
          locationMessages_ = null;
          locationMessagesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (beaconMessagesBuilder_ == null) {
          beaconMessages_ = java.util.Collections.emptyList();
        } else {
          beaconMessages_ = null;
          beaconMessagesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (defaultLinksBuilder_ == null) {
          defaultLinks_ = java.util.Collections.emptyList();
        } else {
          defaultLinks_ = null;
          defaultLinksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        conditionalItems_ = false;
        barcodeAdditionalData_ = "";
        invalidateCancelledPasses_ = 0;
        urls_ = null;
        if (urlsBuilder_ != null) {
          urlsBuilder_.dispose();
          urlsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignator_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator build() {
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator buildPartial() {
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator result = new com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator result) {
        if (locationMessagesBuilder_ == null) {
          if (((bitField0_ & 0x00200000) != 0)) {
            locationMessages_ = java.util.Collections.unmodifiableList(locationMessages_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.locationMessages_ = locationMessages_;
        } else {
          result.locationMessages_ = locationMessagesBuilder_.build();
        }
        if (beaconMessagesBuilder_ == null) {
          if (((bitField0_ & 0x00400000) != 0)) {
            beaconMessages_ = java.util.Collections.unmodifiableList(beaconMessages_);
            bitField0_ = (bitField0_ & ~0x00400000);
          }
          result.beaconMessages_ = beaconMessages_;
        } else {
          result.beaconMessages_ = beaconMessagesBuilder_.build();
        }
        if (defaultLinksBuilder_ == null) {
          if (((bitField0_ & 0x00800000) != 0)) {
            defaultLinks_ = java.util.Collections.unmodifiableList(defaultLinks_);
            bitField0_ = (bitField0_ & ~0x00800000);
          }
          result.defaultLinks_ = defaultLinks_;
        } else {
          result.defaultLinks_ = defaultLinksBuilder_.build();
        }
      }

      private void buildPartial0(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.carrierCode_ = carrierCode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.flightNumber_ = flightNumber_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.validFrom_ = validFromBuilder_ == null
              ? validFrom_
              : validFromBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.revision_ = revision_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.active_ = active_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.schedule_ = scheduleBuilder_ == null
              ? schedule_
              : scheduleBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.operatingCarrierCode_ = operatingCarrierCode_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.operatingFlightNumber_ = operatingFlightNumber_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          codeShareFlightNumbers_.makeImmutable();
          result.codeShareFlightNumbers_ = codeShareFlightNumbers_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.origin_ = origin_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.destination_ = destination_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          transitPoints_.makeImmutable();
          result.transitPoints_ = transitPoints_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.departureTerminal_ = departureTerminal_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.arrivalTerminal_ = arrivalTerminal_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          transitTerminals_.makeImmutable();
          result.transitTerminals_ = transitTerminals_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.boardingPolicy_ = boardingPolicy_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.seatClassPolicy_ = seatClassPolicy_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          alerts_.makeImmutable();
          result.alerts_ = alerts_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.passTemplateId_ = passTemplateId_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.autoInvalidateAfter_ = autoInvalidateAfter_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.autoInvalidateCancelledPasses_ = autoInvalidateCancelledPasses_;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.conditionalItems_ = conditionalItems_;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.barcodeAdditionalData_ = barcodeAdditionalData_;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.invalidateCancelledPasses_ = invalidateCancelledPasses_;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.urls_ = urlsBuilder_ == null
              ? urls_
              : urlsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator) {
          return mergeFrom((com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator other) {
        if (other == com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator.getDefaultInstance()) return this;
        if (!other.getCarrierCode().isEmpty()) {
          carrierCode_ = other.carrierCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFlightNumber().isEmpty()) {
          flightNumber_ = other.flightNumber_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasValidFrom()) {
          mergeValidFrom(other.getValidFrom());
        }
        if (other.getRevision() != 0) {
          setRevision(other.getRevision());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.hasSchedule()) {
          mergeSchedule(other.getSchedule());
        }
        if (!other.getOperatingCarrierCode().isEmpty()) {
          operatingCarrierCode_ = other.operatingCarrierCode_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getOperatingFlightNumber().isEmpty()) {
          operatingFlightNumber_ = other.operatingFlightNumber_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (!other.codeShareFlightNumbers_.isEmpty()) {
          if (codeShareFlightNumbers_.isEmpty()) {
            codeShareFlightNumbers_ = other.codeShareFlightNumbers_;
            bitField0_ |= 0x00000100;
          } else {
            ensureCodeShareFlightNumbersIsMutable();
            codeShareFlightNumbers_.addAll(other.codeShareFlightNumbers_);
          }
          onChanged();
        }
        if (!other.getOrigin().isEmpty()) {
          origin_ = other.origin_;
          bitField0_ |= 0x00000200;
          onChanged();
        }
        if (!other.getDestination().isEmpty()) {
          destination_ = other.destination_;
          bitField0_ |= 0x00000400;
          onChanged();
        }
        if (!other.transitPoints_.isEmpty()) {
          if (transitPoints_.isEmpty()) {
            transitPoints_ = other.transitPoints_;
            bitField0_ |= 0x00000800;
          } else {
            ensureTransitPointsIsMutable();
            transitPoints_.addAll(other.transitPoints_);
          }
          onChanged();
        }
        if (!other.getDepartureTerminal().isEmpty()) {
          departureTerminal_ = other.departureTerminal_;
          bitField0_ |= 0x00001000;
          onChanged();
        }
        if (!other.getArrivalTerminal().isEmpty()) {
          arrivalTerminal_ = other.arrivalTerminal_;
          bitField0_ |= 0x00002000;
          onChanged();
        }
        if (!other.transitTerminals_.isEmpty()) {
          if (transitTerminals_.isEmpty()) {
            transitTerminals_ = other.transitTerminals_;
            bitField0_ |= 0x00004000;
          } else {
            ensureTransitTerminalsIsMutable();
            transitTerminals_.addAll(other.transitTerminals_);
          }
          onChanged();
        }
        if (other.boardingPolicy_ != 0) {
          setBoardingPolicyValue(other.getBoardingPolicyValue());
        }
        if (other.seatClassPolicy_ != 0) {
          setSeatClassPolicyValue(other.getSeatClassPolicyValue());
        }
        if (!other.alerts_.isEmpty()) {
          if (alerts_.isEmpty()) {
            alerts_ = other.alerts_;
            alerts_.makeImmutable();
            bitField0_ |= 0x00020000;
          } else {
            ensureAlertsIsMutable();
            alerts_.addAll(other.alerts_);
          }
          onChanged();
        }
        if (!other.getPassTemplateId().isEmpty()) {
          passTemplateId_ = other.passTemplateId_;
          bitField0_ |= 0x00040000;
          onChanged();
        }
        if (other.getAutoInvalidateAfter() != 0) {
          setAutoInvalidateAfter(other.getAutoInvalidateAfter());
        }
        if (other.getAutoInvalidateCancelledPasses() != false) {
          setAutoInvalidateCancelledPasses(other.getAutoInvalidateCancelledPasses());
        }
        if (locationMessagesBuilder_ == null) {
          if (!other.locationMessages_.isEmpty()) {
            if (locationMessages_.isEmpty()) {
              locationMessages_ = other.locationMessages_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureLocationMessagesIsMutable();
              locationMessages_.addAll(other.locationMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.locationMessages_.isEmpty()) {
            if (locationMessagesBuilder_.isEmpty()) {
              locationMessagesBuilder_.dispose();
              locationMessagesBuilder_ = null;
              locationMessages_ = other.locationMessages_;
              bitField0_ = (bitField0_ & ~0x00200000);
              locationMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetLocationMessagesFieldBuilder() : null;
            } else {
              locationMessagesBuilder_.addAllMessages(other.locationMessages_);
            }
          }
        }
        if (beaconMessagesBuilder_ == null) {
          if (!other.beaconMessages_.isEmpty()) {
            if (beaconMessages_.isEmpty()) {
              beaconMessages_ = other.beaconMessages_;
              bitField0_ = (bitField0_ & ~0x00400000);
            } else {
              ensureBeaconMessagesIsMutable();
              beaconMessages_.addAll(other.beaconMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.beaconMessages_.isEmpty()) {
            if (beaconMessagesBuilder_.isEmpty()) {
              beaconMessagesBuilder_.dispose();
              beaconMessagesBuilder_ = null;
              beaconMessages_ = other.beaconMessages_;
              bitField0_ = (bitField0_ & ~0x00400000);
              beaconMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetBeaconMessagesFieldBuilder() : null;
            } else {
              beaconMessagesBuilder_.addAllMessages(other.beaconMessages_);
            }
          }
        }
        if (defaultLinksBuilder_ == null) {
          if (!other.defaultLinks_.isEmpty()) {
            if (defaultLinks_.isEmpty()) {
              defaultLinks_ = other.defaultLinks_;
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              ensureDefaultLinksIsMutable();
              defaultLinks_.addAll(other.defaultLinks_);
            }
            onChanged();
          }
        } else {
          if (!other.defaultLinks_.isEmpty()) {
            if (defaultLinksBuilder_.isEmpty()) {
              defaultLinksBuilder_.dispose();
              defaultLinksBuilder_ = null;
              defaultLinks_ = other.defaultLinks_;
              bitField0_ = (bitField0_ & ~0x00800000);
              defaultLinksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetDefaultLinksFieldBuilder() : null;
            } else {
              defaultLinksBuilder_.addAllMessages(other.defaultLinks_);
            }
          }
        }
        if (other.getConditionalItems() != false) {
          setConditionalItems(other.getConditionalItems());
        }
        if (!other.getBarcodeAdditionalData().isEmpty()) {
          barcodeAdditionalData_ = other.barcodeAdditionalData_;
          bitField0_ |= 0x02000000;
          onChanged();
        }
        if (other.invalidateCancelledPasses_ != 0) {
          setInvalidateCancelledPassesValue(other.getInvalidateCancelledPassesValue());
        }
        if (other.hasUrls()) {
          mergeUrls(other.getUrls());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                carrierCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                flightNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    internalGetValidFromFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                revision_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                active_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    internalGetScheduleFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                operatingCarrierCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                operatingFlightNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureCodeShareFlightNumbersIsMutable();
                codeShareFlightNumbers_.add(s);
                break;
              } // case 74
              case 82: {
                origin_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                destination_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTransitPointsIsMutable();
                transitPoints_.add(s);
                break;
              } // case 98
              case 106: {
                departureTerminal_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 114: {
                arrivalTerminal_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00002000;
                break;
              } // case 114
              case 122: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTransitTerminalsIsMutable();
                transitTerminals_.add(s);
                break;
              } // case 122
              case 128: {
                boardingPolicy_ = input.readEnum();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                seatClassPolicy_ = input.readEnum();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                int tmpRaw = input.readEnum();
                ensureAlertsIsMutable();
                alerts_.addInt(tmpRaw);
                break;
              } // case 144
              case 146: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAlertsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  alerts_.addInt(input.readEnum());
                }
                input.popLimit(limit);
                break;
              } // case 146
              case 154: {
                passTemplateId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00040000;
                break;
              } // case 154
              case 160: {
                autoInvalidateAfter_ = input.readUInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                autoInvalidateCancelledPasses_ = input.readBool();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 178: {
                com.passkit.grpc.Proximity.GPSLocation m =
                    input.readMessage(
                        com.passkit.grpc.Proximity.GPSLocation.parser(),
                        extensionRegistry);
                if (locationMessagesBuilder_ == null) {
                  ensureLocationMessagesIsMutable();
                  locationMessages_.add(m);
                } else {
                  locationMessagesBuilder_.addMessage(m);
                }
                break;
              } // case 178
              case 186: {
                com.passkit.grpc.Proximity.Beacon m =
                    input.readMessage(
                        com.passkit.grpc.Proximity.Beacon.parser(),
                        extensionRegistry);
                if (beaconMessagesBuilder_ == null) {
                  ensureBeaconMessagesIsMutable();
                  beaconMessages_.add(m);
                } else {
                  beaconMessagesBuilder_.addMessage(m);
                }
                break;
              } // case 186
              case 194: {
                com.passkit.grpc.Links.Link m =
                    input.readMessage(
                        com.passkit.grpc.Links.Link.parser(),
                        extensionRegistry);
                if (defaultLinksBuilder_ == null) {
                  ensureDefaultLinksIsMutable();
                  defaultLinks_.add(m);
                } else {
                  defaultLinksBuilder_.addMessage(m);
                }
                break;
              } // case 194
              case 200: {
                conditionalItems_ = input.readBool();
                bitField0_ |= 0x01000000;
                break;
              } // case 200
              case 210: {
                barcodeAdditionalData_ = input.readStringRequireUtf8();
                bitField0_ |= 0x02000000;
                break;
              } // case 210
              case 216: {
                invalidateCancelledPasses_ = input.readEnum();
                bitField0_ |= 0x04000000;
                break;
              } // case 216
              case 298: {
                input.readMessage(
                    internalGetUrlsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x08000000;
                break;
              } // case 298
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object carrierCode_ = "";
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The carrierCode.
       */
      public java.lang.String getCarrierCode() {
        java.lang.Object ref = carrierCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          carrierCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for carrierCode.
       */
      public com.google.protobuf.ByteString
          getCarrierCodeBytes() {
        java.lang.Object ref = carrierCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          carrierCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCarrierCode() {
        carrierCode_ = getDefaultInstance().getCarrierCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight. In the case of a code-share, this should be the carrier code that you wish to present to the customer. This could be the marketing code, or the operating airline code. A carrier record for this code must exist.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object flightNumber_ = "";
      /**
       * <pre>
       * The flight number.  Note this number must match the carrier code.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The flightNumber.
       */
      public java.lang.String getFlightNumber() {
        java.lang.Object ref = flightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The flight number.  Note this number must match the carrier code.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for flightNumber.
       */
      public com.google.protobuf.ByteString
          getFlightNumberBytes() {
        java.lang.Object ref = flightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The flight number.  Note this number must match the carrier code.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number.  Note this number must match the carrier code.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightNumber() {
        flightNumber_ = getDefaultInstance().getFlightNumber();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number.  Note this number must match the carrier code.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.passkit.grpc.CommonObjects.Date validFrom_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> validFromBuilder_;
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       * @return Whether the validFrom field is set.
       */
      public boolean hasValidFrom() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       * @return The validFrom.
       */
      public com.passkit.grpc.CommonObjects.Date getValidFrom() {
        if (validFromBuilder_ == null) {
          return validFrom_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : validFrom_;
        } else {
          return validFromBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public Builder setValidFrom(com.passkit.grpc.CommonObjects.Date value) {
        if (validFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          validFrom_ = value;
        } else {
          validFromBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public Builder setValidFrom(
          com.passkit.grpc.CommonObjects.Date.Builder builderForValue) {
        if (validFromBuilder_ == null) {
          validFrom_ = builderForValue.build();
        } else {
          validFromBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public Builder mergeValidFrom(com.passkit.grpc.CommonObjects.Date value) {
        if (validFromBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            validFrom_ != null &&
            validFrom_ != com.passkit.grpc.CommonObjects.Date.getDefaultInstance()) {
            getValidFromBuilder().mergeFrom(value);
          } else {
            validFrom_ = value;
          }
        } else {
          validFromBuilder_.mergeFrom(value);
        }
        if (validFrom_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public Builder clearValidFrom() {
        bitField0_ = (bitField0_ & ~0x00000004);
        validFrom_ = null;
        if (validFromBuilder_ != null) {
          validFromBuilder_.dispose();
          validFromBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public com.passkit.grpc.CommonObjects.Date.Builder getValidFromBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return internalGetValidFromFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      public com.passkit.grpc.CommonObjects.DateOrBuilder getValidFromOrBuilder() {
        if (validFromBuilder_ != null) {
          return validFromBuilder_.getMessageOrBuilder();
        } else {
          return validFrom_ == null ?
              com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : validFrom_;
        }
      }
      /**
       * <pre>
       * The date that the record is valid from. If not provided, then the date of submission will be used.
       * </pre>
       *
       * <code>.io.Date validFrom = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> 
          internalGetValidFromFieldBuilder() {
        if (validFromBuilder_ == null) {
          validFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder>(
                  getValidFrom(),
                  getParentForChildren(),
                  isClean());
          validFrom_ = null;
        }
        return validFromBuilder_;
      }

      private int revision_ ;
      /**
       * <pre>
       * Multiple designators can be active at a time. Provide a revision to distinguish between versions.
       * </pre>
       *
       * <code>uint32 revision = 4;</code>
       * @return The revision.
       */
      @java.lang.Override
      public int getRevision() {
        return revision_;
      }
      /**
       * <pre>
       * Multiple designators can be active at a time. Provide a revision to distinguish between versions.
       * </pre>
       *
       * <code>uint32 revision = 4;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(int value) {

        revision_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Multiple designators can be active at a time. Provide a revision to distinguish between versions.
       * </pre>
       *
       * <code>uint32 revision = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        bitField0_ = (bitField0_ & ~0x00000008);
        revision_ = 0;
        onChanged();
        return this;
      }

      private boolean active_ ;
      /**
       * <pre>
       * Setting to false will prevent further flights to be created against this flight number. Will automatically be set to false if a second designator with a validFrom date before the current date and after this designator's validFrom date is found.
       * </pre>
       *
       * <code>bool active = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The active.
       */
      @java.lang.Override
      public boolean getActive() {
        return active_;
      }
      /**
       * <pre>
       * Setting to false will prevent further flights to be created against this flight number. Will automatically be set to false if a second designator with a validFrom date before the current date and after this designator's validFrom date is found.
       * </pre>
       *
       * <code>bool active = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The active to set.
       * @return This builder for chaining.
       */
      public Builder setActive(boolean value) {

        active_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Setting to false will prevent further flights to be created against this flight number. Will automatically be set to false if a second designator with a validFrom date before the current date and after this designator's validFrom date is found.
       * </pre>
       *
       * <code>bool active = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearActive() {
        bitField0_ = (bitField0_ & ~0x00000010);
        active_ = false;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Flights.Common.FlightSchedule schedule_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Common.FlightSchedule, com.passkit.grpc.Flights.Common.FlightSchedule.Builder, com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder> scheduleBuilder_;
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       * @return Whether the schedule field is set.
       */
      public boolean hasSchedule() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       * @return The schedule.
       */
      public com.passkit.grpc.Flights.Common.FlightSchedule getSchedule() {
        if (scheduleBuilder_ == null) {
          return schedule_ == null ? com.passkit.grpc.Flights.Common.FlightSchedule.getDefaultInstance() : schedule_;
        } else {
          return scheduleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public Builder setSchedule(com.passkit.grpc.Flights.Common.FlightSchedule value) {
        if (scheduleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schedule_ = value;
        } else {
          scheduleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public Builder setSchedule(
          com.passkit.grpc.Flights.Common.FlightSchedule.Builder builderForValue) {
        if (scheduleBuilder_ == null) {
          schedule_ = builderForValue.build();
        } else {
          scheduleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public Builder mergeSchedule(com.passkit.grpc.Flights.Common.FlightSchedule value) {
        if (scheduleBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            schedule_ != null &&
            schedule_ != com.passkit.grpc.Flights.Common.FlightSchedule.getDefaultInstance()) {
            getScheduleBuilder().mergeFrom(value);
          } else {
            schedule_ = value;
          }
        } else {
          scheduleBuilder_.mergeFrom(value);
        }
        if (schedule_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public Builder clearSchedule() {
        bitField0_ = (bitField0_ & ~0x00000020);
        schedule_ = null;
        if (scheduleBuilder_ != null) {
          scheduleBuilder_.dispose();
          scheduleBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public com.passkit.grpc.Flights.Common.FlightSchedule.Builder getScheduleBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return internalGetScheduleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      public com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder getScheduleOrBuilder() {
        if (scheduleBuilder_ != null) {
          return scheduleBuilder_.getMessageOrBuilder();
        } else {
          return schedule_ == null ?
              com.passkit.grpc.Flights.Common.FlightSchedule.getDefaultInstance() : schedule_;
        }
      }
      /**
       * <pre>
       * The published flight schedule. If a flight object for a particular departure doesn't exist, these defaults are used. One-off changes to scheduled times for an individual departure should be handled by the Flight object. Long term changes should create a new revision of the FlightDesignator record.
       * </pre>
       *
       * <code>.flights.FlightSchedule schedule = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Common.FlightSchedule, com.passkit.grpc.Flights.Common.FlightSchedule.Builder, com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder> 
          internalGetScheduleFieldBuilder() {
        if (scheduleBuilder_ == null) {
          scheduleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.Common.FlightSchedule, com.passkit.grpc.Flights.Common.FlightSchedule.Builder, com.passkit.grpc.Flights.Common.FlightScheduleOrBuilder>(
                  getSchedule(),
                  getParentForChildren(),
                  isClean());
          schedule_ = null;
        }
        return scheduleBuilder_;
      }

      private java.lang.Object operatingCarrierCode_ = "";
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
       * </pre>
       *
       * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The operatingCarrierCode.
       */
      public java.lang.String getOperatingCarrierCode() {
        java.lang.Object ref = operatingCarrierCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operatingCarrierCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
       * </pre>
       *
       * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for operatingCarrierCode.
       */
      public com.google.protobuf.ByteString
          getOperatingCarrierCodeBytes() {
        java.lang.Object ref = operatingCarrierCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatingCarrierCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
       * </pre>
       *
       * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The operatingCarrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingCarrierCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        operatingCarrierCode_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
       * </pre>
       *
       * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatingCarrierCode() {
        operatingCarrierCode_ = getDefaultInstance().getOperatingCarrierCode();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the IATA or ICAO carrier code for the operating carrier.  A carrier record must exist.
       * </pre>
       *
       * <code>string operatingCarrierCode = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for operatingCarrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingCarrierCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        operatingCarrierCode_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object operatingFlightNumber_ = "";
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
       * </pre>
       *
       * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The operatingFlightNumber.
       */
      public java.lang.String getOperatingFlightNumber() {
        java.lang.Object ref = operatingFlightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operatingFlightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
       * </pre>
       *
       * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for operatingFlightNumber.
       */
      public com.google.protobuf.ByteString
          getOperatingFlightNumberBytes() {
        java.lang.Object ref = operatingFlightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatingFlightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
       * </pre>
       *
       * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The operatingFlightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingFlightNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        operatingFlightNumber_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
       * </pre>
       *
       * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatingFlightNumber() {
        operatingFlightNumber_ = getDefaultInstance().getOperatingFlightNumber();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight is operated by a carrier other than the carrierCode supplied, provide the flight number for the operating carrier.
       * </pre>
       *
       * <code>string operatingFlightNumber = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for operatingFlightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        operatingFlightNumber_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList codeShareFlightNumbers_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureCodeShareFlightNumbersIsMutable() {
        if (!codeShareFlightNumbers_.isModifiable()) {
          codeShareFlightNumbers_ = new com.google.protobuf.LazyStringArrayList(codeShareFlightNumbers_);
        }
        bitField0_ |= 0x00000100;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @return A list containing the codeShareFlightNumbers.
       */
      public com.google.protobuf.ProtocolStringList
          getCodeShareFlightNumbersList() {
        codeShareFlightNumbers_.makeImmutable();
        return codeShareFlightNumbers_;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @return The count of codeShareFlightNumbers.
       */
      public int getCodeShareFlightNumbersCount() {
        return codeShareFlightNumbers_.size();
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param index The index of the element to return.
       * @return The codeShareFlightNumbers at the given index.
       */
      public java.lang.String getCodeShareFlightNumbers(int index) {
        return codeShareFlightNumbers_.get(index);
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param index The index of the value to return.
       * @return The bytes of the codeShareFlightNumbers at the given index.
       */
      public com.google.protobuf.ByteString
          getCodeShareFlightNumbersBytes(int index) {
        return codeShareFlightNumbers_.getByteString(index);
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param index The index to set the value at.
       * @param value The codeShareFlightNumbers to set.
       * @return This builder for chaining.
       */
      public Builder setCodeShareFlightNumbers(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCodeShareFlightNumbersIsMutable();
        codeShareFlightNumbers_.set(index, value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param value The codeShareFlightNumbers to add.
       * @return This builder for chaining.
       */
      public Builder addCodeShareFlightNumbers(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCodeShareFlightNumbersIsMutable();
        codeShareFlightNumbers_.add(value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param values The codeShareFlightNumbers to add.
       * @return This builder for chaining.
       */
      public Builder addAllCodeShareFlightNumbers(
          java.lang.Iterable<java.lang.String> values) {
        ensureCodeShareFlightNumbersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, codeShareFlightNumbers_);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCodeShareFlightNumbers() {
        codeShareFlightNumbers_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the flight has code shares, then enter the carrier code and flight number. If there is an operating carrier, then do not include this in the list.  Code share carriers will not be validated.
       * </pre>
       *
       * <code>repeated string codeShareFlightNumbers = 9;</code>
       * @param value The bytes of the codeShareFlightNumbers to add.
       * @return This builder for chaining.
       */
      public Builder addCodeShareFlightNumbersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureCodeShareFlightNumbersIsMutable();
        codeShareFlightNumbers_.add(value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private java.lang.Object origin_ = "";
      /**
       * <pre>
       * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
       * </pre>
       *
       * <code>string origin = 10;</code>
       * @return The origin.
       */
      public java.lang.String getOrigin() {
        java.lang.Object ref = origin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          origin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
       * </pre>
       *
       * <code>string origin = 10;</code>
       * @return The bytes for origin.
       */
      public com.google.protobuf.ByteString
          getOriginBytes() {
        java.lang.Object ref = origin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          origin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
       * </pre>
       *
       * <code>string origin = 10;</code>
       * @param value The origin to set.
       * @return This builder for chaining.
       */
      public Builder setOrigin(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        origin_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
       * </pre>
       *
       * <code>string origin = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrigin() {
        origin_ = getDefaultInstance().getOrigin();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The origin port of the flight. In the case of direct flights with multiple stops, this will represent the port where the route commences.
       * </pre>
       *
       * <code>string origin = 10;</code>
       * @param value The bytes for origin to set.
       * @return This builder for chaining.
       */
      public Builder setOriginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        origin_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }

      private java.lang.Object destination_ = "";
      /**
       * <pre>
       * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
       * </pre>
       *
       * <code>string destination = 11;</code>
       * @return The destination.
       */
      public java.lang.String getDestination() {
        java.lang.Object ref = destination_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          destination_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
       * </pre>
       *
       * <code>string destination = 11;</code>
       * @return The bytes for destination.
       */
      public com.google.protobuf.ByteString
          getDestinationBytes() {
        java.lang.Object ref = destination_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          destination_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
       * </pre>
       *
       * <code>string destination = 11;</code>
       * @param value The destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestination(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        destination_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
       * </pre>
       *
       * <code>string destination = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestination() {
        destination_ = getDefaultInstance().getDestination();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination port of the flight. In the case of direct flights with multiple stops, this will represent the final port where the route terminates.
       * </pre>
       *
       * <code>string destination = 11;</code>
       * @param value The bytes for destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestinationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        destination_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList transitPoints_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureTransitPointsIsMutable() {
        if (!transitPoints_.isModifiable()) {
          transitPoints_ = new com.google.protobuf.LazyStringArrayList(transitPoints_);
        }
        bitField0_ |= 0x00000800;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @return A list containing the transitPoints.
       */
      public com.google.protobuf.ProtocolStringList
          getTransitPointsList() {
        transitPoints_.makeImmutable();
        return transitPoints_;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @return The count of transitPoints.
       */
      public int getTransitPointsCount() {
        return transitPoints_.size();
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param index The index of the element to return.
       * @return The transitPoints at the given index.
       */
      public java.lang.String getTransitPoints(int index) {
        return transitPoints_.get(index);
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param index The index of the value to return.
       * @return The bytes of the transitPoints at the given index.
       */
      public com.google.protobuf.ByteString
          getTransitPointsBytes(int index) {
        return transitPoints_.getByteString(index);
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param index The index to set the value at.
       * @param value The transitPoints to set.
       * @return This builder for chaining.
       */
      public Builder setTransitPoints(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTransitPointsIsMutable();
        transitPoints_.set(index, value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param value The transitPoints to add.
       * @return This builder for chaining.
       */
      public Builder addTransitPoints(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTransitPointsIsMutable();
        transitPoints_.add(value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param values The transitPoints to add.
       * @return This builder for chaining.
       */
      public Builder addAllTransitPoints(
          java.lang.Iterable<java.lang.String> values) {
        ensureTransitPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transitPoints_);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransitPoints() {
        transitPoints_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit points, commencing with the first port after the origin and ending with the penultimate port.
       * </pre>
       *
       * <code>repeated string transitPoints = 12;</code>
       * @param value The bytes of the transitPoints to add.
       * @return This builder for chaining.
       */
      public Builder addTransitPointsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureTransitPointsIsMutable();
        transitPoints_.add(value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }

      private java.lang.Object departureTerminal_ = "";
      /**
       * <pre>
       * The default terminal that the flight departs from.
       * </pre>
       *
       * <code>string departureTerminal = 13;</code>
       * @return The departureTerminal.
       */
      public java.lang.String getDepartureTerminal() {
        java.lang.Object ref = departureTerminal_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          departureTerminal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The default terminal that the flight departs from.
       * </pre>
       *
       * <code>string departureTerminal = 13;</code>
       * @return The bytes for departureTerminal.
       */
      public com.google.protobuf.ByteString
          getDepartureTerminalBytes() {
        java.lang.Object ref = departureTerminal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          departureTerminal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The default terminal that the flight departs from.
       * </pre>
       *
       * <code>string departureTerminal = 13;</code>
       * @param value The departureTerminal to set.
       * @return This builder for chaining.
       */
      public Builder setDepartureTerminal(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        departureTerminal_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The default terminal that the flight departs from.
       * </pre>
       *
       * <code>string departureTerminal = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDepartureTerminal() {
        departureTerminal_ = getDefaultInstance().getDepartureTerminal();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The default terminal that the flight departs from.
       * </pre>
       *
       * <code>string departureTerminal = 13;</code>
       * @param value The bytes for departureTerminal to set.
       * @return This builder for chaining.
       */
      public Builder setDepartureTerminalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        departureTerminal_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }

      private java.lang.Object arrivalTerminal_ = "";
      /**
       * <pre>
       * The default terminal of the final destination.
       * </pre>
       *
       * <code>string arrivalTerminal = 14;</code>
       * @return The arrivalTerminal.
       */
      public java.lang.String getArrivalTerminal() {
        java.lang.Object ref = arrivalTerminal_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          arrivalTerminal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The default terminal of the final destination.
       * </pre>
       *
       * <code>string arrivalTerminal = 14;</code>
       * @return The bytes for arrivalTerminal.
       */
      public com.google.protobuf.ByteString
          getArrivalTerminalBytes() {
        java.lang.Object ref = arrivalTerminal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          arrivalTerminal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The default terminal of the final destination.
       * </pre>
       *
       * <code>string arrivalTerminal = 14;</code>
       * @param value The arrivalTerminal to set.
       * @return This builder for chaining.
       */
      public Builder setArrivalTerminal(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        arrivalTerminal_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The default terminal of the final destination.
       * </pre>
       *
       * <code>string arrivalTerminal = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearArrivalTerminal() {
        arrivalTerminal_ = getDefaultInstance().getArrivalTerminal();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The default terminal of the final destination.
       * </pre>
       *
       * <code>string arrivalTerminal = 14;</code>
       * @param value The bytes for arrivalTerminal to set.
       * @return This builder for chaining.
       */
      public Builder setArrivalTerminalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        arrivalTerminal_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList transitTerminals_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureTransitTerminalsIsMutable() {
        if (!transitTerminals_.isModifiable()) {
          transitTerminals_ = new com.google.protobuf.LazyStringArrayList(transitTerminals_);
        }
        bitField0_ |= 0x00004000;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @return A list containing the transitTerminals.
       */
      public com.google.protobuf.ProtocolStringList
          getTransitTerminalsList() {
        transitTerminals_.makeImmutable();
        return transitTerminals_;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @return The count of transitTerminals.
       */
      public int getTransitTerminalsCount() {
        return transitTerminals_.size();
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param index The index of the element to return.
       * @return The transitTerminals at the given index.
       */
      public java.lang.String getTransitTerminals(int index) {
        return transitTerminals_.get(index);
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param index The index of the value to return.
       * @return The bytes of the transitTerminals at the given index.
       */
      public com.google.protobuf.ByteString
          getTransitTerminalsBytes(int index) {
        return transitTerminals_.getByteString(index);
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param index The index to set the value at.
       * @param value The transitTerminals to set.
       * @return This builder for chaining.
       */
      public Builder setTransitTerminals(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTransitTerminalsIsMutable();
        transitTerminals_.set(index, value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param value The transitTerminals to add.
       * @return This builder for chaining.
       */
      public Builder addTransitTerminals(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTransitTerminalsIsMutable();
        transitTerminals_.add(value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param values The transitTerminals to add.
       * @return This builder for chaining.
       */
      public Builder addAllTransitTerminals(
          java.lang.Iterable<java.lang.String> values) {
        ensureTransitTerminalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transitTerminals_);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransitTerminals() {
        transitTerminals_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the case of multiple stops, an ordered array of transit terminals. The length of this array should match the number of transit points.
       * </pre>
       *
       * <code>repeated string transitTerminals = 15;</code>
       * @param value The bytes of the transitTerminals to add.
       * @return This builder for chaining.
       */
      public Builder addTransitTerminalsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureTransitTerminalsIsMutable();
        transitTerminals_.add(value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }

      private int boardingPolicy_ = 0;
      /**
       * <pre>
       * The Boarding Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
       * @return The enum numeric value on the wire for boardingPolicy.
       */
      @java.lang.Override public int getBoardingPolicyValue() {
        return boardingPolicy_;
      }
      /**
       * <pre>
       * The Boarding Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
       * @param value The enum numeric value on the wire for boardingPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPolicyValue(int value) {
        boardingPolicy_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Boarding Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
       * @return The boardingPolicy.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.Common.BoardingPolicy getBoardingPolicy() {
        com.passkit.grpc.Flights.Common.BoardingPolicy result = com.passkit.grpc.Flights.Common.BoardingPolicy.forNumber(boardingPolicy_);
        return result == null ? com.passkit.grpc.Flights.Common.BoardingPolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The Boarding Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
       * @param value The boardingPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPolicy(com.passkit.grpc.Flights.Common.BoardingPolicy value) {
        if (value == null) { throw new NullPointerException(); }
        bitField0_ |= 0x00008000;
        boardingPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Boarding Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.BoardingPolicy boardingPolicy = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPolicy() {
        bitField0_ = (bitField0_ & ~0x00008000);
        boardingPolicy_ = 0;
        onChanged();
        return this;
      }

      private int seatClassPolicy_ = 0;
      /**
       * <pre>
       * The Seat Class Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
       * @return The enum numeric value on the wire for seatClassPolicy.
       */
      @java.lang.Override public int getSeatClassPolicyValue() {
        return seatClassPolicy_;
      }
      /**
       * <pre>
       * The Seat Class Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
       * @param value The enum numeric value on the wire for seatClassPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setSeatClassPolicyValue(int value) {
        seatClassPolicy_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Seat Class Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
       * @return The seatClassPolicy.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.Common.SeatClassPolicy getSeatClassPolicy() {
        com.passkit.grpc.Flights.Common.SeatClassPolicy result = com.passkit.grpc.Flights.Common.SeatClassPolicy.forNumber(seatClassPolicy_);
        return result == null ? com.passkit.grpc.Flights.Common.SeatClassPolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The Seat Class Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
       * @param value The seatClassPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setSeatClassPolicy(com.passkit.grpc.Flights.Common.SeatClassPolicy value) {
        if (value == null) { throw new NullPointerException(); }
        bitField0_ |= 0x00010000;
        seatClassPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Seat Class Policy is used to determine informational labels on the pass.
       * </pre>
       *
       * <code>.flights.SeatClassPolicy seatClassPolicy = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeatClassPolicy() {
        bitField0_ = (bitField0_ & ~0x00010000);
        seatClassPolicy_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList alerts_ = emptyIntList();
      private void ensureAlertsIsMutable() {
        if (!alerts_.isModifiable()) {
          alerts_ = makeMutableCopy(alerts_);
        }
        bitField0_ |= 0x00020000;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @return A list containing the alerts.
       */
      public java.util.List<com.passkit.grpc.Flights.Common.FlightAlerts> getAlertsList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            com.passkit.grpc.Flights.Common.FlightAlerts>(alerts_, alerts_converter_);
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @return The count of alerts.
       */
      public int getAlertsCount() {
        return alerts_.size();
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param index The index of the element to return.
       * @return The alerts at the given index.
       */
      public com.passkit.grpc.Flights.Common.FlightAlerts getAlerts(int index) {
        return alerts_converter_.convert(alerts_.getInt(index));
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param index The index to set the value at.
       * @param value The alerts to set.
       * @return This builder for chaining.
       */
      public Builder setAlerts(
          int index, com.passkit.grpc.Flights.Common.FlightAlerts value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAlertsIsMutable();
        alerts_.setInt(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param value The alerts to add.
       * @return This builder for chaining.
       */
      public Builder addAlerts(com.passkit.grpc.Flights.Common.FlightAlerts value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAlertsIsMutable();
        alerts_.addInt(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param values The alerts to add.
       * @return This builder for chaining.
       */
      public Builder addAllAlerts(
          java.lang.Iterable<? extends com.passkit.grpc.Flights.Common.FlightAlerts> values) {
        ensureAlertsIsMutable();
        for (com.passkit.grpc.Flights.Common.FlightAlerts value : values) {
          alerts_.addInt(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlerts() {
        alerts_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @return A list containing the enum numeric values on the wire for alerts.
       */
      public java.util.List<java.lang.Integer>
      getAlertsValueList() {
        alerts_.makeImmutable();
        return alerts_;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of alerts at the given index.
       */
      public int getAlertsValue(int index) {
        return alerts_.getInt(index);
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for alerts to set.
       * @return This builder for chaining.
       */
      public Builder setAlertsValue(
          int index, int value) {
        ensureAlertsIsMutable();
        alerts_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param value The enum numeric value on the wire for alerts to add.
       * @return This builder for chaining.
       */
      public Builder addAlertsValue(int value) {
        ensureAlertsIsMutable();
        alerts_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of alerts to subscribe to for the flight. Note that additional charges apply.
       * </pre>
       *
       * <code>repeated .flights.FlightAlerts alerts = 18;</code>
       * @param values The enum numeric values on the wire for alerts to add.
       * @return This builder for chaining.
       */
      public Builder addAllAlertsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureAlertsIsMutable();
        for (int value : values) {
          alerts_.addInt(value);
        }
        onChanged();
        return this;
      }

      private java.lang.Object passTemplateId_ = "";
      /**
       * <pre>
       * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
       * </pre>
       *
       * <code>string passTemplateId = 19;</code>
       * @return The passTemplateId.
       */
      public java.lang.String getPassTemplateId() {
        java.lang.Object ref = passTemplateId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passTemplateId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
       * </pre>
       *
       * <code>string passTemplateId = 19;</code>
       * @return The bytes for passTemplateId.
       */
      public com.google.protobuf.ByteString
          getPassTemplateIdBytes() {
        java.lang.Object ref = passTemplateId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passTemplateId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
       * </pre>
       *
       * <code>string passTemplateId = 19;</code>
       * @param value The passTemplateId to set.
       * @return This builder for chaining.
       */
      public Builder setPassTemplateId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        passTemplateId_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
       * </pre>
       *
       * <code>string passTemplateId = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassTemplateId() {
        passTemplateId_ = getDefaultInstance().getPassTemplateId();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PassKit template id that will be used for boarding passes for this flight. It can be overwritten at the flight level.
       * </pre>
       *
       * <code>string passTemplateId = 19;</code>
       * @param value The bytes for passTemplateId to set.
       * @return This builder for chaining.
       */
      public Builder setPassTemplateIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        passTemplateId_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }

      private int autoInvalidateAfter_ ;
      /**
       * <pre>
       * Minutes after scheduled arrival time to automatically invalidate the pass. Enter a value of 9999999 or greater if the pass should not auto invalidate. Default is 48 hours.
       * </pre>
       *
       * <code>uint32 autoInvalidateAfter = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The autoInvalidateAfter.
       */
      @java.lang.Override
      public int getAutoInvalidateAfter() {
        return autoInvalidateAfter_;
      }
      /**
       * <pre>
       * Minutes after scheduled arrival time to automatically invalidate the pass. Enter a value of 9999999 or greater if the pass should not auto invalidate. Default is 48 hours.
       * </pre>
       *
       * <code>uint32 autoInvalidateAfter = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The autoInvalidateAfter to set.
       * @return This builder for chaining.
       */
      public Builder setAutoInvalidateAfter(int value) {

        autoInvalidateAfter_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minutes after scheduled arrival time to automatically invalidate the pass. Enter a value of 9999999 or greater if the pass should not auto invalidate. Default is 48 hours.
       * </pre>
       *
       * <code>uint32 autoInvalidateAfter = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoInvalidateAfter() {
        bitField0_ = (bitField0_ & ~0x00080000);
        autoInvalidateAfter_ = 0;
        onChanged();
        return this;
      }

      private boolean autoInvalidateCancelledPasses_ ;
      /**
       * <pre>
       * Deprecated: Use InvalidateCancelledPasses.
       * </pre>
       *
       * <code>bool autoInvalidateCancelledPasses = 21 [deprecated = true];</code>
       * @deprecated flights.FlightDesignator.autoInvalidateCancelledPasses is deprecated.
       *     See io/flights/flight_designator.proto;l=69
       * @return The autoInvalidateCancelledPasses.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean getAutoInvalidateCancelledPasses() {
        return autoInvalidateCancelledPasses_;
      }
      /**
       * <pre>
       * Deprecated: Use InvalidateCancelledPasses.
       * </pre>
       *
       * <code>bool autoInvalidateCancelledPasses = 21 [deprecated = true];</code>
       * @deprecated flights.FlightDesignator.autoInvalidateCancelledPasses is deprecated.
       *     See io/flights/flight_designator.proto;l=69
       * @param value The autoInvalidateCancelledPasses to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setAutoInvalidateCancelledPasses(boolean value) {

        autoInvalidateCancelledPasses_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated: Use InvalidateCancelledPasses.
       * </pre>
       *
       * <code>bool autoInvalidateCancelledPasses = 21 [deprecated = true];</code>
       * @deprecated flights.FlightDesignator.autoInvalidateCancelledPasses is deprecated.
       *     See io/flights/flight_designator.proto;l=69
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearAutoInvalidateCancelledPasses() {
        bitField0_ = (bitField0_ & ~0x00100000);
        autoInvalidateCancelledPasses_ = false;
        onChanged();
        return this;
      }

      private java.util.List<com.passkit.grpc.Proximity.GPSLocation> locationMessages_ =
        java.util.Collections.emptyList();
      private void ensureLocationMessagesIsMutable() {
        if (!((bitField0_ & 0x00200000) != 0)) {
          locationMessages_ = new java.util.ArrayList<com.passkit.grpc.Proximity.GPSLocation>(locationMessages_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder> locationMessagesBuilder_;

      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.GPSLocation> getLocationMessagesList() {
        if (locationMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationMessages_);
        } else {
          return locationMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public int getLocationMessagesCount() {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.size();
        } else {
          return locationMessagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index) {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.get(index);
        } else {
          return locationMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.set(index, value);
          onChanged();
        } else {
          locationMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.add(value);
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.add(index, value);
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.add(builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addAllLocationMessages(
          java.lang.Iterable<? extends com.passkit.grpc.Proximity.GPSLocation> values) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationMessages_);
          onChanged();
        } else {
          locationMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearLocationMessages() {
        if (locationMessagesBuilder_ == null) {
          locationMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          locationMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder removeLocationMessages(int index) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.remove(index);
          onChanged();
        } else {
          locationMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder getLocationMessagesBuilder(
          int index) {
        return internalGetLocationMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
          int index) {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.get(index);  } else {
          return locationMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
           getLocationMessagesOrBuilderList() {
        if (locationMessagesBuilder_ != null) {
          return locationMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationMessages_);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder addLocationMessagesBuilder() {
        return internalGetLocationMessagesFieldBuilder().addBuilder(
            com.passkit.grpc.Proximity.GPSLocation.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder addLocationMessagesBuilder(
          int index) {
        return internalGetLocationMessagesFieldBuilder().addBuilder(
            index, com.passkit.grpc.Proximity.GPSLocation.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 22 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.GPSLocation.Builder> 
           getLocationMessagesBuilderList() {
        return internalGetLocationMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
          internalGetLocationMessagesFieldBuilder() {
        if (locationMessagesBuilder_ == null) {
          locationMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder>(
                  locationMessages_,
                  ((bitField0_ & 0x00200000) != 0),
                  getParentForChildren(),
                  isClean());
          locationMessages_ = null;
        }
        return locationMessagesBuilder_;
      }

      private java.util.List<com.passkit.grpc.Proximity.Beacon> beaconMessages_ =
        java.util.Collections.emptyList();
      private void ensureBeaconMessagesIsMutable() {
        if (!((bitField0_ & 0x00400000) != 0)) {
          beaconMessages_ = new java.util.ArrayList<com.passkit.grpc.Proximity.Beacon>(beaconMessages_);
          bitField0_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder> beaconMessagesBuilder_;

      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.Beacon> getBeaconMessagesList() {
        if (beaconMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beaconMessages_);
        } else {
          return beaconMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public int getBeaconMessagesCount() {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.size();
        } else {
          return beaconMessagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index) {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.get(index);
        } else {
          return beaconMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.set(index, value);
          onChanged();
        } else {
          beaconMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(value);
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(index, value);
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addAllBeaconMessages(
          java.lang.Iterable<? extends com.passkit.grpc.Proximity.Beacon> values) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beaconMessages_);
          onChanged();
        } else {
          beaconMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearBeaconMessages() {
        if (beaconMessagesBuilder_ == null) {
          beaconMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
          onChanged();
        } else {
          beaconMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder removeBeaconMessages(int index) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.remove(index);
          onChanged();
        } else {
          beaconMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder getBeaconMessagesBuilder(
          int index) {
        return internalGetBeaconMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
          int index) {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.get(index);  } else {
          return beaconMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
           getBeaconMessagesOrBuilderList() {
        if (beaconMessagesBuilder_ != null) {
          return beaconMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beaconMessages_);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder addBeaconMessagesBuilder() {
        return internalGetBeaconMessagesFieldBuilder().addBuilder(
            com.passkit.grpc.Proximity.Beacon.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder addBeaconMessagesBuilder(
          int index) {
        return internalGetBeaconMessagesFieldBuilder().addBuilder(
            index, com.passkit.grpc.Proximity.Beacon.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 23 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.Beacon.Builder> 
           getBeaconMessagesBuilderList() {
        return internalGetBeaconMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder> 
          internalGetBeaconMessagesFieldBuilder() {
        if (beaconMessagesBuilder_ == null) {
          beaconMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder>(
                  beaconMessages_,
                  ((bitField0_ & 0x00400000) != 0),
                  getParentForChildren(),
                  isClean());
          beaconMessages_ = null;
        }
        return beaconMessagesBuilder_;
      }

      private java.util.List<com.passkit.grpc.Links.Link> defaultLinks_ =
        java.util.Collections.emptyList();
      private void ensureDefaultLinksIsMutable() {
        if (!((bitField0_ & 0x00800000) != 0)) {
          defaultLinks_ = new java.util.ArrayList<com.passkit.grpc.Links.Link>(defaultLinks_);
          bitField0_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder> defaultLinksBuilder_;

      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public java.util.List<com.passkit.grpc.Links.Link> getDefaultLinksList() {
        if (defaultLinksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defaultLinks_);
        } else {
          return defaultLinksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public int getDefaultLinksCount() {
        if (defaultLinksBuilder_ == null) {
          return defaultLinks_.size();
        } else {
          return defaultLinksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public com.passkit.grpc.Links.Link getDefaultLinks(int index) {
        if (defaultLinksBuilder_ == null) {
          return defaultLinks_.get(index);
        } else {
          return defaultLinksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder setDefaultLinks(
          int index, com.passkit.grpc.Links.Link value) {
        if (defaultLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultLinksIsMutable();
          defaultLinks_.set(index, value);
          onChanged();
        } else {
          defaultLinksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder setDefaultLinks(
          int index, com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (defaultLinksBuilder_ == null) {
          ensureDefaultLinksIsMutable();
          defaultLinks_.set(index, builderForValue.build());
          onChanged();
        } else {
          defaultLinksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder addDefaultLinks(com.passkit.grpc.Links.Link value) {
        if (defaultLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultLinksIsMutable();
          defaultLinks_.add(value);
          onChanged();
        } else {
          defaultLinksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder addDefaultLinks(
          int index, com.passkit.grpc.Links.Link value) {
        if (defaultLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefaultLinksIsMutable();
          defaultLinks_.add(index, value);
          onChanged();
        } else {
          defaultLinksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder addDefaultLinks(
          com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (defaultLinksBuilder_ == null) {
          ensureDefaultLinksIsMutable();
          defaultLinks_.add(builderForValue.build());
          onChanged();
        } else {
          defaultLinksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder addDefaultLinks(
          int index, com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (defaultLinksBuilder_ == null) {
          ensureDefaultLinksIsMutable();
          defaultLinks_.add(index, builderForValue.build());
          onChanged();
        } else {
          defaultLinksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder addAllDefaultLinks(
          java.lang.Iterable<? extends com.passkit.grpc.Links.Link> values) {
        if (defaultLinksBuilder_ == null) {
          ensureDefaultLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, defaultLinks_);
          onChanged();
        } else {
          defaultLinksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder clearDefaultLinks() {
        if (defaultLinksBuilder_ == null) {
          defaultLinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
          onChanged();
        } else {
          defaultLinksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public Builder removeDefaultLinks(int index) {
        if (defaultLinksBuilder_ == null) {
          ensureDefaultLinksIsMutable();
          defaultLinks_.remove(index);
          onChanged();
        } else {
          defaultLinksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public com.passkit.grpc.Links.Link.Builder getDefaultLinksBuilder(
          int index) {
        return internalGetDefaultLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public com.passkit.grpc.Links.LinkOrBuilder getDefaultLinksOrBuilder(
          int index) {
        if (defaultLinksBuilder_ == null) {
          return defaultLinks_.get(index);  } else {
          return defaultLinksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
           getDefaultLinksOrBuilderList() {
        if (defaultLinksBuilder_ != null) {
          return defaultLinksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defaultLinks_);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public com.passkit.grpc.Links.Link.Builder addDefaultLinksBuilder() {
        return internalGetDefaultLinksFieldBuilder().addBuilder(
            com.passkit.grpc.Links.Link.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public com.passkit.grpc.Links.Link.Builder addDefaultLinksBuilder(
          int index) {
        return internalGetDefaultLinksFieldBuilder().addBuilder(
            index, com.passkit.grpc.Links.Link.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link defaultLinks = 24;</code>
       */
      public java.util.List<com.passkit.grpc.Links.Link.Builder> 
           getDefaultLinksBuilderList() {
        return internalGetDefaultLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder> 
          internalGetDefaultLinksFieldBuilder() {
        if (defaultLinksBuilder_ == null) {
          defaultLinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder>(
                  defaultLinks_,
                  ((bitField0_ & 0x00800000) != 0),
                  getParentForChildren(),
                  isClean());
          defaultLinks_ = null;
        }
        return defaultLinksBuilder_;
      }

      private boolean conditionalItems_ ;
      /**
       * <pre>
       * If PassKit are generating barcodes, include conditional items. Default false.
       * </pre>
       *
       * <code>bool ConditionalItems = 25;</code>
       * @return The conditionalItems.
       */
      @java.lang.Override
      public boolean getConditionalItems() {
        return conditionalItems_;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, include conditional items. Default false.
       * </pre>
       *
       * <code>bool ConditionalItems = 25;</code>
       * @param value The conditionalItems to set.
       * @return This builder for chaining.
       */
      public Builder setConditionalItems(boolean value) {

        conditionalItems_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, include conditional items. Default false.
       * </pre>
       *
       * <code>bool ConditionalItems = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearConditionalItems() {
        bitField0_ = (bitField0_ & ~0x01000000);
        conditionalItems_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object barcodeAdditionalData_ = "";
      /**
       * <pre>
       * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
       * </pre>
       *
       * <code>string BarcodeAdditionalData = 26;</code>
       * @return The barcodeAdditionalData.
       */
      public java.lang.String getBarcodeAdditionalData() {
        java.lang.Object ref = barcodeAdditionalData_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          barcodeAdditionalData_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
       * </pre>
       *
       * <code>string BarcodeAdditionalData = 26;</code>
       * @return The bytes for barcodeAdditionalData.
       */
      public com.google.protobuf.ByteString
          getBarcodeAdditionalDataBytes() {
        java.lang.Object ref = barcodeAdditionalData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          barcodeAdditionalData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
       * </pre>
       *
       * <code>string BarcodeAdditionalData = 26;</code>
       * @param value The barcodeAdditionalData to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodeAdditionalData(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        barcodeAdditionalData_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
       * </pre>
       *
       * <code>string BarcodeAdditionalData = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearBarcodeAdditionalData() {
        barcodeAdditionalData_ = getDefaultInstance().getBarcodeAdditionalData();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, default airline use data (IATA item 4). This can be overwritten at the flight and boarding pass level.
       * </pre>
       *
       * <code>string BarcodeAdditionalData = 26;</code>
       * @param value The bytes for barcodeAdditionalData to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodeAdditionalDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        barcodeAdditionalData_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }

      private int invalidateCancelledPasses_ = 0;
      /**
       * <pre>
       * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
       * </pre>
       *
       * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The enum numeric value on the wire for invalidateCancelledPasses.
       */
      @java.lang.Override public int getInvalidateCancelledPassesValue() {
        return invalidateCancelledPasses_;
      }
      /**
       * <pre>
       * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
       * </pre>
       *
       * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The enum numeric value on the wire for invalidateCancelledPasses to set.
       * @return This builder for chaining.
       */
      public Builder setInvalidateCancelledPassesValue(int value) {
        invalidateCancelledPasses_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
       * </pre>
       *
       * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The invalidateCancelledPasses.
       */
      @java.lang.Override
      public com.passkit.grpc.CommonObjects.Toggle getInvalidateCancelledPasses() {
        com.passkit.grpc.CommonObjects.Toggle result = com.passkit.grpc.CommonObjects.Toggle.forNumber(invalidateCancelledPasses_);
        return result == null ? com.passkit.grpc.CommonObjects.Toggle.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
       * </pre>
       *
       * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The invalidateCancelledPasses to set.
       * @return This builder for chaining.
       */
      public Builder setInvalidateCancelledPasses(com.passkit.grpc.CommonObjects.Toggle value) {
        if (value == null) { throw new NullPointerException(); }
        bitField0_ |= 0x04000000;
        invalidateCancelledPasses_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Invalidate passes where either the booking or the flight have been cancelled. Default is ON.
       * </pre>
       *
       * <code>.io.Toggle invalidateCancelledPasses = 27 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearInvalidateCancelledPasses() {
        bitField0_ = (bitField0_ & ~0x04000000);
        invalidateCancelledPasses_ = 0;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Flights.Common.FlightURLs urls_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Common.FlightURLs, com.passkit.grpc.Flights.Common.FlightURLs.Builder, com.passkit.grpc.Flights.Common.FlightURLsOrBuilder> urlsBuilder_;
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       * @return Whether the urls field is set.
       */
      public boolean hasUrls() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       * @return The urls.
       */
      public com.passkit.grpc.Flights.Common.FlightURLs getUrls() {
        if (urlsBuilder_ == null) {
          return urls_ == null ? com.passkit.grpc.Flights.Common.FlightURLs.getDefaultInstance() : urls_;
        } else {
          return urlsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public Builder setUrls(com.passkit.grpc.Flights.Common.FlightURLs value) {
        if (urlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          urls_ = value;
        } else {
          urlsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public Builder setUrls(
          com.passkit.grpc.Flights.Common.FlightURLs.Builder builderForValue) {
        if (urlsBuilder_ == null) {
          urls_ = builderForValue.build();
        } else {
          urlsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public Builder mergeUrls(com.passkit.grpc.Flights.Common.FlightURLs value) {
        if (urlsBuilder_ == null) {
          if (((bitField0_ & 0x08000000) != 0) &&
            urls_ != null &&
            urls_ != com.passkit.grpc.Flights.Common.FlightURLs.getDefaultInstance()) {
            getUrlsBuilder().mergeFrom(value);
          } else {
            urls_ = value;
          }
        } else {
          urlsBuilder_.mergeFrom(value);
        }
        if (urls_ != null) {
          bitField0_ |= 0x08000000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public Builder clearUrls() {
        bitField0_ = (bitField0_ & ~0x08000000);
        urls_ = null;
        if (urlsBuilder_ != null) {
          urlsBuilder_.dispose();
          urlsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public com.passkit.grpc.Flights.Common.FlightURLs.Builder getUrlsBuilder() {
        bitField0_ |= 0x08000000;
        onChanged();
        return internalGetUrlsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      public com.passkit.grpc.Flights.Common.FlightURLsOrBuilder getUrlsOrBuilder() {
        if (urlsBuilder_ != null) {
          return urlsBuilder_.getMessageOrBuilder();
        } else {
          return urls_ == null ?
              com.passkit.grpc.Flights.Common.FlightURLs.getDefaultInstance() : urls_;
        }
      }
      /**
       * <pre>
       * URLs at the flight level will be completely overwritten by URLs at boarding pass level. For example, a Purchase Wifi, or Purchase Lounge Access may apply to every passenger except for passengers that have already purchased. In these cases, it is more efficient to update the boarding pass objects of those that have purchased, so as not to display a redundant link.
       * </pre>
       *
       * <code>.flights.FlightURLs urls = 37;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Common.FlightURLs, com.passkit.grpc.Flights.Common.FlightURLs.Builder, com.passkit.grpc.Flights.Common.FlightURLsOrBuilder> 
          internalGetUrlsFieldBuilder() {
        if (urlsBuilder_ == null) {
          urlsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.Common.FlightURLs, com.passkit.grpc.Flights.Common.FlightURLs.Builder, com.passkit.grpc.Flights.Common.FlightURLsOrBuilder>(
                  getUrls(),
                  getParentForChildren(),
                  isClean());
          urls_ = null;
        }
        return urlsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:flights.FlightDesignator)
    }

    // @@protoc_insertion_point(class_scope:flights.FlightDesignator)
    private static final com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator();
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlightDesignator>
        PARSER = new com.google.protobuf.AbstractParser<FlightDesignator>() {
      @java.lang.Override
      public FlightDesignator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FlightDesignator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlightDesignator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlightDesignatorRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.FlightDesignatorRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    java.lang.String getCarrierCode();
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    com.google.protobuf.ByteString
        getCarrierCodeBytes();

    /**
     * <pre>
     * The flight number.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    java.lang.String getFlightNumber();
    /**
     * <pre>
     * The flight number.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    com.google.protobuf.ByteString
        getFlightNumberBytes();

    /**
     * <pre>
     * Revision. Each designator record requires a version number.
     * </pre>
     *
     * <code>uint32 revision = 3;</code>
     * @return The revision.
     */
    int getRevision();
  }
  /**
   * Protobuf type {@code flights.FlightDesignatorRequest}
   */
  public static final class FlightDesignatorRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.FlightDesignatorRequest)
      FlightDesignatorRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 31,
        /* patch= */ 0,
        /* suffix= */ "",
        FlightDesignatorRequest.class.getName());
    }
    // Use FlightDesignatorRequest.newBuilder() to construct.
    private FlightDesignatorRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private FlightDesignatorRequest() {
      carrierCode_ = "";
      flightNumber_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignatorRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignatorRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.class, com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.Builder.class);
    }

    public static final int CARRIERCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object carrierCode_ = "";
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    @java.lang.Override
    public java.lang.String getCarrierCode() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carrierCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IATA or ICAO carrier code for the flight.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCarrierCodeBytes() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carrierCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLIGHTNUMBER_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object flightNumber_ = "";
    /**
     * <pre>
     * The flight number.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    @java.lang.Override
    public java.lang.String getFlightNumber() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The flight number.
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlightNumberBytes() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REVISION_FIELD_NUMBER = 3;
    private int revision_ = 0;
    /**
     * <pre>
     * Revision. Each designator record requires a version number.
     * </pre>
     *
     * <code>uint32 revision = 3;</code>
     * @return The revision.
     */
    @java.lang.Override
    public int getRevision() {
      return revision_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, flightNumber_);
      }
      if (revision_ != 0) {
        output.writeUInt32(3, revision_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, flightNumber_);
      }
      if (revision_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, revision_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest other = (com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest) obj;

      if (!getCarrierCode()
          .equals(other.getCarrierCode())) return false;
      if (!getFlightNumber()
          .equals(other.getFlightNumber())) return false;
      if (getRevision()
          != other.getRevision()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARRIERCODE_FIELD_NUMBER;
      hash = (53 * hash) + getCarrierCode().hashCode();
      hash = (37 * hash) + FLIGHTNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getFlightNumber().hashCode();
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getRevision();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flights.FlightDesignatorRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.FlightDesignatorRequest)
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignatorRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignatorRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.class, com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        carrierCode_ = "";
        flightNumber_ = "";
        revision_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.internal_static_flights_FlightDesignatorRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest build() {
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest buildPartial() {
        com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest result = new com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.carrierCode_ = carrierCode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.flightNumber_ = flightNumber_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.revision_ = revision_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest) {
          return mergeFrom((com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest other) {
        if (other == com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest.getDefaultInstance()) return this;
        if (!other.getCarrierCode().isEmpty()) {
          carrierCode_ = other.carrierCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFlightNumber().isEmpty()) {
          flightNumber_ = other.flightNumber_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getRevision() != 0) {
          setRevision(other.getRevision());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                carrierCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                flightNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                revision_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object carrierCode_ = "";
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The carrierCode.
       */
      public java.lang.String getCarrierCode() {
        java.lang.Object ref = carrierCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          carrierCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for carrierCode.
       */
      public com.google.protobuf.ByteString
          getCarrierCodeBytes() {
        java.lang.Object ref = carrierCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          carrierCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCarrierCode() {
        carrierCode_ = getDefaultInstance().getCarrierCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO carrier code for the flight.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object flightNumber_ = "";
      /**
       * <pre>
       * The flight number.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The flightNumber.
       */
      public java.lang.String getFlightNumber() {
        java.lang.Object ref = flightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The flight number.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for flightNumber.
       */
      public com.google.protobuf.ByteString
          getFlightNumberBytes() {
        java.lang.Object ref = flightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The flight number.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightNumber() {
        flightNumber_ = getDefaultInstance().getFlightNumber();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number.
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int revision_ ;
      /**
       * <pre>
       * Revision. Each designator record requires a version number.
       * </pre>
       *
       * <code>uint32 revision = 3;</code>
       * @return The revision.
       */
      @java.lang.Override
      public int getRevision() {
        return revision_;
      }
      /**
       * <pre>
       * Revision. Each designator record requires a version number.
       * </pre>
       *
       * <code>uint32 revision = 3;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(int value) {

        revision_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Revision. Each designator record requires a version number.
       * </pre>
       *
       * <code>uint32 revision = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        revision_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:flights.FlightDesignatorRequest)
    }

    // @@protoc_insertion_point(class_scope:flights.FlightDesignatorRequest)
    private static final com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest();
    }

    public static com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlightDesignatorRequest>
        PARSER = new com.google.protobuf.AbstractParser<FlightDesignatorRequest>() {
      @java.lang.Override
      public FlightDesignatorRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FlightDesignatorRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlightDesignatorRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.FlightDesignatorOuterClass.FlightDesignatorRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_FlightDesignator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_FlightDesignator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_FlightDesignatorRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_FlightDesignatorRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"io/flights/flight_designator.proto\022\007fl" +
      "ights\032\036io/common/common_objects.proto\032\031i" +
      "o/common/proximity.proto\032\025io/common/link" +
      "s.proto\032\027io/flights/common.proto\032.protoc" +
      "-gen-openapiv2/options/annotations.proto" +
      "\"\247\t\n\020FlightDesignator\022*\n\013carrierCode\030\001 \001" +
      "(\tB\025\222A\022\212\001\017^[A-Z0-9]{3,4}$\022\033\n\014flightNumbe" +
      "r\030\002 \001(\tB\005\222A\002x\005\022\033\n\tvalidFrom\030\003 \001(\0132\010.io.D" +
      "ate\022\020\n\010revision\030\004 \001(\r\022\031\n\006active\030\005 \001(\010B\t\222" +
      "A\006:\004TRUE\022)\n\010schedule\030\006 \001(\0132\027.flights.Fli" +
      "ghtSchedule\022&\n\024operatingCarrierCode\030\007 \001(" +
      "\tB\010\222A\005x\003\200\001\002\022$\n\025operatingFlightNumber\030\010 \001" +
      "(\tB\005\222A\002x\005\022\036\n\026codeShareFlightNumbers\030\t \003(" +
      "\t\022\016\n\006origin\030\n \001(\t\022\023\n\013destination\030\013 \001(\t\022\025" +
      "\n\rtransitPoints\030\014 \003(\t\022\031\n\021departureTermin" +
      "al\030\r \001(\t\022\027\n\017arrivalTerminal\030\016 \001(\t\022\030\n\020tra" +
      "nsitTerminals\030\017 \003(\t\022/\n\016boardingPolicy\030\020 " +
      "\001(\0162\027.flights.BoardingPolicy\0221\n\017seatClas" +
      "sPolicy\030\021 \001(\0162\030.flights.SeatClassPolicy\022" +
      "%\n\006alerts\030\022 \003(\0162\025.flights.FlightAlerts\022\026" +
      "\n\016passTemplateId\030\023 \001(\t\022&\n\023autoInvalidate" +
      "After\030\024 \001(\rB\t\222A\006:\0042880\022)\n\035autoInvalidate" +
      "CancelledPasses\030\025 \001(\010B\002\030\001\0221\n\020locationMes" +
      "sages\030\026 \003(\0132\017.io.GPSLocationB\006\222A\003\240\001\n\022*\n\016" +
      "beaconMessages\030\027 \003(\0132\n.io.BeaconB\006\222A\003\240\001\n" +
      "\022\036\n\014defaultLinks\030\030 \003(\0132\010.io.Link\022\030\n\020Cond" +
      "itionalItems\030\031 \001(\010\022\035\n\025BarcodeAdditionalD" +
      "ata\030\032 \001(\t\0228\n\031invalidateCancelledPasses\030\033" +
      " \001(\0162\n.io.ToggleB\t\222A\006:\004TRUE\022!\n\004urls\030% \001(" +
      "\0132\023.flights.FlightURLs:\321\001\222A\315\001\n\312\001*\021Flight" +
      " Designator2ZA flight designator record " +
      "describes mostly static data with regard" +
      " to a flight operation.\322\001\013carrierCode\322\001\014" +
      "flightNumber\322\001\006origin\322\001\010schedule\322\001\010revis" +
      "ion\322\001\013destination\322\001\016passTemplateId\"\346\001\n\027F" +
      "lightDesignatorRequest\022\035\n\013carrierCode\030\001 " +
      "\001(\tB\010\222A\005x\003\200\001\002\022\033\n\014flightNumber\030\002 \001(\tB\005\222A\002" +
      "x\005\022\020\n\010revision\030\003 \001(\r:}\222Az\nx*\031Flight Desi" +
      "gnator Request2>Used for retrieving deta" +
      "ils of a particular flight designator.\322\001" +
      "\013carrierCode\322\001\014flightNumberB_\n\030com.passk" +
      "it.grpc.FlightsZ,stash.passkit.com/io/mo" +
      "del/sdk/go/io/flights\252\002\024PassKit.Grpc.Fli" +
      "ghtsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.passkit.grpc.CommonObjects.getDescriptor(),
          com.passkit.grpc.Proximity.getDescriptor(),
          com.passkit.grpc.Links.getDescriptor(),
          com.passkit.grpc.Flights.Common.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    internal_static_flights_FlightDesignator_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flights_FlightDesignator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_FlightDesignator_descriptor,
        new java.lang.String[] { "CarrierCode", "FlightNumber", "ValidFrom", "Revision", "Active", "Schedule", "OperatingCarrierCode", "OperatingFlightNumber", "CodeShareFlightNumbers", "Origin", "Destination", "TransitPoints", "DepartureTerminal", "ArrivalTerminal", "TransitTerminals", "BoardingPolicy", "SeatClassPolicy", "Alerts", "PassTemplateId", "AutoInvalidateAfter", "AutoInvalidateCancelledPasses", "LocationMessages", "BeaconMessages", "DefaultLinks", "ConditionalItems", "BarcodeAdditionalData", "InvalidateCancelledPasses", "Urls", });
    internal_static_flights_FlightDesignatorRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flights_FlightDesignatorRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_FlightDesignatorRequest_descriptor,
        new java.lang.String[] { "CarrierCode", "FlightNumber", "Revision", });
    descriptor.resolveAllFeaturesImmutable();
    com.passkit.grpc.CommonObjects.getDescriptor();
    com.passkit.grpc.Proximity.getDescriptor();
    com.passkit.grpc.Links.getDescriptor();
    com.passkit.grpc.Flights.Common.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Field);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
