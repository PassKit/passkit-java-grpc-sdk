// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/flights/airport.proto

// Protobuf Java Version: 3.25.1
package com.passkit.grpc.Flights;

public final class Airport {
  private Airport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.Port)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The iataAirportCode.
     */
    java.lang.String getIataAirportCode();
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for iataAirportCode.
     */
    com.google.protobuf.ByteString
        getIataAirportCodeBytes();

    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The icaoAirportCode.
     */
    java.lang.String getIcaoAirportCode();
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for icaoAirportCode.
     */
    com.google.protobuf.ByteString
        getIcaoAirportCodeBytes();

    /**
     * <pre>
     * The name of the city associated with the airport can be used in back/text fields.
     * </pre>
     *
     * <code>string cityName = 3;</code>
     * @return The cityName.
     */
    java.lang.String getCityName();
    /**
     * <pre>
     * The name of the city associated with the airport can be used in back/text fields.
     * </pre>
     *
     * <code>string cityName = 3;</code>
     * @return The bytes for cityName.
     */
    com.google.protobuf.ByteString
        getCityNameBytes();

    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     * @return Whether the localizedCityName field is set.
     */
    boolean hasLocalizedCityName();
    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     * @return The localizedCityName.
     */
    com.passkit.grpc.Localization.LocalizedString getLocalizedCityName();
    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     */
    com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedCityNameOrBuilder();

    /**
     * <pre>
     * The name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>string airportName = 5;</code>
     * @return The airportName.
     */
    java.lang.String getAirportName();
    /**
     * <pre>
     * The name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>string airportName = 5;</code>
     * @return The bytes for airportName.
     */
    com.google.protobuf.ByteString
        getAirportNameBytes();

    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     * @return Whether the localizedAirportName field is set.
     */
    boolean hasLocalizedAirportName();
    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     * @return The localizedAirportName.
     */
    com.passkit.grpc.Localization.LocalizedString getLocalizedAirportName();
    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     */
    com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedAirportNameOrBuilder();

    /**
     * <pre>
     * The ISO 3166 country code of the port.
     * </pre>
     *
     * <code>string countryCode = 7;</code>
     * @return The countryCode.
     */
    java.lang.String getCountryCode();
    /**
     * <pre>
     * The ISO 3166 country code of the port.
     * </pre>
     *
     * <code>string countryCode = 7;</code>
     * @return The bytes for countryCode.
     */
    com.google.protobuf.ByteString
        getCountryCodeBytes();

    /**
     * <pre>
     * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The timezone.
     */
    java.lang.String getTimezone();
    /**
     * <pre>
     * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The bytes for timezone.
     */
    com.google.protobuf.ByteString
        getTimezoneBytes();
  }
  /**
   * <pre>
   * Port is an optional record that allows the carrier to overwrite default airport names and their localizations.  A port can represent an origin, destination or transit port of a direct flight with stops.  If a port record does not exist, this information will be automatically populated with publicly available data.
   * </pre>
   *
   * Protobuf type {@code flights.Port}
   */
  public static final class Port extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flights.Port)
      PortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Port.newBuilder() to construct.
    private Port(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Port() {
      iataAirportCode_ = "";
      icaoAirportCode_ = "";
      cityName_ = "";
      airportName_ = "";
      countryCode_ = "";
      timezone_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Port();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.Airport.internal_static_flights_Port_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.Airport.internal_static_flights_Port_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.Airport.Port.class, com.passkit.grpc.Flights.Airport.Port.Builder.class);
    }

    private int bitField0_;
    public static final int IATAAIRPORTCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object iataAirportCode_ = "";
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The iataAirportCode.
     */
    @java.lang.Override
    public java.lang.String getIataAirportCode() {
      java.lang.Object ref = iataAirportCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        iataAirportCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for iataAirportCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIataAirportCodeBytes() {
      java.lang.Object ref = iataAirportCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iataAirportCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ICAOAIRPORTCODE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object icaoAirportCode_ = "";
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The icaoAirportCode.
     */
    @java.lang.Override
    public java.lang.String getIcaoAirportCode() {
      java.lang.Object ref = icaoAirportCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        icaoAirportCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IATA code of the port. At least one of IATA or ICAO airport code is required.
     * </pre>
     *
     * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for icaoAirportCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIcaoAirportCodeBytes() {
      java.lang.Object ref = icaoAirportCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icaoAirportCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CITYNAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cityName_ = "";
    /**
     * <pre>
     * The name of the city associated with the airport can be used in back/text fields.
     * </pre>
     *
     * <code>string cityName = 3;</code>
     * @return The cityName.
     */
    @java.lang.Override
    public java.lang.String getCityName() {
      java.lang.Object ref = cityName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cityName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the city associated with the airport can be used in back/text fields.
     * </pre>
     *
     * <code>string cityName = 3;</code>
     * @return The bytes for cityName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCityNameBytes() {
      java.lang.Object ref = cityName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cityName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCALIZEDCITYNAME_FIELD_NUMBER = 4;
    private com.passkit.grpc.Localization.LocalizedString localizedCityName_;
    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     * @return Whether the localizedCityName field is set.
     */
    @java.lang.Override
    public boolean hasLocalizedCityName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     * @return The localizedCityName.
     */
    @java.lang.Override
    public com.passkit.grpc.Localization.LocalizedString getLocalizedCityName() {
      return localizedCityName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedCityName_;
    }
    /**
     * <pre>
     * The localized name of the city to be displayed on the boarding pass.
     * </pre>
     *
     * <code>.io.LocalizedString localizedCityName = 4;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedCityNameOrBuilder() {
      return localizedCityName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedCityName_;
    }

    public static final int AIRPORTNAME_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object airportName_ = "";
    /**
     * <pre>
     * The name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>string airportName = 5;</code>
     * @return The airportName.
     */
    @java.lang.Override
    public java.lang.String getAirportName() {
      java.lang.Object ref = airportName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        airportName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>string airportName = 5;</code>
     * @return The bytes for airportName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAirportNameBytes() {
      java.lang.Object ref = airportName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        airportName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCALIZEDAIRPORTNAME_FIELD_NUMBER = 6;
    private com.passkit.grpc.Localization.LocalizedString localizedAirportName_;
    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     * @return Whether the localizedAirportName field is set.
     */
    @java.lang.Override
    public boolean hasLocalizedAirportName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     * @return The localizedAirportName.
     */
    @java.lang.Override
    public com.passkit.grpc.Localization.LocalizedString getLocalizedAirportName() {
      return localizedAirportName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedAirportName_;
    }
    /**
     * <pre>
     * The localized name of the airport to be displayed on the boarding pass above the airport code.
     * </pre>
     *
     * <code>.io.LocalizedString localizedAirportName = 6;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedAirportNameOrBuilder() {
      return localizedAirportName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedAirportName_;
    }

    public static final int COUNTRYCODE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object countryCode_ = "";
    /**
     * <pre>
     * The ISO 3166 country code of the port.
     * </pre>
     *
     * <code>string countryCode = 7;</code>
     * @return The countryCode.
     */
    @java.lang.Override
    public java.lang.String getCountryCode() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        countryCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ISO 3166 country code of the port.
     * </pre>
     *
     * <code>string countryCode = 7;</code>
     * @return The bytes for countryCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCountryCodeBytes() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        countryCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMEZONE_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object timezone_ = "";
    /**
     * <pre>
     * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The timezone.
     */
    @java.lang.Override
    public java.lang.String getTimezone() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timezone_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The bytes for timezone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(iataAirportCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, iataAirportCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(icaoAirportCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, icaoAirportCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cityName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, cityName_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(4, getLocalizedCityName());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(airportName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, airportName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(6, getLocalizedAirportName());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(countryCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, countryCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, timezone_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(iataAirportCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, iataAirportCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(icaoAirportCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, icaoAirportCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cityName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, cityName_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLocalizedCityName());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(airportName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, airportName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLocalizedAirportName());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(countryCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, countryCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, timezone_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.Airport.Port)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.Airport.Port other = (com.passkit.grpc.Flights.Airport.Port) obj;

      if (!getIataAirportCode()
          .equals(other.getIataAirportCode())) return false;
      if (!getIcaoAirportCode()
          .equals(other.getIcaoAirportCode())) return false;
      if (!getCityName()
          .equals(other.getCityName())) return false;
      if (hasLocalizedCityName() != other.hasLocalizedCityName()) return false;
      if (hasLocalizedCityName()) {
        if (!getLocalizedCityName()
            .equals(other.getLocalizedCityName())) return false;
      }
      if (!getAirportName()
          .equals(other.getAirportName())) return false;
      if (hasLocalizedAirportName() != other.hasLocalizedAirportName()) return false;
      if (hasLocalizedAirportName()) {
        if (!getLocalizedAirportName()
            .equals(other.getLocalizedAirportName())) return false;
      }
      if (!getCountryCode()
          .equals(other.getCountryCode())) return false;
      if (!getTimezone()
          .equals(other.getTimezone())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IATAAIRPORTCODE_FIELD_NUMBER;
      hash = (53 * hash) + getIataAirportCode().hashCode();
      hash = (37 * hash) + ICAOAIRPORTCODE_FIELD_NUMBER;
      hash = (53 * hash) + getIcaoAirportCode().hashCode();
      hash = (37 * hash) + CITYNAME_FIELD_NUMBER;
      hash = (53 * hash) + getCityName().hashCode();
      if (hasLocalizedCityName()) {
        hash = (37 * hash) + LOCALIZEDCITYNAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalizedCityName().hashCode();
      }
      hash = (37 * hash) + AIRPORTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getAirportName().hashCode();
      if (hasLocalizedAirportName()) {
        hash = (37 * hash) + LOCALIZEDAIRPORTNAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalizedAirportName().hashCode();
      }
      hash = (37 * hash) + COUNTRYCODE_FIELD_NUMBER;
      hash = (53 * hash) + getCountryCode().hashCode();
      hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimezone().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.Airport.Port parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.Airport.Port parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.Airport.Port parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.Airport.Port prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Port is an optional record that allows the carrier to overwrite default airport names and their localizations.  A port can represent an origin, destination or transit port of a direct flight with stops.  If a port record does not exist, this information will be automatically populated with publicly available data.
     * </pre>
     *
     * Protobuf type {@code flights.Port}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.Port)
        com.passkit.grpc.Flights.Airport.PortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_Port_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_Port_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.Airport.Port.class, com.passkit.grpc.Flights.Airport.Port.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.Airport.Port.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLocalizedCityNameFieldBuilder();
          getLocalizedAirportNameFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        iataAirportCode_ = "";
        icaoAirportCode_ = "";
        cityName_ = "";
        localizedCityName_ = null;
        if (localizedCityNameBuilder_ != null) {
          localizedCityNameBuilder_.dispose();
          localizedCityNameBuilder_ = null;
        }
        airportName_ = "";
        localizedAirportName_ = null;
        if (localizedAirportNameBuilder_ != null) {
          localizedAirportNameBuilder_.dispose();
          localizedAirportNameBuilder_ = null;
        }
        countryCode_ = "";
        timezone_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_Port_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.Port getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.Airport.Port.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.Port build() {
        com.passkit.grpc.Flights.Airport.Port result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.Port buildPartial() {
        com.passkit.grpc.Flights.Airport.Port result = new com.passkit.grpc.Flights.Airport.Port(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.Airport.Port result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.iataAirportCode_ = iataAirportCode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.icaoAirportCode_ = icaoAirportCode_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cityName_ = cityName_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.localizedCityName_ = localizedCityNameBuilder_ == null
              ? localizedCityName_
              : localizedCityNameBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.airportName_ = airportName_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.localizedAirportName_ = localizedAirportNameBuilder_ == null
              ? localizedAirportName_
              : localizedAirportNameBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.countryCode_ = countryCode_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.timezone_ = timezone_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.Airport.Port) {
          return mergeFrom((com.passkit.grpc.Flights.Airport.Port)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.Airport.Port other) {
        if (other == com.passkit.grpc.Flights.Airport.Port.getDefaultInstance()) return this;
        if (!other.getIataAirportCode().isEmpty()) {
          iataAirportCode_ = other.iataAirportCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getIcaoAirportCode().isEmpty()) {
          icaoAirportCode_ = other.icaoAirportCode_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getCityName().isEmpty()) {
          cityName_ = other.cityName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasLocalizedCityName()) {
          mergeLocalizedCityName(other.getLocalizedCityName());
        }
        if (!other.getAirportName().isEmpty()) {
          airportName_ = other.airportName_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasLocalizedAirportName()) {
          mergeLocalizedAirportName(other.getLocalizedAirportName());
        }
        if (!other.getCountryCode().isEmpty()) {
          countryCode_ = other.countryCode_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getTimezone().isEmpty()) {
          timezone_ = other.timezone_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                iataAirportCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                icaoAirportCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                cityName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getLocalizedCityNameFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                airportName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getLocalizedAirportNameFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                countryCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                timezone_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object iataAirportCode_ = "";
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The iataAirportCode.
       */
      public java.lang.String getIataAirportCode() {
        java.lang.Object ref = iataAirportCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          iataAirportCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for iataAirportCode.
       */
      public com.google.protobuf.ByteString
          getIataAirportCodeBytes() {
        java.lang.Object ref = iataAirportCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iataAirportCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The iataAirportCode to set.
       * @return This builder for chaining.
       */
      public Builder setIataAirportCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        iataAirportCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearIataAirportCode() {
        iataAirportCode_ = getDefaultInstance().getIataAirportCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string iataAirportCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for iataAirportCode to set.
       * @return This builder for chaining.
       */
      public Builder setIataAirportCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        iataAirportCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object icaoAirportCode_ = "";
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The icaoAirportCode.
       */
      public java.lang.String getIcaoAirportCode() {
        java.lang.Object ref = icaoAirportCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          icaoAirportCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for icaoAirportCode.
       */
      public com.google.protobuf.ByteString
          getIcaoAirportCodeBytes() {
        java.lang.Object ref = icaoAirportCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icaoAirportCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The icaoAirportCode to set.
       * @return This builder for chaining.
       */
      public Builder setIcaoAirportCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        icaoAirportCode_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearIcaoAirportCode() {
        icaoAirportCode_ = getDefaultInstance().getIcaoAirportCode();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA code of the port. At least one of IATA or ICAO airport code is required.
       * </pre>
       *
       * <code>string icaoAirportCode = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for icaoAirportCode to set.
       * @return This builder for chaining.
       */
      public Builder setIcaoAirportCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        icaoAirportCode_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object cityName_ = "";
      /**
       * <pre>
       * The name of the city associated with the airport can be used in back/text fields.
       * </pre>
       *
       * <code>string cityName = 3;</code>
       * @return The cityName.
       */
      public java.lang.String getCityName() {
        java.lang.Object ref = cityName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cityName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the city associated with the airport can be used in back/text fields.
       * </pre>
       *
       * <code>string cityName = 3;</code>
       * @return The bytes for cityName.
       */
      public com.google.protobuf.ByteString
          getCityNameBytes() {
        java.lang.Object ref = cityName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cityName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the city associated with the airport can be used in back/text fields.
       * </pre>
       *
       * <code>string cityName = 3;</code>
       * @param value The cityName to set.
       * @return This builder for chaining.
       */
      public Builder setCityName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cityName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the city associated with the airport can be used in back/text fields.
       * </pre>
       *
       * <code>string cityName = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCityName() {
        cityName_ = getDefaultInstance().getCityName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the city associated with the airport can be used in back/text fields.
       * </pre>
       *
       * <code>string cityName = 3;</code>
       * @param value The bytes for cityName to set.
       * @return This builder for chaining.
       */
      public Builder setCityNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        cityName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Localization.LocalizedString localizedCityName_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder> localizedCityNameBuilder_;
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       * @return Whether the localizedCityName field is set.
       */
      public boolean hasLocalizedCityName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       * @return The localizedCityName.
       */
      public com.passkit.grpc.Localization.LocalizedString getLocalizedCityName() {
        if (localizedCityNameBuilder_ == null) {
          return localizedCityName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedCityName_;
        } else {
          return localizedCityNameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public Builder setLocalizedCityName(com.passkit.grpc.Localization.LocalizedString value) {
        if (localizedCityNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localizedCityName_ = value;
        } else {
          localizedCityNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public Builder setLocalizedCityName(
          com.passkit.grpc.Localization.LocalizedString.Builder builderForValue) {
        if (localizedCityNameBuilder_ == null) {
          localizedCityName_ = builderForValue.build();
        } else {
          localizedCityNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public Builder mergeLocalizedCityName(com.passkit.grpc.Localization.LocalizedString value) {
        if (localizedCityNameBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            localizedCityName_ != null &&
            localizedCityName_ != com.passkit.grpc.Localization.LocalizedString.getDefaultInstance()) {
            getLocalizedCityNameBuilder().mergeFrom(value);
          } else {
            localizedCityName_ = value;
          }
        } else {
          localizedCityNameBuilder_.mergeFrom(value);
        }
        if (localizedCityName_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public Builder clearLocalizedCityName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        localizedCityName_ = null;
        if (localizedCityNameBuilder_ != null) {
          localizedCityNameBuilder_.dispose();
          localizedCityNameBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public com.passkit.grpc.Localization.LocalizedString.Builder getLocalizedCityNameBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLocalizedCityNameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      public com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedCityNameOrBuilder() {
        if (localizedCityNameBuilder_ != null) {
          return localizedCityNameBuilder_.getMessageOrBuilder();
        } else {
          return localizedCityName_ == null ?
              com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedCityName_;
        }
      }
      /**
       * <pre>
       * The localized name of the city to be displayed on the boarding pass.
       * </pre>
       *
       * <code>.io.LocalizedString localizedCityName = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder> 
          getLocalizedCityNameFieldBuilder() {
        if (localizedCityNameBuilder_ == null) {
          localizedCityNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder>(
                  getLocalizedCityName(),
                  getParentForChildren(),
                  isClean());
          localizedCityName_ = null;
        }
        return localizedCityNameBuilder_;
      }

      private java.lang.Object airportName_ = "";
      /**
       * <pre>
       * The name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>string airportName = 5;</code>
       * @return The airportName.
       */
      public java.lang.String getAirportName() {
        java.lang.Object ref = airportName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          airportName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>string airportName = 5;</code>
       * @return The bytes for airportName.
       */
      public com.google.protobuf.ByteString
          getAirportNameBytes() {
        java.lang.Object ref = airportName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          airportName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>string airportName = 5;</code>
       * @param value The airportName to set.
       * @return This builder for chaining.
       */
      public Builder setAirportName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        airportName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>string airportName = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirportName() {
        airportName_ = getDefaultInstance().getAirportName();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>string airportName = 5;</code>
       * @param value The bytes for airportName to set.
       * @return This builder for chaining.
       */
      public Builder setAirportNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        airportName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Localization.LocalizedString localizedAirportName_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder> localizedAirportNameBuilder_;
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       * @return Whether the localizedAirportName field is set.
       */
      public boolean hasLocalizedAirportName() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       * @return The localizedAirportName.
       */
      public com.passkit.grpc.Localization.LocalizedString getLocalizedAirportName() {
        if (localizedAirportNameBuilder_ == null) {
          return localizedAirportName_ == null ? com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedAirportName_;
        } else {
          return localizedAirportNameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public Builder setLocalizedAirportName(com.passkit.grpc.Localization.LocalizedString value) {
        if (localizedAirportNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localizedAirportName_ = value;
        } else {
          localizedAirportNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public Builder setLocalizedAirportName(
          com.passkit.grpc.Localization.LocalizedString.Builder builderForValue) {
        if (localizedAirportNameBuilder_ == null) {
          localizedAirportName_ = builderForValue.build();
        } else {
          localizedAirportNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public Builder mergeLocalizedAirportName(com.passkit.grpc.Localization.LocalizedString value) {
        if (localizedAirportNameBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            localizedAirportName_ != null &&
            localizedAirportName_ != com.passkit.grpc.Localization.LocalizedString.getDefaultInstance()) {
            getLocalizedAirportNameBuilder().mergeFrom(value);
          } else {
            localizedAirportName_ = value;
          }
        } else {
          localizedAirportNameBuilder_.mergeFrom(value);
        }
        if (localizedAirportName_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public Builder clearLocalizedAirportName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        localizedAirportName_ = null;
        if (localizedAirportNameBuilder_ != null) {
          localizedAirportNameBuilder_.dispose();
          localizedAirportNameBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public com.passkit.grpc.Localization.LocalizedString.Builder getLocalizedAirportNameBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLocalizedAirportNameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      public com.passkit.grpc.Localization.LocalizedStringOrBuilder getLocalizedAirportNameOrBuilder() {
        if (localizedAirportNameBuilder_ != null) {
          return localizedAirportNameBuilder_.getMessageOrBuilder();
        } else {
          return localizedAirportName_ == null ?
              com.passkit.grpc.Localization.LocalizedString.getDefaultInstance() : localizedAirportName_;
        }
      }
      /**
       * <pre>
       * The localized name of the airport to be displayed on the boarding pass above the airport code.
       * </pre>
       *
       * <code>.io.LocalizedString localizedAirportName = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder> 
          getLocalizedAirportNameFieldBuilder() {
        if (localizedAirportNameBuilder_ == null) {
          localizedAirportNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Localization.LocalizedString, com.passkit.grpc.Localization.LocalizedString.Builder, com.passkit.grpc.Localization.LocalizedStringOrBuilder>(
                  getLocalizedAirportName(),
                  getParentForChildren(),
                  isClean());
          localizedAirportName_ = null;
        }
        return localizedAirportNameBuilder_;
      }

      private java.lang.Object countryCode_ = "";
      /**
       * <pre>
       * The ISO 3166 country code of the port.
       * </pre>
       *
       * <code>string countryCode = 7;</code>
       * @return The countryCode.
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          countryCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ISO 3166 country code of the port.
       * </pre>
       *
       * <code>string countryCode = 7;</code>
       * @return The bytes for countryCode.
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ISO 3166 country code of the port.
       * </pre>
       *
       * <code>string countryCode = 7;</code>
       * @param value The countryCode to set.
       * @return This builder for chaining.
       */
      public Builder setCountryCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        countryCode_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ISO 3166 country code of the port.
       * </pre>
       *
       * <code>string countryCode = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCountryCode() {
        countryCode_ = getDefaultInstance().getCountryCode();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ISO 3166 country code of the port.
       * </pre>
       *
       * <code>string countryCode = 7;</code>
       * @param value The bytes for countryCode to set.
       * @return This builder for chaining.
       */
      public Builder setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        countryCode_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object timezone_ = "";
      /**
       * <pre>
       * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return The timezone.
       */
      public java.lang.String getTimezone() {
        java.lang.Object ref = timezone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timezone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return The bytes for timezone.
       */
      public com.google.protobuf.ByteString
          getTimezoneBytes() {
        java.lang.Object ref = timezone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timezone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @param value The timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezone(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        timezone_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimezone() {
        timezone_ = getDefaultInstance().getTimezone();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timezone of the airport in IANA timezone format. This is required to ensure the correct rendering of times and dates in the time local to the port.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @param value The bytes for timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        timezone_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flights.Port)
    }

    // @@protoc_insertion_point(class_scope:flights.Port)
    private static final com.passkit.grpc.Flights.Airport.Port DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.Airport.Port();
    }

    public static com.passkit.grpc.Flights.Airport.Port getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Port>
        PARSER = new com.google.protobuf.AbstractParser<Port>() {
      @java.lang.Override
      public Port parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Port> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Port> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.Airport.Port getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AirportCodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.AirportCode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The IATA or ICAO airport code.
     * </pre>
     *
     * <code>string airportCode = 1;</code>
     * @return The airportCode.
     */
    java.lang.String getAirportCode();
    /**
     * <pre>
     * The IATA or ICAO airport code.
     * </pre>
     *
     * <code>string airportCode = 1;</code>
     * @return The bytes for airportCode.
     */
    com.google.protobuf.ByteString
        getAirportCodeBytes();
  }
  /**
   * <pre>
   * Airport Request is used for retrieving or deleting a port record.
   * </pre>
   *
   * Protobuf type {@code flights.AirportCode}
   */
  public static final class AirportCode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flights.AirportCode)
      AirportCodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AirportCode.newBuilder() to construct.
    private AirportCode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AirportCode() {
      airportCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AirportCode();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.Airport.internal_static_flights_AirportCode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.Airport.internal_static_flights_AirportCode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.Airport.AirportCode.class, com.passkit.grpc.Flights.Airport.AirportCode.Builder.class);
    }

    public static final int AIRPORTCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object airportCode_ = "";
    /**
     * <pre>
     * The IATA or ICAO airport code.
     * </pre>
     *
     * <code>string airportCode = 1;</code>
     * @return The airportCode.
     */
    @java.lang.Override
    public java.lang.String getAirportCode() {
      java.lang.Object ref = airportCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        airportCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The IATA or ICAO airport code.
     * </pre>
     *
     * <code>string airportCode = 1;</code>
     * @return The bytes for airportCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAirportCodeBytes() {
      java.lang.Object ref = airportCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        airportCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(airportCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, airportCode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(airportCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, airportCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.Airport.AirportCode)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.Airport.AirportCode other = (com.passkit.grpc.Flights.Airport.AirportCode) obj;

      if (!getAirportCode()
          .equals(other.getAirportCode())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AIRPORTCODE_FIELD_NUMBER;
      hash = (53 * hash) + getAirportCode().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.Airport.AirportCode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.Airport.AirportCode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.Airport.AirportCode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.Airport.AirportCode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Airport Request is used for retrieving or deleting a port record.
     * </pre>
     *
     * Protobuf type {@code flights.AirportCode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.AirportCode)
        com.passkit.grpc.Flights.Airport.AirportCodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_AirportCode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_AirportCode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.Airport.AirportCode.class, com.passkit.grpc.Flights.Airport.AirportCode.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.Airport.AirportCode.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        airportCode_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.Airport.internal_static_flights_AirportCode_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.AirportCode getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.Airport.AirportCode.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.AirportCode build() {
        com.passkit.grpc.Flights.Airport.AirportCode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.Airport.AirportCode buildPartial() {
        com.passkit.grpc.Flights.Airport.AirportCode result = new com.passkit.grpc.Flights.Airport.AirportCode(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.Airport.AirportCode result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.airportCode_ = airportCode_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.Airport.AirportCode) {
          return mergeFrom((com.passkit.grpc.Flights.Airport.AirportCode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.Airport.AirportCode other) {
        if (other == com.passkit.grpc.Flights.Airport.AirportCode.getDefaultInstance()) return this;
        if (!other.getAirportCode().isEmpty()) {
          airportCode_ = other.airportCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                airportCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object airportCode_ = "";
      /**
       * <pre>
       * The IATA or ICAO airport code.
       * </pre>
       *
       * <code>string airportCode = 1;</code>
       * @return The airportCode.
       */
      public java.lang.String getAirportCode() {
        java.lang.Object ref = airportCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          airportCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO airport code.
       * </pre>
       *
       * <code>string airportCode = 1;</code>
       * @return The bytes for airportCode.
       */
      public com.google.protobuf.ByteString
          getAirportCodeBytes() {
        java.lang.Object ref = airportCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          airportCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The IATA or ICAO airport code.
       * </pre>
       *
       * <code>string airportCode = 1;</code>
       * @param value The airportCode to set.
       * @return This builder for chaining.
       */
      public Builder setAirportCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        airportCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO airport code.
       * </pre>
       *
       * <code>string airportCode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirportCode() {
        airportCode_ = getDefaultInstance().getAirportCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IATA or ICAO airport code.
       * </pre>
       *
       * <code>string airportCode = 1;</code>
       * @param value The bytes for airportCode to set.
       * @return This builder for chaining.
       */
      public Builder setAirportCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        airportCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flights.AirportCode)
    }

    // @@protoc_insertion_point(class_scope:flights.AirportCode)
    private static final com.passkit.grpc.Flights.Airport.AirportCode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.Airport.AirportCode();
    }

    public static com.passkit.grpc.Flights.Airport.AirportCode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AirportCode>
        PARSER = new com.google.protobuf.AbstractParser<AirportCode>() {
      @java.lang.Override
      public AirportCode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AirportCode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AirportCode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.Airport.AirportCode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_Port_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flights_Port_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_AirportCode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flights_AirportCode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030io/flights/airport.proto\022\007flights\032\034io/" +
      "common/localization.proto\032.protoc-gen-op" +
      "enapiv2/options/annotations.proto\"\250\003\n\004Po" +
      "rt\022\036\n\017iataAirportCode\030\001 \001(\tB\005\222A\002x\003\022\036\n\017ic" +
      "aoAirportCode\030\002 \001(\tB\005\222A\002x\004\022\020\n\010cityName\030\003" +
      " \001(\t\022.\n\021localizedCityName\030\004 \001(\0132\023.io.Loc" +
      "alizedString\022\023\n\013airportName\030\005 \001(\t\0221\n\024loc" +
      "alizedAirportName\030\006 \001(\0132\023.io.LocalizedSt" +
      "ring\022\023\n\013countryCode\030\007 \001(\t\022\020\n\010timezone\030\010 " +
      "\001(\t:\256\001\222A\252\001\n\247\001*\016Airport Record2QAirport r" +
      "ecords are required for each port that a" +
      " carrier operates in and out of.\322\001\017iataA" +
      "irportCode\322\001\010cityName\322\001\013airportName\322\001\013co" +
      "untryCode\322\001\010timezone\"\"\n\013AirportCode\022\023\n\013a" +
      "irportCode\030\001 \001(\tB_\n\030com.passkit.grpc.Fli" +
      "ghtsZ,stash.passkit.com/io/model/sdk/go/" +
      "io/flights\252\002\024PassKit.Grpc.Flightsb\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.passkit.grpc.Localization.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    internal_static_flights_Port_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flights_Port_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flights_Port_descriptor,
        new java.lang.String[] { "IataAirportCode", "IcaoAirportCode", "CityName", "LocalizedCityName", "AirportName", "LocalizedAirportName", "CountryCode", "Timezone", });
    internal_static_flights_AirportCode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flights_AirportCode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flights_AirportCode_descriptor,
        new java.lang.String[] { "AirportCode", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Field);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.passkit.grpc.Localization.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
