// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: io/flights/boarding_pass.proto
// Protobuf Java Version: 4.29.0

package com.passkit.grpc.Flights;

public final class BoardingPass {
  private BoardingPass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 0,
      /* suffix= */ "",
      BoardingPass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BoardingPassRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     * </pre>
     *
     * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingCarrierPNR.
     */
    java.lang.String getOperatingCarrierPNR();
    /**
     * <pre>
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     * </pre>
     *
     * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingCarrierPNR.
     */
    com.google.protobuf.ByteString
        getOperatingCarrierPNRBytes();

    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return A list containing the relatedPNRs.
     */
    java.util.List<java.lang.String>
        getRelatedPNRsList();
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The count of relatedPNRs.
     */
    int getRelatedPNRsCount();
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param index The index of the element to return.
     * @return The relatedPNRs at the given index.
     */
    java.lang.String getRelatedPNRs(int index);
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the relatedPNRs at the given index.
     */
    com.google.protobuf.ByteString
        getRelatedPNRsBytes(int index);

    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketNumber.
     */
    java.lang.String getTicketNumber();
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for ticketNumber.
     */
    com.google.protobuf.ByteString
        getTicketNumberBytes();

    /**
     * <pre>
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     * </pre>
     *
     * <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketLeg.
     */
    int getTicketLeg();

    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The boardingPoint.
     */
    java.lang.String getBoardingPoint();
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for boardingPoint.
     */
    com.google.protobuf.ByteString
        getBoardingPointBytes();

    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     * </pre>
     *
     * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The deplaningPoint.
     */
    java.lang.String getDeplaningPoint();
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     * </pre>
     *
     * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for deplaningPoint.
     */
    com.google.protobuf.ByteString
        getDeplaningPointBytes();

    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    java.lang.String getCarrierCode();
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    com.google.protobuf.ByteString
        getCarrierCodeBytes();

    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    java.lang.String getFlightNumber();
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    com.google.protobuf.ByteString
        getFlightNumberBytes();

    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     * @return Whether the departureDate field is set.
     */
    boolean hasDepartureDate();
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     * @return The departureDate.
     */
    com.passkit.grpc.CommonObjects.Date getDepartureDate();
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     */
    com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder();

    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     * @return Whether the passenger field is set.
     */
    boolean hasPassenger();
    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     * @return The passenger.
     */
    com.passkit.grpc.Flights.PassengerOuterClass.Passenger getPassenger();
    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     */
    com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder getPassengerOrBuilder();

    /**
     * <pre>
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     * </pre>
     *
     * <code>string class = 13;</code>
     * @return The class.
     */
    java.lang.String getClass_();
    /**
     * <pre>
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     * </pre>
     *
     * <code>string class = 13;</code>
     * @return The bytes for class.
     */
    com.google.protobuf.ByteString
        getClass_Bytes();

    /**
     * <pre>
     * The compartment code / class of the ticket.
     * </pre>
     *
     * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @return The enum numeric value on the wire for compartmentCode.
     */
    int getCompartmentCodeValue();
    /**
     * <pre>
     * The compartment code / class of the ticket.
     * </pre>
     *
     * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @return The compartmentCode.
     */
    com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode getCompartmentCode();

    /**
     * <pre>
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     * </pre>
     *
     * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The seatNumber.
     */
    java.lang.String getSeatNumber();
    /**
     * <pre>
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     * </pre>
     *
     * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for seatNumber.
     */
    com.google.protobuf.ByteString
        getSeatNumberBytes();

    /**
     * <pre>
     * The check in sequence number.
     * </pre>
     *
     * <code>int32 sequenceNumber = 16;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();

    /**
     * <pre>
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     * </pre>
     *
     * <code>string boardingGroup = 17;</code>
     * @return The boardingGroup.
     */
    java.lang.String getBoardingGroup();
    /**
     * <pre>
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     * </pre>
     *
     * <code>string boardingGroup = 17;</code>
     * @return The bytes for boardingGroup.
     */
    com.google.protobuf.ByteString
        getBoardingGroupBytes();

    /**
     * <pre>
     * An additional field to indicate boarding priority or order.
     * </pre>
     *
     * <code>string boardingPosition = 18;</code>
     * @return The boardingPosition.
     */
    java.lang.String getBoardingPosition();
    /**
     * <pre>
     * An additional field to indicate boarding priority or order.
     * </pre>
     *
     * <code>string boardingPosition = 18;</code>
     * @return The bytes for boardingPosition.
     */
    com.google.protobuf.ByteString
        getBoardingPositionBytes();

    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The freeBaggageAllowance.
     */
    java.lang.String getFreeBaggageAllowance();
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for freeBaggageAllowance.
     */
    com.google.protobuf.ByteString
        getFreeBaggageAllowanceBytes();

    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carryOnAllowance.
     */
    java.lang.String getCarryOnAllowance();
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carryOnAllowance.
     */
    com.google.protobuf.ByteString
        getCarryOnAllowanceBytes();

    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @return A list containing the ssrCodes.
     */
    java.util.List<java.lang.String>
        getSsrCodesList();
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @return The count of ssrCodes.
     */
    int getSsrCodesCount();
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @param index The index of the element to return.
     * @return The ssrCodes at the given index.
     */
    java.lang.String getSsrCodes(int index);
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssrCodes at the given index.
     */
    com.google.protobuf.ByteString
        getSsrCodesBytes(int index);

    /**
     * <pre>
     * Other service information that may be relevant to the booking.
     * </pre>
     *
     * <code>string osi = 22;</code>
     * @return The osi.
     */
    java.lang.String getOsi();
    /**
     * <pre>
     * Other service information that may be relevant to the booking.
     * </pre>
     *
     * <code>string osi = 22;</code>
     * @return The bytes for osi.
     */
    com.google.protobuf.ByteString
        getOsiBytes();

    /**
     * <pre>
     * Free text booking remarks.
     * </pre>
     *
     * <code>string remarks = 23;</code>
     * @return The remarks.
     */
    java.lang.String getRemarks();
    /**
     * <pre>
     * Free text booking remarks.
     * </pre>
     *
     * <code>string remarks = 23;</code>
     * @return The bytes for remarks.
     */
    com.google.protobuf.ByteString
        getRemarksBytes();

    /**
     * <pre>
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     * </pre>
     *
     * <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @return The enum numeric value on the wire for passengerStatus.
     */
    int getPassengerStatusValue();
    /**
     * <pre>
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     * </pre>
     *
     * <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @return The passengerStatus.
     */
    com.passkit.grpc.Flights.Barcode.PassengerStatus getPassengerStatus();

    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @return Whether the conditionalItems field is set.
     */
    boolean hasConditionalItems();
    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @return The conditionalItems.
     */
    com.passkit.grpc.Flights.Barcode.ConditionalItems getConditionalItems();
    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     */
    com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder getConditionalItemsOrBuilder();

    /**
     * <pre>
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     * </pre>
     *
     * <code>string barcodePayload = 26;</code>
     * @return The barcodePayload.
     */
    java.lang.String getBarcodePayload();
    /**
     * <pre>
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     * </pre>
     *
     * <code>string barcodePayload = 26;</code>
     * @return The bytes for barcodePayload.
     */
    com.google.protobuf.ByteString
        getBarcodePayloadBytes();

    /**
     * <pre>
     * Security image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string securityImage = 27;</code>
     * @return The securityImage.
     */
    java.lang.String getSecurityImage();
    /**
     * <pre>
     * Security image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string securityImage = 27;</code>
     * @return The bytes for securityImage.
     */
    com.google.protobuf.ByteString
        getSecurityImageBytes();

    /**
     * <pre>
     * Privilege image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string privilegeImage = 28;</code>
     * @return The privilegeImage.
     */
    java.lang.String getPrivilegeImage();
    /**
     * <pre>
     * Privilege image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string privilegeImage = 28;</code>
     * @return The bytes for privilegeImage.
     */
    com.google.protobuf.ByteString
        getPrivilegeImageBytes();

    /**
     * <pre>
     * Footer image id for display above the barcode on iOS devices.
     * </pre>
     *
     * <code>string footerImage = 29;</code>
     * @return The footerImage.
     */
    java.lang.String getFooterImage();
    /**
     * <pre>
     * Footer image id for display above the barcode on iOS devices.
     * </pre>
     *
     * <code>string footerImage = 29;</code>
     * @return The bytes for footerImage.
     */
    com.google.protobuf.ByteString
        getFooterImageBytes();

    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<com.passkit.grpc.Proximity.GPSLocation> 
        getLocationMessagesList();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index);
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    int getLocationMessagesCount();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
        getLocationMessagesOrBuilderList();
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
        int index);

    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<com.passkit.grpc.Proximity.Beacon> 
        getBeaconMessagesList();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index);
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    int getBeaconMessagesCount();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
        getBeaconMessagesOrBuilderList();
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
        int index);

    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<com.passkit.grpc.Links.Link> 
        getLinksList();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Links.Link getLinks(int index);
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    int getLinksCount();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
        getLinksOrBuilderList();
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.Links.LinkOrBuilder getLinksOrBuilder(
        int index);

    /**
     * <pre>
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     * </pre>
     *
     * <code>string barcodeAdditionalData = 33;</code>
     * @return The barcodeAdditionalData.
     */
    java.lang.String getBarcodeAdditionalData();
    /**
     * <pre>
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     * </pre>
     *
     * <code>string barcodeAdditionalData = 33;</code>
     * @return The bytes for barcodeAdditionalData.
     */
    com.google.protobuf.ByteString
        getBarcodeAdditionalDataBytes();

    /**
     * <pre>
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     * </pre>
     *
     * <code>string infantPassId = 34;</code>
     * @return The infantPassId.
     */
    java.lang.String getInfantPassId();
    /**
     * <pre>
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     * </pre>
     *
     * <code>string infantPassId = 34;</code>
     * @return The bytes for infantPassId.
     */
    com.google.protobuf.ByteString
        getInfantPassIdBytes();

    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     * @return Whether the additionalDataItems field is set.
     */
    boolean hasAdditionalDataItems();
    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     * @return The additionalDataItems.
     */
    com.passkit.grpc.CommonObjects.DataItems getAdditionalDataItems();
    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     */
    com.passkit.grpc.CommonObjects.DataItemsOrBuilder getAdditionalDataItemsOrBuilder();

    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     * @return The metadata.
     */
    com.passkit.grpc.MetricsOuterClass.Metadata getMetadata();
    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     */
    com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getMetadataOrBuilder();
  }
  /**
   * <pre>
   * A Boarding Pass record is unique to an individual passenger journey form a boarding point to a deplaning point. A Carrier and a Flight Designation record must exist. If a Flight record does not already exist, then it will be auto-generated based on the Flight Designation record and other publicly available data.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassRecord}
   */
  public static final class BoardingPassRecord extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassRecord)
      BoardingPassRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassRecord.class.getName());
    }
    // Use BoardingPassRecord.newBuilder() to construct.
    private BoardingPassRecord(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassRecord() {
      id_ = "";
      operatingCarrierPNR_ = "";
      relatedPNRs_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      ticketNumber_ = "";
      boardingPoint_ = "";
      deplaningPoint_ = "";
      carrierCode_ = "";
      flightNumber_ = "";
      class__ = "";
      compartmentCode_ = 0;
      seatNumber_ = "";
      boardingGroup_ = "";
      boardingPosition_ = "";
      freeBaggageAllowance_ = "";
      carryOnAllowance_ = "";
      ssrCodes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      osi_ = "";
      remarks_ = "";
      passengerStatus_ = 0;
      barcodePayload_ = "";
      securityImage_ = "";
      privilegeImage_ = "";
      footerImage_ = "";
      locationMessages_ = java.util.Collections.emptyList();
      beaconMessages_ = java.util.Collections.emptyList();
      links_ = java.util.Collections.emptyList();
      barcodeAdditionalData_ = "";
      infantPassId_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPERATINGCARRIERPNR_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object operatingCarrierPNR_ = "";
    /**
     * <pre>
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     * </pre>
     *
     * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The operatingCarrierPNR.
     */
    @java.lang.Override
    public java.lang.String getOperatingCarrierPNR() {
      java.lang.Object ref = operatingCarrierPNR_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operatingCarrierPNR_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     * </pre>
     *
     * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for operatingCarrierPNR.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperatingCarrierPNRBytes() {
      java.lang.Object ref = operatingCarrierPNR_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatingCarrierPNR_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATEDPNRS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList relatedPNRs_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return A list containing the relatedPNRs.
     */
    public com.google.protobuf.ProtocolStringList
        getRelatedPNRsList() {
      return relatedPNRs_;
    }
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The count of relatedPNRs.
     */
    public int getRelatedPNRsCount() {
      return relatedPNRs_.size();
    }
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param index The index of the element to return.
     * @return The relatedPNRs at the given index.
     */
    public java.lang.String getRelatedPNRs(int index) {
      return relatedPNRs_.get(index);
    }
    /**
     * <pre>
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     * </pre>
     *
     * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the relatedPNRs at the given index.
     */
    public com.google.protobuf.ByteString
        getRelatedPNRsBytes(int index) {
      return relatedPNRs_.getByteString(index);
    }

    public static final int TICKETNUMBER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ticketNumber_ = "";
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketNumber.
     */
    @java.lang.Override
    public java.lang.String getTicketNumber() {
      java.lang.Object ref = ticketNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ticketNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for ticketNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTicketNumberBytes() {
      java.lang.Object ref = ticketNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticketNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKETLEG_FIELD_NUMBER = 5;
    private int ticketLeg_ = 0;
    /**
     * <pre>
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     * </pre>
     *
     * <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketLeg.
     */
    @java.lang.Override
    public int getTicketLeg() {
      return ticketLeg_;
    }

    public static final int BOARDINGPOINT_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingPoint_ = "";
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The boardingPoint.
     */
    @java.lang.Override
    public java.lang.String getBoardingPoint() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for boardingPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingPointBytes() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPLANINGPOINT_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deplaningPoint_ = "";
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     * </pre>
     *
     * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The deplaningPoint.
     */
    @java.lang.Override
    public java.lang.String getDeplaningPoint() {
      java.lang.Object ref = deplaningPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deplaningPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     * </pre>
     *
     * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for deplaningPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeplaningPointBytes() {
      java.lang.Object ref = deplaningPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deplaningPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARRIERCODE_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object carrierCode_ = "";
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    @java.lang.Override
    public java.lang.String getCarrierCode() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carrierCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCarrierCodeBytes() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carrierCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLIGHTNUMBER_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile java.lang.Object flightNumber_ = "";
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    @java.lang.Override
    public java.lang.String getFlightNumber() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlightNumberBytes() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPARTUREDATE_FIELD_NUMBER = 11;
    private com.passkit.grpc.CommonObjects.Date departureDate_;
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     * @return Whether the departureDate field is set.
     */
    @java.lang.Override
    public boolean hasDepartureDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     * @return The departureDate.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.Date getDepartureDate() {
      return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
    }
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 11;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder() {
      return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
    }

    public static final int PASSENGER_FIELD_NUMBER = 12;
    private com.passkit.grpc.Flights.PassengerOuterClass.Passenger passenger_;
    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     * @return Whether the passenger field is set.
     */
    @java.lang.Override
    public boolean hasPassenger() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     * @return The passenger.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.PassengerOuterClass.Passenger getPassenger() {
      return passenger_ == null ? com.passkit.grpc.Flights.PassengerOuterClass.Passenger.getDefaultInstance() : passenger_;
    }
    /**
     * <pre>
     * Details of the passenger and any infant.
     * </pre>
     *
     * <code>.flights.Passenger passenger = 12;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder getPassengerOrBuilder() {
      return passenger_ == null ? com.passkit.grpc.Flights.PassengerOuterClass.Passenger.getDefaultInstance() : passenger_;
    }

    public static final int CLASS_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private volatile java.lang.Object class__ = "";
    /**
     * <pre>
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     * </pre>
     *
     * <code>string class = 13;</code>
     * @return The class.
     */
    @java.lang.Override
    public java.lang.String getClass_() {
      java.lang.Object ref = class__;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        class__ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     * </pre>
     *
     * <code>string class = 13;</code>
     * @return The bytes for class.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClass_Bytes() {
      java.lang.Object ref = class__;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        class__ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPARTMENTCODE_FIELD_NUMBER = 14;
    private int compartmentCode_ = 0;
    /**
     * <pre>
     * The compartment code / class of the ticket.
     * </pre>
     *
     * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @return The enum numeric value on the wire for compartmentCode.
     */
    @java.lang.Override public int getCompartmentCodeValue() {
      return compartmentCode_;
    }
    /**
     * <pre>
     * The compartment code / class of the ticket.
     * </pre>
     *
     * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @return The compartmentCode.
     */
    @java.lang.Override public com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode getCompartmentCode() {
      com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode result = com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.forNumber(compartmentCode_);
      return result == null ? com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.UNRECOGNIZED : result;
    }

    public static final int SEATNUMBER_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private volatile java.lang.Object seatNumber_ = "";
    /**
     * <pre>
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     * </pre>
     *
     * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The seatNumber.
     */
    @java.lang.Override
    public java.lang.String getSeatNumber() {
      java.lang.Object ref = seatNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        seatNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     * </pre>
     *
     * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for seatNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSeatNumberBytes() {
      java.lang.Object ref = seatNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        seatNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 16;
    private int sequenceNumber_ = 0;
    /**
     * <pre>
     * The check in sequence number.
     * </pre>
     *
     * <code>int32 sequenceNumber = 16;</code>
     * @return The sequenceNumber.
     */
    @java.lang.Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int BOARDINGGROUP_FIELD_NUMBER = 17;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingGroup_ = "";
    /**
     * <pre>
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     * </pre>
     *
     * <code>string boardingGroup = 17;</code>
     * @return The boardingGroup.
     */
    @java.lang.Override
    public java.lang.String getBoardingGroup() {
      java.lang.Object ref = boardingGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingGroup_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     * </pre>
     *
     * <code>string boardingGroup = 17;</code>
     * @return The bytes for boardingGroup.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingGroupBytes() {
      java.lang.Object ref = boardingGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOARDINGPOSITION_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingPosition_ = "";
    /**
     * <pre>
     * An additional field to indicate boarding priority or order.
     * </pre>
     *
     * <code>string boardingPosition = 18;</code>
     * @return The boardingPosition.
     */
    @java.lang.Override
    public java.lang.String getBoardingPosition() {
      java.lang.Object ref = boardingPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An additional field to indicate boarding priority or order.
     * </pre>
     *
     * <code>string boardingPosition = 18;</code>
     * @return The bytes for boardingPosition.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingPositionBytes() {
      java.lang.Object ref = boardingPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREEBAGGAGEALLOWANCE_FIELD_NUMBER = 19;
    @SuppressWarnings("serial")
    private volatile java.lang.Object freeBaggageAllowance_ = "";
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The freeBaggageAllowance.
     */
    @java.lang.Override
    public java.lang.String getFreeBaggageAllowance() {
      java.lang.Object ref = freeBaggageAllowance_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        freeBaggageAllowance_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for freeBaggageAllowance.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFreeBaggageAllowanceBytes() {
      java.lang.Object ref = freeBaggageAllowance_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        freeBaggageAllowance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARRYONALLOWANCE_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private volatile java.lang.Object carryOnAllowance_ = "";
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carryOnAllowance.
     */
    @java.lang.Override
    public java.lang.String getCarryOnAllowance() {
      java.lang.Object ref = carryOnAllowance_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carryOnAllowance_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     * </pre>
     *
     * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carryOnAllowance.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCarryOnAllowanceBytes() {
      java.lang.Object ref = carryOnAllowance_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carryOnAllowance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SSRCODES_FIELD_NUMBER = 21;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList ssrCodes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @return A list containing the ssrCodes.
     */
    public com.google.protobuf.ProtocolStringList
        getSsrCodesList() {
      return ssrCodes_;
    }
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @return The count of ssrCodes.
     */
    public int getSsrCodesCount() {
      return ssrCodes_.size();
    }
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @param index The index of the element to return.
     * @return The ssrCodes at the given index.
     */
    public java.lang.String getSsrCodes(int index) {
      return ssrCodes_.get(index);
    }
    /**
     * <pre>
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     * </pre>
     *
     * <code>repeated string ssrCodes = 21;</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssrCodes at the given index.
     */
    public com.google.protobuf.ByteString
        getSsrCodesBytes(int index) {
      return ssrCodes_.getByteString(index);
    }

    public static final int OSI_FIELD_NUMBER = 22;
    @SuppressWarnings("serial")
    private volatile java.lang.Object osi_ = "";
    /**
     * <pre>
     * Other service information that may be relevant to the booking.
     * </pre>
     *
     * <code>string osi = 22;</code>
     * @return The osi.
     */
    @java.lang.Override
    public java.lang.String getOsi() {
      java.lang.Object ref = osi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        osi_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Other service information that may be relevant to the booking.
     * </pre>
     *
     * <code>string osi = 22;</code>
     * @return The bytes for osi.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOsiBytes() {
      java.lang.Object ref = osi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        osi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REMARKS_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private volatile java.lang.Object remarks_ = "";
    /**
     * <pre>
     * Free text booking remarks.
     * </pre>
     *
     * <code>string remarks = 23;</code>
     * @return The remarks.
     */
    @java.lang.Override
    public java.lang.String getRemarks() {
      java.lang.Object ref = remarks_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        remarks_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Free text booking remarks.
     * </pre>
     *
     * <code>string remarks = 23;</code>
     * @return The bytes for remarks.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRemarksBytes() {
      java.lang.Object ref = remarks_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remarks_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSENGERSTATUS_FIELD_NUMBER = 24;
    private int passengerStatus_ = 0;
    /**
     * <pre>
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     * </pre>
     *
     * <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @return The enum numeric value on the wire for passengerStatus.
     */
    @java.lang.Override public int getPassengerStatusValue() {
      return passengerStatus_;
    }
    /**
     * <pre>
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     * </pre>
     *
     * <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @return The passengerStatus.
     */
    @java.lang.Override public com.passkit.grpc.Flights.Barcode.PassengerStatus getPassengerStatus() {
      com.passkit.grpc.Flights.Barcode.PassengerStatus result = com.passkit.grpc.Flights.Barcode.PassengerStatus.forNumber(passengerStatus_);
      return result == null ? com.passkit.grpc.Flights.Barcode.PassengerStatus.UNRECOGNIZED : result;
    }

    public static final int CONDITIONALITEMS_FIELD_NUMBER = 25;
    private com.passkit.grpc.Flights.Barcode.ConditionalItems conditionalItems_;
    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @return Whether the conditionalItems field is set.
     */
    @java.lang.Override
    public boolean hasConditionalItems() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @return The conditionalItems.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Barcode.ConditionalItems getConditionalItems() {
      return conditionalItems_ == null ? com.passkit.grpc.Flights.Barcode.ConditionalItems.getDefaultInstance() : conditionalItems_;
    }
    /**
     * <pre>
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     * </pre>
     *
     * <code>.flights.ConditionalItems conditionalItems = 25;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder getConditionalItemsOrBuilder() {
      return conditionalItems_ == null ? com.passkit.grpc.Flights.Barcode.ConditionalItems.getDefaultInstance() : conditionalItems_;
    }

    public static final int BARCODEPAYLOAD_FIELD_NUMBER = 26;
    @SuppressWarnings("serial")
    private volatile java.lang.Object barcodePayload_ = "";
    /**
     * <pre>
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     * </pre>
     *
     * <code>string barcodePayload = 26;</code>
     * @return The barcodePayload.
     */
    @java.lang.Override
    public java.lang.String getBarcodePayload() {
      java.lang.Object ref = barcodePayload_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        barcodePayload_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     * </pre>
     *
     * <code>string barcodePayload = 26;</code>
     * @return The bytes for barcodePayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBarcodePayloadBytes() {
      java.lang.Object ref = barcodePayload_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        barcodePayload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECURITYIMAGE_FIELD_NUMBER = 27;
    @SuppressWarnings("serial")
    private volatile java.lang.Object securityImage_ = "";
    /**
     * <pre>
     * Security image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string securityImage = 27;</code>
     * @return The securityImage.
     */
    @java.lang.Override
    public java.lang.String getSecurityImage() {
      java.lang.Object ref = securityImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        securityImage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Security image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string securityImage = 27;</code>
     * @return The bytes for securityImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecurityImageBytes() {
      java.lang.Object ref = securityImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIVILEGEIMAGE_FIELD_NUMBER = 28;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privilegeImage_ = "";
    /**
     * <pre>
     * Privilege image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string privilegeImage = 28;</code>
     * @return The privilegeImage.
     */
    @java.lang.Override
    public java.lang.String getPrivilegeImage() {
      java.lang.Object ref = privilegeImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privilegeImage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Privilege image id for display above the barcode on a Google Pay pass.
     * </pre>
     *
     * <code>string privilegeImage = 28;</code>
     * @return The bytes for privilegeImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivilegeImageBytes() {
      java.lang.Object ref = privilegeImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privilegeImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FOOTERIMAGE_FIELD_NUMBER = 29;
    @SuppressWarnings("serial")
    private volatile java.lang.Object footerImage_ = "";
    /**
     * <pre>
     * Footer image id for display above the barcode on iOS devices.
     * </pre>
     *
     * <code>string footerImage = 29;</code>
     * @return The footerImage.
     */
    @java.lang.Override
    public java.lang.String getFooterImage() {
      java.lang.Object ref = footerImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        footerImage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Footer image id for display above the barcode on iOS devices.
     * </pre>
     *
     * <code>string footerImage = 29;</code>
     * @return The bytes for footerImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFooterImageBytes() {
      java.lang.Object ref = footerImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        footerImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCATIONMESSAGES_FIELD_NUMBER = 30;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Proximity.GPSLocation> locationMessages_;
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Proximity.GPSLocation> getLocationMessagesList() {
      return locationMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
        getLocationMessagesOrBuilderList() {
      return locationMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public int getLocationMessagesCount() {
      return locationMessages_.size();
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index) {
      return locationMessages_.get(index);
    }
    /**
     * <pre>
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
        int index) {
      return locationMessages_.get(index);
    }

    public static final int BEACONMESSAGES_FIELD_NUMBER = 31;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Proximity.Beacon> beaconMessages_;
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Proximity.Beacon> getBeaconMessagesList() {
      return beaconMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
        getBeaconMessagesOrBuilderList() {
      return beaconMessages_;
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public int getBeaconMessagesCount() {
      return beaconMessages_.size();
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index) {
      return beaconMessages_.get(index);
    }
    /**
     * <pre>
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     * </pre>
     *
     * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
        int index) {
      return beaconMessages_.get(index);
    }

    public static final int LINKS_FIELD_NUMBER = 32;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.Links.Link> links_;
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.Links.Link> getLinksList() {
      return links_;
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
        getLinksOrBuilderList() {
      return links_;
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Links.Link getLinks(int index) {
      return links_.get(index);
    }
    /**
     * <pre>
     * A list of links to be appended to the end of each boarding pass.
     * </pre>
     *
     * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Links.LinkOrBuilder getLinksOrBuilder(
        int index) {
      return links_.get(index);
    }

    public static final int BARCODEADDITIONALDATA_FIELD_NUMBER = 33;
    @SuppressWarnings("serial")
    private volatile java.lang.Object barcodeAdditionalData_ = "";
    /**
     * <pre>
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     * </pre>
     *
     * <code>string barcodeAdditionalData = 33;</code>
     * @return The barcodeAdditionalData.
     */
    @java.lang.Override
    public java.lang.String getBarcodeAdditionalData() {
      java.lang.Object ref = barcodeAdditionalData_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        barcodeAdditionalData_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     * </pre>
     *
     * <code>string barcodeAdditionalData = 33;</code>
     * @return The bytes for barcodeAdditionalData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBarcodeAdditionalDataBytes() {
      java.lang.Object ref = barcodeAdditionalData_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        barcodeAdditionalData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFANTPASSID_FIELD_NUMBER = 34;
    @SuppressWarnings("serial")
    private volatile java.lang.Object infantPassId_ = "";
    /**
     * <pre>
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     * </pre>
     *
     * <code>string infantPassId = 34;</code>
     * @return The infantPassId.
     */
    @java.lang.Override
    public java.lang.String getInfantPassId() {
      java.lang.Object ref = infantPassId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        infantPassId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     * </pre>
     *
     * <code>string infantPassId = 34;</code>
     * @return The bytes for infantPassId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInfantPassIdBytes() {
      java.lang.Object ref = infantPassId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        infantPassId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONALDATAITEMS_FIELD_NUMBER = 35;
    private com.passkit.grpc.CommonObjects.DataItems additionalDataItems_;
    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     * @return Whether the additionalDataItems field is set.
     */
    @java.lang.Override
    public boolean hasAdditionalDataItems() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     * @return The additionalDataItems.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.DataItems getAdditionalDataItems() {
      return additionalDataItems_ == null ? com.passkit.grpc.CommonObjects.DataItems.getDefaultInstance() : additionalDataItems_;
    }
    /**
     * <pre>
     * Optional key value pairs to be added in to the flight record
     * </pre>
     *
     * <code>.io.DataItems additionalDataItems = 35;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.DataItemsOrBuilder getAdditionalDataItemsOrBuilder() {
      return additionalDataItems_ == null ? com.passkit.grpc.CommonObjects.DataItems.getDefaultInstance() : additionalDataItems_;
    }

    public static final int METADATA_FIELD_NUMBER = 36;
    private com.passkit.grpc.MetricsOuterClass.Metadata metadata_;
    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.Metadata getMetadata() {
      return metadata_ == null ? com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Pass Metadata
     * </pre>
     *
     * <code>.io.Metadata metadata = 36;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : metadata_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingCarrierPNR_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, operatingCarrierPNR_);
      }
      for (int i = 0; i < relatedPNRs_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, relatedPNRs_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticketNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, ticketNumber_);
      }
      if (ticketLeg_ != 0) {
        output.writeInt32(5, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, boardingPoint_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(deplaningPoint_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, deplaningPoint_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 9, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(11, getDepartureDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(12, getPassenger());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(class__)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 13, class__);
      }
      if (compartmentCode_ != com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.NONE.getNumber()) {
        output.writeEnum(14, compartmentCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(seatNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 15, seatNumber_);
      }
      if (sequenceNumber_ != 0) {
        output.writeInt32(16, sequenceNumber_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingGroup_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 17, boardingGroup_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPosition_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 18, boardingPosition_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(freeBaggageAllowance_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 19, freeBaggageAllowance_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carryOnAllowance_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 20, carryOnAllowance_);
      }
      for (int i = 0; i < ssrCodes_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 21, ssrCodes_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(osi_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 22, osi_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(remarks_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 23, remarks_);
      }
      if (passengerStatus_ != com.passkit.grpc.Flights.Barcode.PassengerStatus.ISSUED_NOT_CHECKED_IN.getNumber()) {
        output.writeEnum(24, passengerStatus_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(25, getConditionalItems());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodePayload_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 26, barcodePayload_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(securityImage_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 27, securityImage_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(privilegeImage_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 28, privilegeImage_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(footerImage_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 29, footerImage_);
      }
      for (int i = 0; i < locationMessages_.size(); i++) {
        output.writeMessage(30, locationMessages_.get(i));
      }
      for (int i = 0; i < beaconMessages_.size(); i++) {
        output.writeMessage(31, beaconMessages_.get(i));
      }
      for (int i = 0; i < links_.size(); i++) {
        output.writeMessage(32, links_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodeAdditionalData_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 33, barcodeAdditionalData_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(infantPassId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 34, infantPassId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(35, getAdditionalDataItems());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(36, getMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(operatingCarrierPNR_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, operatingCarrierPNR_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < relatedPNRs_.size(); i++) {
          dataSize += computeStringSizeNoTag(relatedPNRs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRelatedPNRsList().size();
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticketNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, ticketNumber_);
      }
      if (ticketLeg_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, boardingPoint_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(deplaningPoint_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, deplaningPoint_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(9, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getDepartureDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getPassenger());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(class__)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(13, class__);
      }
      if (compartmentCode_ != com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, compartmentCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(seatNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(15, seatNumber_);
      }
      if (sequenceNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, sequenceNumber_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingGroup_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(17, boardingGroup_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPosition_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(18, boardingPosition_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(freeBaggageAllowance_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(19, freeBaggageAllowance_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carryOnAllowance_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(20, carryOnAllowance_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ssrCodes_.size(); i++) {
          dataSize += computeStringSizeNoTag(ssrCodes_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getSsrCodesList().size();
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(osi_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(22, osi_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(remarks_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(23, remarks_);
      }
      if (passengerStatus_ != com.passkit.grpc.Flights.Barcode.PassengerStatus.ISSUED_NOT_CHECKED_IN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(24, passengerStatus_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getConditionalItems());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodePayload_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(26, barcodePayload_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(securityImage_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(27, securityImage_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(privilegeImage_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(28, privilegeImage_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(footerImage_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(29, footerImage_);
      }
      for (int i = 0; i < locationMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, locationMessages_.get(i));
      }
      for (int i = 0; i < beaconMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, beaconMessages_.get(i));
      }
      for (int i = 0; i < links_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, links_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(barcodeAdditionalData_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(33, barcodeAdditionalData_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(infantPassId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(34, infantPassId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getAdditionalDataItems());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getOperatingCarrierPNR()
          .equals(other.getOperatingCarrierPNR())) return false;
      if (!getRelatedPNRsList()
          .equals(other.getRelatedPNRsList())) return false;
      if (!getTicketNumber()
          .equals(other.getTicketNumber())) return false;
      if (getTicketLeg()
          != other.getTicketLeg()) return false;
      if (!getBoardingPoint()
          .equals(other.getBoardingPoint())) return false;
      if (!getDeplaningPoint()
          .equals(other.getDeplaningPoint())) return false;
      if (!getCarrierCode()
          .equals(other.getCarrierCode())) return false;
      if (!getFlightNumber()
          .equals(other.getFlightNumber())) return false;
      if (hasDepartureDate() != other.hasDepartureDate()) return false;
      if (hasDepartureDate()) {
        if (!getDepartureDate()
            .equals(other.getDepartureDate())) return false;
      }
      if (hasPassenger() != other.hasPassenger()) return false;
      if (hasPassenger()) {
        if (!getPassenger()
            .equals(other.getPassenger())) return false;
      }
      if (!getClass_()
          .equals(other.getClass_())) return false;
      if (compartmentCode_ != other.compartmentCode_) return false;
      if (!getSeatNumber()
          .equals(other.getSeatNumber())) return false;
      if (getSequenceNumber()
          != other.getSequenceNumber()) return false;
      if (!getBoardingGroup()
          .equals(other.getBoardingGroup())) return false;
      if (!getBoardingPosition()
          .equals(other.getBoardingPosition())) return false;
      if (!getFreeBaggageAllowance()
          .equals(other.getFreeBaggageAllowance())) return false;
      if (!getCarryOnAllowance()
          .equals(other.getCarryOnAllowance())) return false;
      if (!getSsrCodesList()
          .equals(other.getSsrCodesList())) return false;
      if (!getOsi()
          .equals(other.getOsi())) return false;
      if (!getRemarks()
          .equals(other.getRemarks())) return false;
      if (passengerStatus_ != other.passengerStatus_) return false;
      if (hasConditionalItems() != other.hasConditionalItems()) return false;
      if (hasConditionalItems()) {
        if (!getConditionalItems()
            .equals(other.getConditionalItems())) return false;
      }
      if (!getBarcodePayload()
          .equals(other.getBarcodePayload())) return false;
      if (!getSecurityImage()
          .equals(other.getSecurityImage())) return false;
      if (!getPrivilegeImage()
          .equals(other.getPrivilegeImage())) return false;
      if (!getFooterImage()
          .equals(other.getFooterImage())) return false;
      if (!getLocationMessagesList()
          .equals(other.getLocationMessagesList())) return false;
      if (!getBeaconMessagesList()
          .equals(other.getBeaconMessagesList())) return false;
      if (!getLinksList()
          .equals(other.getLinksList())) return false;
      if (!getBarcodeAdditionalData()
          .equals(other.getBarcodeAdditionalData())) return false;
      if (!getInfantPassId()
          .equals(other.getInfantPassId())) return false;
      if (hasAdditionalDataItems() != other.hasAdditionalDataItems()) return false;
      if (hasAdditionalDataItems()) {
        if (!getAdditionalDataItems()
            .equals(other.getAdditionalDataItems())) return false;
      }
      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + OPERATINGCARRIERPNR_FIELD_NUMBER;
      hash = (53 * hash) + getOperatingCarrierPNR().hashCode();
      if (getRelatedPNRsCount() > 0) {
        hash = (37 * hash) + RELATEDPNRS_FIELD_NUMBER;
        hash = (53 * hash) + getRelatedPNRsList().hashCode();
      }
      hash = (37 * hash) + TICKETNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getTicketNumber().hashCode();
      hash = (37 * hash) + TICKETLEG_FIELD_NUMBER;
      hash = (53 * hash) + getTicketLeg();
      hash = (37 * hash) + BOARDINGPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingPoint().hashCode();
      hash = (37 * hash) + DEPLANINGPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getDeplaningPoint().hashCode();
      hash = (37 * hash) + CARRIERCODE_FIELD_NUMBER;
      hash = (53 * hash) + getCarrierCode().hashCode();
      hash = (37 * hash) + FLIGHTNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getFlightNumber().hashCode();
      if (hasDepartureDate()) {
        hash = (37 * hash) + DEPARTUREDATE_FIELD_NUMBER;
        hash = (53 * hash) + getDepartureDate().hashCode();
      }
      if (hasPassenger()) {
        hash = (37 * hash) + PASSENGER_FIELD_NUMBER;
        hash = (53 * hash) + getPassenger().hashCode();
      }
      hash = (37 * hash) + CLASS_FIELD_NUMBER;
      hash = (53 * hash) + getClass_().hashCode();
      hash = (37 * hash) + COMPARTMENTCODE_FIELD_NUMBER;
      hash = (53 * hash) + compartmentCode_;
      hash = (37 * hash) + SEATNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSeatNumber().hashCode();
      hash = (37 * hash) + SEQUENCENUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNumber();
      hash = (37 * hash) + BOARDINGGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingGroup().hashCode();
      hash = (37 * hash) + BOARDINGPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingPosition().hashCode();
      hash = (37 * hash) + FREEBAGGAGEALLOWANCE_FIELD_NUMBER;
      hash = (53 * hash) + getFreeBaggageAllowance().hashCode();
      hash = (37 * hash) + CARRYONALLOWANCE_FIELD_NUMBER;
      hash = (53 * hash) + getCarryOnAllowance().hashCode();
      if (getSsrCodesCount() > 0) {
        hash = (37 * hash) + SSRCODES_FIELD_NUMBER;
        hash = (53 * hash) + getSsrCodesList().hashCode();
      }
      hash = (37 * hash) + OSI_FIELD_NUMBER;
      hash = (53 * hash) + getOsi().hashCode();
      hash = (37 * hash) + REMARKS_FIELD_NUMBER;
      hash = (53 * hash) + getRemarks().hashCode();
      hash = (37 * hash) + PASSENGERSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + passengerStatus_;
      if (hasConditionalItems()) {
        hash = (37 * hash) + CONDITIONALITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getConditionalItems().hashCode();
      }
      hash = (37 * hash) + BARCODEPAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getBarcodePayload().hashCode();
      hash = (37 * hash) + SECURITYIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityImage().hashCode();
      hash = (37 * hash) + PRIVILEGEIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getPrivilegeImage().hashCode();
      hash = (37 * hash) + FOOTERIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getFooterImage().hashCode();
      if (getLocationMessagesCount() > 0) {
        hash = (37 * hash) + LOCATIONMESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getLocationMessagesList().hashCode();
      }
      if (getBeaconMessagesCount() > 0) {
        hash = (37 * hash) + BEACONMESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getBeaconMessagesList().hashCode();
      }
      if (getLinksCount() > 0) {
        hash = (37 * hash) + LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getLinksList().hashCode();
      }
      hash = (37 * hash) + BARCODEADDITIONALDATA_FIELD_NUMBER;
      hash = (53 * hash) + getBarcodeAdditionalData().hashCode();
      hash = (37 * hash) + INFANTPASSID_FIELD_NUMBER;
      hash = (53 * hash) + getInfantPassId().hashCode();
      if (hasAdditionalDataItems()) {
        hash = (37 * hash) + ADDITIONALDATAITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalDataItems().hashCode();
      }
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Boarding Pass record is unique to an individual passenger journey form a boarding point to a deplaning point. A Carrier and a Flight Designation record must exist. If a Flight record does not already exist, then it will be auto-generated based on the Flight Designation record and other publicly available data.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassRecord)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDepartureDateFieldBuilder();
          getPassengerFieldBuilder();
          getConditionalItemsFieldBuilder();
          getLocationMessagesFieldBuilder();
          getBeaconMessagesFieldBuilder();
          getLinksFieldBuilder();
          getAdditionalDataItemsFieldBuilder();
          getMetadataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        id_ = "";
        operatingCarrierPNR_ = "";
        relatedPNRs_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        ticketNumber_ = "";
        ticketLeg_ = 0;
        boardingPoint_ = "";
        deplaningPoint_ = "";
        carrierCode_ = "";
        flightNumber_ = "";
        departureDate_ = null;
        if (departureDateBuilder_ != null) {
          departureDateBuilder_.dispose();
          departureDateBuilder_ = null;
        }
        passenger_ = null;
        if (passengerBuilder_ != null) {
          passengerBuilder_.dispose();
          passengerBuilder_ = null;
        }
        class__ = "";
        compartmentCode_ = 0;
        seatNumber_ = "";
        sequenceNumber_ = 0;
        boardingGroup_ = "";
        boardingPosition_ = "";
        freeBaggageAllowance_ = "";
        carryOnAllowance_ = "";
        ssrCodes_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        osi_ = "";
        remarks_ = "";
        passengerStatus_ = 0;
        conditionalItems_ = null;
        if (conditionalItemsBuilder_ != null) {
          conditionalItemsBuilder_.dispose();
          conditionalItemsBuilder_ = null;
        }
        barcodePayload_ = "";
        securityImage_ = "";
        privilegeImage_ = "";
        footerImage_ = "";
        if (locationMessagesBuilder_ == null) {
          locationMessages_ = java.util.Collections.emptyList();
        } else {
          locationMessages_ = null;
          locationMessagesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        if (beaconMessagesBuilder_ == null) {
          beaconMessages_ = java.util.Collections.emptyList();
        } else {
          beaconMessages_ = null;
          beaconMessagesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
        } else {
          links_ = null;
          linksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        barcodeAdditionalData_ = "";
        infantPassId_ = "";
        additionalDataItems_ = null;
        if (additionalDataItemsBuilder_ != null) {
          additionalDataItemsBuilder_.dispose();
          additionalDataItemsBuilder_ = null;
        }
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecord_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord result) {
        if (locationMessagesBuilder_ == null) {
          if (((bitField0_ & 0x10000000) != 0)) {
            locationMessages_ = java.util.Collections.unmodifiableList(locationMessages_);
            bitField0_ = (bitField0_ & ~0x10000000);
          }
          result.locationMessages_ = locationMessages_;
        } else {
          result.locationMessages_ = locationMessagesBuilder_.build();
        }
        if (beaconMessagesBuilder_ == null) {
          if (((bitField0_ & 0x20000000) != 0)) {
            beaconMessages_ = java.util.Collections.unmodifiableList(beaconMessages_);
            bitField0_ = (bitField0_ & ~0x20000000);
          }
          result.beaconMessages_ = beaconMessages_;
        } else {
          result.beaconMessages_ = beaconMessagesBuilder_.build();
        }
        if (linksBuilder_ == null) {
          if (((bitField0_ & 0x40000000) != 0)) {
            links_ = java.util.Collections.unmodifiableList(links_);
            bitField0_ = (bitField0_ & ~0x40000000);
          }
          result.links_ = links_;
        } else {
          result.links_ = linksBuilder_.build();
        }
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.operatingCarrierPNR_ = operatingCarrierPNR_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          relatedPNRs_.makeImmutable();
          result.relatedPNRs_ = relatedPNRs_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ticketNumber_ = ticketNumber_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ticketLeg_ = ticketLeg_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.boardingPoint_ = boardingPoint_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.deplaningPoint_ = deplaningPoint_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.carrierCode_ = carrierCode_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.flightNumber_ = flightNumber_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.departureDate_ = departureDateBuilder_ == null
              ? departureDate_
              : departureDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.passenger_ = passengerBuilder_ == null
              ? passenger_
              : passengerBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.class__ = class__;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.compartmentCode_ = compartmentCode_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.seatNumber_ = seatNumber_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.sequenceNumber_ = sequenceNumber_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.boardingGroup_ = boardingGroup_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.boardingPosition_ = boardingPosition_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.freeBaggageAllowance_ = freeBaggageAllowance_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.carryOnAllowance_ = carryOnAllowance_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          ssrCodes_.makeImmutable();
          result.ssrCodes_ = ssrCodes_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.osi_ = osi_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.remarks_ = remarks_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.passengerStatus_ = passengerStatus_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.conditionalItems_ = conditionalItemsBuilder_ == null
              ? conditionalItems_
              : conditionalItemsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.barcodePayload_ = barcodePayload_;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.securityImage_ = securityImage_;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.privilegeImage_ = privilegeImage_;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.footerImage_ = footerImage_;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.barcodeAdditionalData_ = barcodeAdditionalData_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord result) {
        int from_bitField1_ = bitField1_;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.infantPassId_ = infantPassId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.additionalDataItems_ = additionalDataItemsBuilder_ == null
              ? additionalDataItems_
              : additionalDataItemsBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getOperatingCarrierPNR().isEmpty()) {
          operatingCarrierPNR_ = other.operatingCarrierPNR_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.relatedPNRs_.isEmpty()) {
          if (relatedPNRs_.isEmpty()) {
            relatedPNRs_ = other.relatedPNRs_;
            bitField0_ |= 0x00000004;
          } else {
            ensureRelatedPNRsIsMutable();
            relatedPNRs_.addAll(other.relatedPNRs_);
          }
          onChanged();
        }
        if (!other.getTicketNumber().isEmpty()) {
          ticketNumber_ = other.ticketNumber_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.getTicketLeg() != 0) {
          setTicketLeg(other.getTicketLeg());
        }
        if (!other.getBoardingPoint().isEmpty()) {
          boardingPoint_ = other.boardingPoint_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.getDeplaningPoint().isEmpty()) {
          deplaningPoint_ = other.deplaningPoint_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getCarrierCode().isEmpty()) {
          carrierCode_ = other.carrierCode_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (!other.getFlightNumber().isEmpty()) {
          flightNumber_ = other.flightNumber_;
          bitField0_ |= 0x00000100;
          onChanged();
        }
        if (other.hasDepartureDate()) {
          mergeDepartureDate(other.getDepartureDate());
        }
        if (other.hasPassenger()) {
          mergePassenger(other.getPassenger());
        }
        if (!other.getClass_().isEmpty()) {
          class__ = other.class__;
          bitField0_ |= 0x00000800;
          onChanged();
        }
        if (other.compartmentCode_ != 0) {
          setCompartmentCodeValue(other.getCompartmentCodeValue());
        }
        if (!other.getSeatNumber().isEmpty()) {
          seatNumber_ = other.seatNumber_;
          bitField0_ |= 0x00002000;
          onChanged();
        }
        if (other.getSequenceNumber() != 0) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (!other.getBoardingGroup().isEmpty()) {
          boardingGroup_ = other.boardingGroup_;
          bitField0_ |= 0x00008000;
          onChanged();
        }
        if (!other.getBoardingPosition().isEmpty()) {
          boardingPosition_ = other.boardingPosition_;
          bitField0_ |= 0x00010000;
          onChanged();
        }
        if (!other.getFreeBaggageAllowance().isEmpty()) {
          freeBaggageAllowance_ = other.freeBaggageAllowance_;
          bitField0_ |= 0x00020000;
          onChanged();
        }
        if (!other.getCarryOnAllowance().isEmpty()) {
          carryOnAllowance_ = other.carryOnAllowance_;
          bitField0_ |= 0x00040000;
          onChanged();
        }
        if (!other.ssrCodes_.isEmpty()) {
          if (ssrCodes_.isEmpty()) {
            ssrCodes_ = other.ssrCodes_;
            bitField0_ |= 0x00080000;
          } else {
            ensureSsrCodesIsMutable();
            ssrCodes_.addAll(other.ssrCodes_);
          }
          onChanged();
        }
        if (!other.getOsi().isEmpty()) {
          osi_ = other.osi_;
          bitField0_ |= 0x00100000;
          onChanged();
        }
        if (!other.getRemarks().isEmpty()) {
          remarks_ = other.remarks_;
          bitField0_ |= 0x00200000;
          onChanged();
        }
        if (other.passengerStatus_ != 0) {
          setPassengerStatusValue(other.getPassengerStatusValue());
        }
        if (other.hasConditionalItems()) {
          mergeConditionalItems(other.getConditionalItems());
        }
        if (!other.getBarcodePayload().isEmpty()) {
          barcodePayload_ = other.barcodePayload_;
          bitField0_ |= 0x01000000;
          onChanged();
        }
        if (!other.getSecurityImage().isEmpty()) {
          securityImage_ = other.securityImage_;
          bitField0_ |= 0x02000000;
          onChanged();
        }
        if (!other.getPrivilegeImage().isEmpty()) {
          privilegeImage_ = other.privilegeImage_;
          bitField0_ |= 0x04000000;
          onChanged();
        }
        if (!other.getFooterImage().isEmpty()) {
          footerImage_ = other.footerImage_;
          bitField0_ |= 0x08000000;
          onChanged();
        }
        if (locationMessagesBuilder_ == null) {
          if (!other.locationMessages_.isEmpty()) {
            if (locationMessages_.isEmpty()) {
              locationMessages_ = other.locationMessages_;
              bitField0_ = (bitField0_ & ~0x10000000);
            } else {
              ensureLocationMessagesIsMutable();
              locationMessages_.addAll(other.locationMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.locationMessages_.isEmpty()) {
            if (locationMessagesBuilder_.isEmpty()) {
              locationMessagesBuilder_.dispose();
              locationMessagesBuilder_ = null;
              locationMessages_ = other.locationMessages_;
              bitField0_ = (bitField0_ & ~0x10000000);
              locationMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLocationMessagesFieldBuilder() : null;
            } else {
              locationMessagesBuilder_.addAllMessages(other.locationMessages_);
            }
          }
        }
        if (beaconMessagesBuilder_ == null) {
          if (!other.beaconMessages_.isEmpty()) {
            if (beaconMessages_.isEmpty()) {
              beaconMessages_ = other.beaconMessages_;
              bitField0_ = (bitField0_ & ~0x20000000);
            } else {
              ensureBeaconMessagesIsMutable();
              beaconMessages_.addAll(other.beaconMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.beaconMessages_.isEmpty()) {
            if (beaconMessagesBuilder_.isEmpty()) {
              beaconMessagesBuilder_.dispose();
              beaconMessagesBuilder_ = null;
              beaconMessages_ = other.beaconMessages_;
              bitField0_ = (bitField0_ & ~0x20000000);
              beaconMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBeaconMessagesFieldBuilder() : null;
            } else {
              beaconMessagesBuilder_.addAllMessages(other.beaconMessages_);
            }
          }
        }
        if (linksBuilder_ == null) {
          if (!other.links_.isEmpty()) {
            if (links_.isEmpty()) {
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x40000000);
            } else {
              ensureLinksIsMutable();
              links_.addAll(other.links_);
            }
            onChanged();
          }
        } else {
          if (!other.links_.isEmpty()) {
            if (linksBuilder_.isEmpty()) {
              linksBuilder_.dispose();
              linksBuilder_ = null;
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x40000000);
              linksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLinksFieldBuilder() : null;
            } else {
              linksBuilder_.addAllMessages(other.links_);
            }
          }
        }
        if (!other.getBarcodeAdditionalData().isEmpty()) {
          barcodeAdditionalData_ = other.barcodeAdditionalData_;
          bitField0_ |= 0x80000000;
          onChanged();
        }
        if (!other.getInfantPassId().isEmpty()) {
          infantPassId_ = other.infantPassId_;
          bitField1_ |= 0x00000001;
          onChanged();
        }
        if (other.hasAdditionalDataItems()) {
          mergeAdditionalDataItems(other.getAdditionalDataItems());
        }
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                operatingCarrierPNR_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureRelatedPNRsIsMutable();
                relatedPNRs_.add(s);
                break;
              } // case 26
              case 34: {
                ticketNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                ticketLeg_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                boardingPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                deplaningPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                carrierCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                flightNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 90: {
                input.readMessage(
                    getDepartureDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getPassengerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 98
              case 106: {
                class__ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000800;
                break;
              } // case 106
              case 112: {
                compartmentCode_ = input.readEnum();
                bitField0_ |= 0x00001000;
                break;
              } // case 112
              case 122: {
                seatNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00002000;
                break;
              } // case 122
              case 128: {
                sequenceNumber_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 128
              case 138: {
                boardingGroup_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00008000;
                break;
              } // case 138
              case 146: {
                boardingPosition_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00010000;
                break;
              } // case 146
              case 154: {
                freeBaggageAllowance_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00020000;
                break;
              } // case 154
              case 162: {
                carryOnAllowance_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00040000;
                break;
              } // case 162
              case 170: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSsrCodesIsMutable();
                ssrCodes_.add(s);
                break;
              } // case 170
              case 178: {
                osi_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00100000;
                break;
              } // case 178
              case 186: {
                remarks_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00200000;
                break;
              } // case 186
              case 192: {
                passengerStatus_ = input.readEnum();
                bitField0_ |= 0x00400000;
                break;
              } // case 192
              case 202: {
                input.readMessage(
                    getConditionalItemsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00800000;
                break;
              } // case 202
              case 210: {
                barcodePayload_ = input.readStringRequireUtf8();
                bitField0_ |= 0x01000000;
                break;
              } // case 210
              case 218: {
                securityImage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x02000000;
                break;
              } // case 218
              case 226: {
                privilegeImage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x04000000;
                break;
              } // case 226
              case 234: {
                footerImage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x08000000;
                break;
              } // case 234
              case 242: {
                com.passkit.grpc.Proximity.GPSLocation m =
                    input.readMessage(
                        com.passkit.grpc.Proximity.GPSLocation.parser(),
                        extensionRegistry);
                if (locationMessagesBuilder_ == null) {
                  ensureLocationMessagesIsMutable();
                  locationMessages_.add(m);
                } else {
                  locationMessagesBuilder_.addMessage(m);
                }
                break;
              } // case 242
              case 250: {
                com.passkit.grpc.Proximity.Beacon m =
                    input.readMessage(
                        com.passkit.grpc.Proximity.Beacon.parser(),
                        extensionRegistry);
                if (beaconMessagesBuilder_ == null) {
                  ensureBeaconMessagesIsMutable();
                  beaconMessages_.add(m);
                } else {
                  beaconMessagesBuilder_.addMessage(m);
                }
                break;
              } // case 250
              case 258: {
                com.passkit.grpc.Links.Link m =
                    input.readMessage(
                        com.passkit.grpc.Links.Link.parser(),
                        extensionRegistry);
                if (linksBuilder_ == null) {
                  ensureLinksIsMutable();
                  links_.add(m);
                } else {
                  linksBuilder_.addMessage(m);
                }
                break;
              } // case 258
              case 266: {
                barcodeAdditionalData_ = input.readStringRequireUtf8();
                bitField0_ |= 0x80000000;
                break;
              } // case 266
              case 274: {
                infantPassId_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00000001;
                break;
              } // case 274
              case 282: {
                input.readMessage(
                    getAdditionalDataItemsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000002;
                break;
              } // case 282
              case 290: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000004;
                break;
              } // case 290
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object operatingCarrierPNR_ = "";
      /**
       * <pre>
       * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
       * </pre>
       *
       * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The operatingCarrierPNR.
       */
      public java.lang.String getOperatingCarrierPNR() {
        java.lang.Object ref = operatingCarrierPNR_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operatingCarrierPNR_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
       * </pre>
       *
       * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for operatingCarrierPNR.
       */
      public com.google.protobuf.ByteString
          getOperatingCarrierPNRBytes() {
        java.lang.Object ref = operatingCarrierPNR_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatingCarrierPNR_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
       * </pre>
       *
       * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The operatingCarrierPNR to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingCarrierPNR(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        operatingCarrierPNR_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
       * </pre>
       *
       * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatingCarrierPNR() {
        operatingCarrierPNR_ = getDefaultInstance().getOperatingCarrierPNR();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
       * </pre>
       *
       * <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for operatingCarrierPNR to set.
       * @return This builder for chaining.
       */
      public Builder setOperatingCarrierPNRBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        operatingCarrierPNR_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList relatedPNRs_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureRelatedPNRsIsMutable() {
        if (!relatedPNRs_.isModifiable()) {
          relatedPNRs_ = new com.google.protobuf.LazyStringArrayList(relatedPNRs_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return A list containing the relatedPNRs.
       */
      public com.google.protobuf.ProtocolStringList
          getRelatedPNRsList() {
        relatedPNRs_.makeImmutable();
        return relatedPNRs_;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The count of relatedPNRs.
       */
      public int getRelatedPNRsCount() {
        return relatedPNRs_.size();
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param index The index of the element to return.
       * @return The relatedPNRs at the given index.
       */
      public java.lang.String getRelatedPNRs(int index) {
        return relatedPNRs_.get(index);
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param index The index of the value to return.
       * @return The bytes of the relatedPNRs at the given index.
       */
      public com.google.protobuf.ByteString
          getRelatedPNRsBytes(int index) {
        return relatedPNRs_.getByteString(index);
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param index The index to set the value at.
       * @param value The relatedPNRs to set.
       * @return This builder for chaining.
       */
      public Builder setRelatedPNRs(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRelatedPNRsIsMutable();
        relatedPNRs_.set(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The relatedPNRs to add.
       * @return This builder for chaining.
       */
      public Builder addRelatedPNRs(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRelatedPNRsIsMutable();
        relatedPNRs_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param values The relatedPNRs to add.
       * @return This builder for chaining.
       */
      public Builder addAllRelatedPNRs(
          java.lang.Iterable<java.lang.String> values) {
        ensureRelatedPNRsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relatedPNRs_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearRelatedPNRs() {
        relatedPNRs_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
       * </pre>
       *
       * <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes of the relatedPNRs to add.
       * @return This builder for chaining.
       */
      public Builder addRelatedPNRsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureRelatedPNRsIsMutable();
        relatedPNRs_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object ticketNumber_ = "";
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The ticketNumber.
       */
      public java.lang.String getTicketNumber() {
        java.lang.Object ref = ticketNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ticketNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for ticketNumber.
       */
      public com.google.protobuf.ByteString
          getTicketNumberBytes() {
        java.lang.Object ref = ticketNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ticketNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The ticketNumber to set.
       * @return This builder for chaining.
       */
      public Builder setTicketNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ticketNumber_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketNumber() {
        ticketNumber_ = getDefaultInstance().getTicketNumber();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for ticketNumber to set.
       * @return This builder for chaining.
       */
      public Builder setTicketNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ticketNumber_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private int ticketLeg_ ;
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The ticketLeg.
       */
      @java.lang.Override
      public int getTicketLeg() {
        return ticketLeg_;
      }
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The ticketLeg to set.
       * @return This builder for chaining.
       */
      public Builder setTicketLeg(int value) {

        ticketLeg_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketLeg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketLeg_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object boardingPoint_ = "";
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The boardingPoint.
       */
      public java.lang.String getBoardingPoint() {
        java.lang.Object ref = boardingPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for boardingPoint.
       */
      public com.google.protobuf.ByteString
          getBoardingPointBytes() {
        java.lang.Object ref = boardingPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingPoint_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPoint() {
        boardingPoint_ = getDefaultInstance().getBoardingPoint();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingPoint_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private java.lang.Object deplaningPoint_ = "";
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
       * </pre>
       *
       * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The deplaningPoint.
       */
      public java.lang.String getDeplaningPoint() {
        java.lang.Object ref = deplaningPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deplaningPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
       * </pre>
       *
       * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for deplaningPoint.
       */
      public com.google.protobuf.ByteString
          getDeplaningPointBytes() {
        java.lang.Object ref = deplaningPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deplaningPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
       * </pre>
       *
       * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The deplaningPoint to set.
       * @return This builder for chaining.
       */
      public Builder setDeplaningPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deplaningPoint_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
       * </pre>
       *
       * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDeplaningPoint() {
        deplaningPoint_ = getDefaultInstance().getDeplaningPoint();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
       * </pre>
       *
       * <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for deplaningPoint to set.
       * @return This builder for chaining.
       */
      public Builder setDeplaningPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deplaningPoint_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object carrierCode_ = "";
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The carrierCode.
       */
      public java.lang.String getCarrierCode() {
        java.lang.Object ref = carrierCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          carrierCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for carrierCode.
       */
      public com.google.protobuf.ByteString
          getCarrierCodeBytes() {
        java.lang.Object ref = carrierCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          carrierCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        carrierCode_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCarrierCode() {
        carrierCode_ = getDefaultInstance().getCarrierCode();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        carrierCode_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private java.lang.Object flightNumber_ = "";
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The flightNumber.
       */
      public java.lang.String getFlightNumber() {
        java.lang.Object ref = flightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for flightNumber.
       */
      public com.google.protobuf.ByteString
          getFlightNumberBytes() {
        java.lang.Object ref = flightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        flightNumber_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightNumber() {
        flightNumber_ = getDefaultInstance().getFlightNumber();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        flightNumber_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private com.passkit.grpc.CommonObjects.Date departureDate_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> departureDateBuilder_;
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       * @return Whether the departureDate field is set.
       */
      public boolean hasDepartureDate() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       * @return The departureDate.
       */
      public com.passkit.grpc.CommonObjects.Date getDepartureDate() {
        if (departureDateBuilder_ == null) {
          return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
        } else {
          return departureDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public Builder setDepartureDate(com.passkit.grpc.CommonObjects.Date value) {
        if (departureDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          departureDate_ = value;
        } else {
          departureDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public Builder setDepartureDate(
          com.passkit.grpc.CommonObjects.Date.Builder builderForValue) {
        if (departureDateBuilder_ == null) {
          departureDate_ = builderForValue.build();
        } else {
          departureDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public Builder mergeDepartureDate(com.passkit.grpc.CommonObjects.Date value) {
        if (departureDateBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            departureDate_ != null &&
            departureDate_ != com.passkit.grpc.CommonObjects.Date.getDefaultInstance()) {
            getDepartureDateBuilder().mergeFrom(value);
          } else {
            departureDate_ = value;
          }
        } else {
          departureDateBuilder_.mergeFrom(value);
        }
        if (departureDate_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public Builder clearDepartureDate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        departureDate_ = null;
        if (departureDateBuilder_ != null) {
          departureDateBuilder_.dispose();
          departureDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public com.passkit.grpc.CommonObjects.Date.Builder getDepartureDateBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getDepartureDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      public com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder() {
        if (departureDateBuilder_ != null) {
          return departureDateBuilder_.getMessageOrBuilder();
        } else {
          return departureDate_ == null ?
              com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
        }
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> 
          getDepartureDateFieldBuilder() {
        if (departureDateBuilder_ == null) {
          departureDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder>(
                  getDepartureDate(),
                  getParentForChildren(),
                  isClean());
          departureDate_ = null;
        }
        return departureDateBuilder_;
      }

      private com.passkit.grpc.Flights.PassengerOuterClass.Passenger passenger_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.PassengerOuterClass.Passenger, com.passkit.grpc.Flights.PassengerOuterClass.Passenger.Builder, com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder> passengerBuilder_;
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       * @return Whether the passenger field is set.
       */
      public boolean hasPassenger() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       * @return The passenger.
       */
      public com.passkit.grpc.Flights.PassengerOuterClass.Passenger getPassenger() {
        if (passengerBuilder_ == null) {
          return passenger_ == null ? com.passkit.grpc.Flights.PassengerOuterClass.Passenger.getDefaultInstance() : passenger_;
        } else {
          return passengerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public Builder setPassenger(com.passkit.grpc.Flights.PassengerOuterClass.Passenger value) {
        if (passengerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passenger_ = value;
        } else {
          passengerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public Builder setPassenger(
          com.passkit.grpc.Flights.PassengerOuterClass.Passenger.Builder builderForValue) {
        if (passengerBuilder_ == null) {
          passenger_ = builderForValue.build();
        } else {
          passengerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public Builder mergePassenger(com.passkit.grpc.Flights.PassengerOuterClass.Passenger value) {
        if (passengerBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            passenger_ != null &&
            passenger_ != com.passkit.grpc.Flights.PassengerOuterClass.Passenger.getDefaultInstance()) {
            getPassengerBuilder().mergeFrom(value);
          } else {
            passenger_ = value;
          }
        } else {
          passengerBuilder_.mergeFrom(value);
        }
        if (passenger_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public Builder clearPassenger() {
        bitField0_ = (bitField0_ & ~0x00000400);
        passenger_ = null;
        if (passengerBuilder_ != null) {
          passengerBuilder_.dispose();
          passengerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public com.passkit.grpc.Flights.PassengerOuterClass.Passenger.Builder getPassengerBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getPassengerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      public com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder getPassengerOrBuilder() {
        if (passengerBuilder_ != null) {
          return passengerBuilder_.getMessageOrBuilder();
        } else {
          return passenger_ == null ?
              com.passkit.grpc.Flights.PassengerOuterClass.Passenger.getDefaultInstance() : passenger_;
        }
      }
      /**
       * <pre>
       * Details of the passenger and any infant.
       * </pre>
       *
       * <code>.flights.Passenger passenger = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.PassengerOuterClass.Passenger, com.passkit.grpc.Flights.PassengerOuterClass.Passenger.Builder, com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder> 
          getPassengerFieldBuilder() {
        if (passengerBuilder_ == null) {
          passengerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.PassengerOuterClass.Passenger, com.passkit.grpc.Flights.PassengerOuterClass.Passenger.Builder, com.passkit.grpc.Flights.PassengerOuterClass.PassengerOrBuilder>(
                  getPassenger(),
                  getParentForChildren(),
                  isClean());
          passenger_ = null;
        }
        return passengerBuilder_;
      }

      private java.lang.Object class__ = "";
      /**
       * <pre>
       * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
       * </pre>
       *
       * <code>string class = 13;</code>
       * @return The class.
       */
      public java.lang.String getClass_() {
        java.lang.Object ref = class__;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          class__ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
       * </pre>
       *
       * <code>string class = 13;</code>
       * @return The bytes for class.
       */
      public com.google.protobuf.ByteString
          getClass_Bytes() {
        java.lang.Object ref = class__;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          class__ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
       * </pre>
       *
       * <code>string class = 13;</code>
       * @param value The class to set.
       * @return This builder for chaining.
       */
      public Builder setClass_(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        class__ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
       * </pre>
       *
       * <code>string class = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearClass_() {
        class__ = getDefaultInstance().getClass_();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
       * </pre>
       *
       * <code>string class = 13;</code>
       * @param value The bytes for class to set.
       * @return This builder for chaining.
       */
      public Builder setClass_Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        class__ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }

      private int compartmentCode_ = 0;
      /**
       * <pre>
       * The compartment code / class of the ticket.
       * </pre>
       *
       * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
       * @return The enum numeric value on the wire for compartmentCode.
       */
      @java.lang.Override public int getCompartmentCodeValue() {
        return compartmentCode_;
      }
      /**
       * <pre>
       * The compartment code / class of the ticket.
       * </pre>
       *
       * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
       * @param value The enum numeric value on the wire for compartmentCode to set.
       * @return This builder for chaining.
       */
      public Builder setCompartmentCodeValue(int value) {
        compartmentCode_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compartment code / class of the ticket.
       * </pre>
       *
       * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
       * @return The compartmentCode.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode getCompartmentCode() {
        com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode result = com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.forNumber(compartmentCode_);
        return result == null ? com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The compartment code / class of the ticket.
       * </pre>
       *
       * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
       * @param value The compartmentCode to set.
       * @return This builder for chaining.
       */
      public Builder setCompartmentCode(com.passkit.grpc.Flights.CabinCodes.CabinCodes.CompartmentCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        compartmentCode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compartment code / class of the ticket.
       * </pre>
       *
       * <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompartmentCode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        compartmentCode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object seatNumber_ = "";
      /**
       * <pre>
       * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
       * </pre>
       *
       * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The seatNumber.
       */
      public java.lang.String getSeatNumber() {
        java.lang.Object ref = seatNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          seatNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
       * </pre>
       *
       * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for seatNumber.
       */
      public com.google.protobuf.ByteString
          getSeatNumberBytes() {
        java.lang.Object ref = seatNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          seatNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
       * </pre>
       *
       * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The seatNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSeatNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        seatNumber_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
       * </pre>
       *
       * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSeatNumber() {
        seatNumber_ = getDefaultInstance().getSeatNumber();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
       * </pre>
       *
       * <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for seatNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSeatNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        seatNumber_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 16;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 16;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {

        sequenceNumber_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object boardingGroup_ = "";
      /**
       * <pre>
       * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
       * </pre>
       *
       * <code>string boardingGroup = 17;</code>
       * @return The boardingGroup.
       */
      public java.lang.String getBoardingGroup() {
        java.lang.Object ref = boardingGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingGroup_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
       * </pre>
       *
       * <code>string boardingGroup = 17;</code>
       * @return The bytes for boardingGroup.
       */
      public com.google.protobuf.ByteString
          getBoardingGroupBytes() {
        java.lang.Object ref = boardingGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
       * </pre>
       *
       * <code>string boardingGroup = 17;</code>
       * @param value The boardingGroup to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingGroup(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingGroup_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
       * </pre>
       *
       * <code>string boardingGroup = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingGroup() {
        boardingGroup_ = getDefaultInstance().getBoardingGroup();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
       * </pre>
       *
       * <code>string boardingGroup = 17;</code>
       * @param value The bytes for boardingGroup to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingGroup_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }

      private java.lang.Object boardingPosition_ = "";
      /**
       * <pre>
       * An additional field to indicate boarding priority or order.
       * </pre>
       *
       * <code>string boardingPosition = 18;</code>
       * @return The boardingPosition.
       */
      public java.lang.String getBoardingPosition() {
        java.lang.Object ref = boardingPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An additional field to indicate boarding priority or order.
       * </pre>
       *
       * <code>string boardingPosition = 18;</code>
       * @return The bytes for boardingPosition.
       */
      public com.google.protobuf.ByteString
          getBoardingPositionBytes() {
        java.lang.Object ref = boardingPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An additional field to indicate boarding priority or order.
       * </pre>
       *
       * <code>string boardingPosition = 18;</code>
       * @param value The boardingPosition to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPosition(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingPosition_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An additional field to indicate boarding priority or order.
       * </pre>
       *
       * <code>string boardingPosition = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPosition() {
        boardingPosition_ = getDefaultInstance().getBoardingPosition();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An additional field to indicate boarding priority or order.
       * </pre>
       *
       * <code>string boardingPosition = 18;</code>
       * @param value The bytes for boardingPosition to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingPosition_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }

      private java.lang.Object freeBaggageAllowance_ = "";
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The freeBaggageAllowance.
       */
      public java.lang.String getFreeBaggageAllowance() {
        java.lang.Object ref = freeBaggageAllowance_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          freeBaggageAllowance_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for freeBaggageAllowance.
       */
      public com.google.protobuf.ByteString
          getFreeBaggageAllowanceBytes() {
        java.lang.Object ref = freeBaggageAllowance_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          freeBaggageAllowance_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The freeBaggageAllowance to set.
       * @return This builder for chaining.
       */
      public Builder setFreeBaggageAllowance(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        freeBaggageAllowance_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFreeBaggageAllowance() {
        freeBaggageAllowance_ = getDefaultInstance().getFreeBaggageAllowance();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for freeBaggageAllowance to set.
       * @return This builder for chaining.
       */
      public Builder setFreeBaggageAllowanceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        freeBaggageAllowance_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }

      private java.lang.Object carryOnAllowance_ = "";
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The carryOnAllowance.
       */
      public java.lang.String getCarryOnAllowance() {
        java.lang.Object ref = carryOnAllowance_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          carryOnAllowance_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for carryOnAllowance.
       */
      public com.google.protobuf.ByteString
          getCarryOnAllowanceBytes() {
        java.lang.Object ref = carryOnAllowance_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          carryOnAllowance_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The carryOnAllowance to set.
       * @return This builder for chaining.
       */
      public Builder setCarryOnAllowance(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        carryOnAllowance_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCarryOnAllowance() {
        carryOnAllowance_ = getDefaultInstance().getCarryOnAllowance();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
       * </pre>
       *
       * <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for carryOnAllowance to set.
       * @return This builder for chaining.
       */
      public Builder setCarryOnAllowanceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        carryOnAllowance_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList ssrCodes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureSsrCodesIsMutable() {
        if (!ssrCodes_.isModifiable()) {
          ssrCodes_ = new com.google.protobuf.LazyStringArrayList(ssrCodes_);
        }
        bitField0_ |= 0x00080000;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @return A list containing the ssrCodes.
       */
      public com.google.protobuf.ProtocolStringList
          getSsrCodesList() {
        ssrCodes_.makeImmutable();
        return ssrCodes_;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @return The count of ssrCodes.
       */
      public int getSsrCodesCount() {
        return ssrCodes_.size();
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param index The index of the element to return.
       * @return The ssrCodes at the given index.
       */
      public java.lang.String getSsrCodes(int index) {
        return ssrCodes_.get(index);
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param index The index of the value to return.
       * @return The bytes of the ssrCodes at the given index.
       */
      public com.google.protobuf.ByteString
          getSsrCodesBytes(int index) {
        return ssrCodes_.getByteString(index);
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param index The index to set the value at.
       * @param value The ssrCodes to set.
       * @return This builder for chaining.
       */
      public Builder setSsrCodes(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSsrCodesIsMutable();
        ssrCodes_.set(index, value);
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param value The ssrCodes to add.
       * @return This builder for chaining.
       */
      public Builder addSsrCodes(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSsrCodesIsMutable();
        ssrCodes_.add(value);
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param values The ssrCodes to add.
       * @return This builder for chaining.
       */
      public Builder addAllSsrCodes(
          java.lang.Iterable<java.lang.String> values) {
        ensureSsrCodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ssrCodes_);
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearSsrCodes() {
        ssrCodes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
       * </pre>
       *
       * <code>repeated string ssrCodes = 21;</code>
       * @param value The bytes of the ssrCodes to add.
       * @return This builder for chaining.
       */
      public Builder addSsrCodesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSsrCodesIsMutable();
        ssrCodes_.add(value);
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }

      private java.lang.Object osi_ = "";
      /**
       * <pre>
       * Other service information that may be relevant to the booking.
       * </pre>
       *
       * <code>string osi = 22;</code>
       * @return The osi.
       */
      public java.lang.String getOsi() {
        java.lang.Object ref = osi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          osi_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Other service information that may be relevant to the booking.
       * </pre>
       *
       * <code>string osi = 22;</code>
       * @return The bytes for osi.
       */
      public com.google.protobuf.ByteString
          getOsiBytes() {
        java.lang.Object ref = osi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          osi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Other service information that may be relevant to the booking.
       * </pre>
       *
       * <code>string osi = 22;</code>
       * @param value The osi to set.
       * @return This builder for chaining.
       */
      public Builder setOsi(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        osi_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Other service information that may be relevant to the booking.
       * </pre>
       *
       * <code>string osi = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearOsi() {
        osi_ = getDefaultInstance().getOsi();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Other service information that may be relevant to the booking.
       * </pre>
       *
       * <code>string osi = 22;</code>
       * @param value The bytes for osi to set.
       * @return This builder for chaining.
       */
      public Builder setOsiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        osi_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }

      private java.lang.Object remarks_ = "";
      /**
       * <pre>
       * Free text booking remarks.
       * </pre>
       *
       * <code>string remarks = 23;</code>
       * @return The remarks.
       */
      public java.lang.String getRemarks() {
        java.lang.Object ref = remarks_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          remarks_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Free text booking remarks.
       * </pre>
       *
       * <code>string remarks = 23;</code>
       * @return The bytes for remarks.
       */
      public com.google.protobuf.ByteString
          getRemarksBytes() {
        java.lang.Object ref = remarks_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remarks_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Free text booking remarks.
       * </pre>
       *
       * <code>string remarks = 23;</code>
       * @param value The remarks to set.
       * @return This builder for chaining.
       */
      public Builder setRemarks(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        remarks_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Free text booking remarks.
       * </pre>
       *
       * <code>string remarks = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemarks() {
        remarks_ = getDefaultInstance().getRemarks();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Free text booking remarks.
       * </pre>
       *
       * <code>string remarks = 23;</code>
       * @param value The bytes for remarks to set.
       * @return This builder for chaining.
       */
      public Builder setRemarksBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        remarks_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }

      private int passengerStatus_ = 0;
      /**
       * <pre>
       * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
       * </pre>
       *
       * <code>.flights.PassengerStatus passengerStatus = 24;</code>
       * @return The enum numeric value on the wire for passengerStatus.
       */
      @java.lang.Override public int getPassengerStatusValue() {
        return passengerStatus_;
      }
      /**
       * <pre>
       * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
       * </pre>
       *
       * <code>.flights.PassengerStatus passengerStatus = 24;</code>
       * @param value The enum numeric value on the wire for passengerStatus to set.
       * @return This builder for chaining.
       */
      public Builder setPassengerStatusValue(int value) {
        passengerStatus_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
       * </pre>
       *
       * <code>.flights.PassengerStatus passengerStatus = 24;</code>
       * @return The passengerStatus.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.Barcode.PassengerStatus getPassengerStatus() {
        com.passkit.grpc.Flights.Barcode.PassengerStatus result = com.passkit.grpc.Flights.Barcode.PassengerStatus.forNumber(passengerStatus_);
        return result == null ? com.passkit.grpc.Flights.Barcode.PassengerStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
       * </pre>
       *
       * <code>.flights.PassengerStatus passengerStatus = 24;</code>
       * @param value The passengerStatus to set.
       * @return This builder for chaining.
       */
      public Builder setPassengerStatus(com.passkit.grpc.Flights.Barcode.PassengerStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00400000;
        passengerStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
       * </pre>
       *
       * <code>.flights.PassengerStatus passengerStatus = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassengerStatus() {
        bitField0_ = (bitField0_ & ~0x00400000);
        passengerStatus_ = 0;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Flights.Barcode.ConditionalItems conditionalItems_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Barcode.ConditionalItems, com.passkit.grpc.Flights.Barcode.ConditionalItems.Builder, com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder> conditionalItemsBuilder_;
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       * @return Whether the conditionalItems field is set.
       */
      public boolean hasConditionalItems() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       * @return The conditionalItems.
       */
      public com.passkit.grpc.Flights.Barcode.ConditionalItems getConditionalItems() {
        if (conditionalItemsBuilder_ == null) {
          return conditionalItems_ == null ? com.passkit.grpc.Flights.Barcode.ConditionalItems.getDefaultInstance() : conditionalItems_;
        } else {
          return conditionalItemsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public Builder setConditionalItems(com.passkit.grpc.Flights.Barcode.ConditionalItems value) {
        if (conditionalItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conditionalItems_ = value;
        } else {
          conditionalItemsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public Builder setConditionalItems(
          com.passkit.grpc.Flights.Barcode.ConditionalItems.Builder builderForValue) {
        if (conditionalItemsBuilder_ == null) {
          conditionalItems_ = builderForValue.build();
        } else {
          conditionalItemsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public Builder mergeConditionalItems(com.passkit.grpc.Flights.Barcode.ConditionalItems value) {
        if (conditionalItemsBuilder_ == null) {
          if (((bitField0_ & 0x00800000) != 0) &&
            conditionalItems_ != null &&
            conditionalItems_ != com.passkit.grpc.Flights.Barcode.ConditionalItems.getDefaultInstance()) {
            getConditionalItemsBuilder().mergeFrom(value);
          } else {
            conditionalItems_ = value;
          }
        } else {
          conditionalItemsBuilder_.mergeFrom(value);
        }
        if (conditionalItems_ != null) {
          bitField0_ |= 0x00800000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public Builder clearConditionalItems() {
        bitField0_ = (bitField0_ & ~0x00800000);
        conditionalItems_ = null;
        if (conditionalItemsBuilder_ != null) {
          conditionalItemsBuilder_.dispose();
          conditionalItemsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public com.passkit.grpc.Flights.Barcode.ConditionalItems.Builder getConditionalItemsBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getConditionalItemsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      public com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder getConditionalItemsOrBuilder() {
        if (conditionalItemsBuilder_ != null) {
          return conditionalItemsBuilder_.getMessageOrBuilder();
        } else {
          return conditionalItems_ == null ?
              com.passkit.grpc.Flights.Barcode.ConditionalItems.getDefaultInstance() : conditionalItems_;
        }
      }
      /**
       * <pre>
       * Conditional items for the flight segment as described in IATA PSC Resolution 792.
       * </pre>
       *
       * <code>.flights.ConditionalItems conditionalItems = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.Barcode.ConditionalItems, com.passkit.grpc.Flights.Barcode.ConditionalItems.Builder, com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder> 
          getConditionalItemsFieldBuilder() {
        if (conditionalItemsBuilder_ == null) {
          conditionalItemsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.Barcode.ConditionalItems, com.passkit.grpc.Flights.Barcode.ConditionalItems.Builder, com.passkit.grpc.Flights.Barcode.ConditionalItemsOrBuilder>(
                  getConditionalItems(),
                  getParentForChildren(),
                  isClean());
          conditionalItems_ = null;
        }
        return conditionalItemsBuilder_;
      }

      private java.lang.Object barcodePayload_ = "";
      /**
       * <pre>
       * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
       * </pre>
       *
       * <code>string barcodePayload = 26;</code>
       * @return The barcodePayload.
       */
      public java.lang.String getBarcodePayload() {
        java.lang.Object ref = barcodePayload_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          barcodePayload_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
       * </pre>
       *
       * <code>string barcodePayload = 26;</code>
       * @return The bytes for barcodePayload.
       */
      public com.google.protobuf.ByteString
          getBarcodePayloadBytes() {
        java.lang.Object ref = barcodePayload_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          barcodePayload_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
       * </pre>
       *
       * <code>string barcodePayload = 26;</code>
       * @param value The barcodePayload to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodePayload(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        barcodePayload_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
       * </pre>
       *
       * <code>string barcodePayload = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearBarcodePayload() {
        barcodePayload_ = getDefaultInstance().getBarcodePayload();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
       * </pre>
       *
       * <code>string barcodePayload = 26;</code>
       * @param value The bytes for barcodePayload to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodePayloadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        barcodePayload_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }

      private java.lang.Object securityImage_ = "";
      /**
       * <pre>
       * Security image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string securityImage = 27;</code>
       * @return The securityImage.
       */
      public java.lang.String getSecurityImage() {
        java.lang.Object ref = securityImage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          securityImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Security image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string securityImage = 27;</code>
       * @return The bytes for securityImage.
       */
      public com.google.protobuf.ByteString
          getSecurityImageBytes() {
        java.lang.Object ref = securityImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          securityImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Security image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string securityImage = 27;</code>
       * @param value The securityImage to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityImage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        securityImage_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string securityImage = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityImage() {
        securityImage_ = getDefaultInstance().getSecurityImage();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string securityImage = 27;</code>
       * @param value The bytes for securityImage to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        securityImage_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }

      private java.lang.Object privilegeImage_ = "";
      /**
       * <pre>
       * Privilege image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string privilegeImage = 28;</code>
       * @return The privilegeImage.
       */
      public java.lang.String getPrivilegeImage() {
        java.lang.Object ref = privilegeImage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          privilegeImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Privilege image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string privilegeImage = 28;</code>
       * @return The bytes for privilegeImage.
       */
      public com.google.protobuf.ByteString
          getPrivilegeImageBytes() {
        java.lang.Object ref = privilegeImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privilegeImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Privilege image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string privilegeImage = 28;</code>
       * @param value The privilegeImage to set.
       * @return This builder for chaining.
       */
      public Builder setPrivilegeImage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privilegeImage_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Privilege image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string privilegeImage = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivilegeImage() {
        privilegeImage_ = getDefaultInstance().getPrivilegeImage();
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Privilege image id for display above the barcode on a Google Pay pass.
       * </pre>
       *
       * <code>string privilegeImage = 28;</code>
       * @param value The bytes for privilegeImage to set.
       * @return This builder for chaining.
       */
      public Builder setPrivilegeImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        privilegeImage_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }

      private java.lang.Object footerImage_ = "";
      /**
       * <pre>
       * Footer image id for display above the barcode on iOS devices.
       * </pre>
       *
       * <code>string footerImage = 29;</code>
       * @return The footerImage.
       */
      public java.lang.String getFooterImage() {
        java.lang.Object ref = footerImage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          footerImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Footer image id for display above the barcode on iOS devices.
       * </pre>
       *
       * <code>string footerImage = 29;</code>
       * @return The bytes for footerImage.
       */
      public com.google.protobuf.ByteString
          getFooterImageBytes() {
        java.lang.Object ref = footerImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          footerImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Footer image id for display above the barcode on iOS devices.
       * </pre>
       *
       * <code>string footerImage = 29;</code>
       * @param value The footerImage to set.
       * @return This builder for chaining.
       */
      public Builder setFooterImage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        footerImage_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Footer image id for display above the barcode on iOS devices.
       * </pre>
       *
       * <code>string footerImage = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearFooterImage() {
        footerImage_ = getDefaultInstance().getFooterImage();
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Footer image id for display above the barcode on iOS devices.
       * </pre>
       *
       * <code>string footerImage = 29;</code>
       * @param value The bytes for footerImage to set.
       * @return This builder for chaining.
       */
      public Builder setFooterImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        footerImage_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }

      private java.util.List<com.passkit.grpc.Proximity.GPSLocation> locationMessages_ =
        java.util.Collections.emptyList();
      private void ensureLocationMessagesIsMutable() {
        if (!((bitField0_ & 0x10000000) != 0)) {
          locationMessages_ = new java.util.ArrayList<com.passkit.grpc.Proximity.GPSLocation>(locationMessages_);
          bitField0_ |= 0x10000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder> locationMessagesBuilder_;

      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.GPSLocation> getLocationMessagesList() {
        if (locationMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationMessages_);
        } else {
          return locationMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public int getLocationMessagesCount() {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.size();
        } else {
          return locationMessagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation getLocationMessages(int index) {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.get(index);
        } else {
          return locationMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.set(index, value);
          onChanged();
        } else {
          locationMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.add(value);
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation value) {
        if (locationMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationMessagesIsMutable();
          locationMessages_.add(index, value);
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.add(builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLocationMessages(
          int index, com.passkit.grpc.Proximity.GPSLocation.Builder builderForValue) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addAllLocationMessages(
          java.lang.Iterable<? extends com.passkit.grpc.Proximity.GPSLocation> values) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationMessages_);
          onChanged();
        } else {
          locationMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearLocationMessages() {
        if (locationMessagesBuilder_ == null) {
          locationMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
          onChanged();
        } else {
          locationMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder removeLocationMessages(int index) {
        if (locationMessagesBuilder_ == null) {
          ensureLocationMessagesIsMutable();
          locationMessages_.remove(index);
          onChanged();
        } else {
          locationMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder getLocationMessagesBuilder(
          int index) {
        return getLocationMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocationOrBuilder getLocationMessagesOrBuilder(
          int index) {
        if (locationMessagesBuilder_ == null) {
          return locationMessages_.get(index);  } else {
          return locationMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<? extends com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
           getLocationMessagesOrBuilderList() {
        if (locationMessagesBuilder_ != null) {
          return locationMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationMessages_);
        }
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder addLocationMessagesBuilder() {
        return getLocationMessagesFieldBuilder().addBuilder(
            com.passkit.grpc.Proximity.GPSLocation.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.GPSLocation.Builder addLocationMessagesBuilder(
          int index) {
        return getLocationMessagesFieldBuilder().addBuilder(
            index, com.passkit.grpc.Proximity.GPSLocation.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.GPSLocation.Builder> 
           getLocationMessagesBuilderList() {
        return getLocationMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder> 
          getLocationMessagesFieldBuilder() {
        if (locationMessagesBuilder_ == null) {
          locationMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Proximity.GPSLocation, com.passkit.grpc.Proximity.GPSLocation.Builder, com.passkit.grpc.Proximity.GPSLocationOrBuilder>(
                  locationMessages_,
                  ((bitField0_ & 0x10000000) != 0),
                  getParentForChildren(),
                  isClean());
          locationMessages_ = null;
        }
        return locationMessagesBuilder_;
      }

      private java.util.List<com.passkit.grpc.Proximity.Beacon> beaconMessages_ =
        java.util.Collections.emptyList();
      private void ensureBeaconMessagesIsMutable() {
        if (!((bitField0_ & 0x20000000) != 0)) {
          beaconMessages_ = new java.util.ArrayList<com.passkit.grpc.Proximity.Beacon>(beaconMessages_);
          bitField0_ |= 0x20000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder> beaconMessagesBuilder_;

      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.Beacon> getBeaconMessagesList() {
        if (beaconMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beaconMessages_);
        } else {
          return beaconMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public int getBeaconMessagesCount() {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.size();
        } else {
          return beaconMessagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon getBeaconMessages(int index) {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.get(index);
        } else {
          return beaconMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.set(index, value);
          onChanged();
        } else {
          beaconMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(value);
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon value) {
        if (beaconMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(index, value);
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addBeaconMessages(
          int index, com.passkit.grpc.Proximity.Beacon.Builder builderForValue) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addAllBeaconMessages(
          java.lang.Iterable<? extends com.passkit.grpc.Proximity.Beacon> values) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beaconMessages_);
          onChanged();
        } else {
          beaconMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearBeaconMessages() {
        if (beaconMessagesBuilder_ == null) {
          beaconMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x20000000);
          onChanged();
        } else {
          beaconMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder removeBeaconMessages(int index) {
        if (beaconMessagesBuilder_ == null) {
          ensureBeaconMessagesIsMutable();
          beaconMessages_.remove(index);
          onChanged();
        } else {
          beaconMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder getBeaconMessagesBuilder(
          int index) {
        return getBeaconMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.BeaconOrBuilder getBeaconMessagesOrBuilder(
          int index) {
        if (beaconMessagesBuilder_ == null) {
          return beaconMessages_.get(index);  } else {
          return beaconMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<? extends com.passkit.grpc.Proximity.BeaconOrBuilder> 
           getBeaconMessagesOrBuilderList() {
        if (beaconMessagesBuilder_ != null) {
          return beaconMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beaconMessages_);
        }
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder addBeaconMessagesBuilder() {
        return getBeaconMessagesFieldBuilder().addBuilder(
            com.passkit.grpc.Proximity.Beacon.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Proximity.Beacon.Builder addBeaconMessagesBuilder(
          int index) {
        return getBeaconMessagesFieldBuilder().addBuilder(
            index, com.passkit.grpc.Proximity.Beacon.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
       * </pre>
       *
       * <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Proximity.Beacon.Builder> 
           getBeaconMessagesBuilderList() {
        return getBeaconMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder> 
          getBeaconMessagesFieldBuilder() {
        if (beaconMessagesBuilder_ == null) {
          beaconMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Proximity.Beacon, com.passkit.grpc.Proximity.Beacon.Builder, com.passkit.grpc.Proximity.BeaconOrBuilder>(
                  beaconMessages_,
                  ((bitField0_ & 0x20000000) != 0),
                  getParentForChildren(),
                  isClean());
          beaconMessages_ = null;
        }
        return beaconMessagesBuilder_;
      }

      private java.util.List<com.passkit.grpc.Links.Link> links_ =
        java.util.Collections.emptyList();
      private void ensureLinksIsMutable() {
        if (!((bitField0_ & 0x40000000) != 0)) {
          links_ = new java.util.ArrayList<com.passkit.grpc.Links.Link>(links_);
          bitField0_ |= 0x40000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder> linksBuilder_;

      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Links.Link> getLinksList() {
        if (linksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(links_);
        } else {
          return linksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public int getLinksCount() {
        if (linksBuilder_ == null) {
          return links_.size();
        } else {
          return linksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Links.Link getLinks(int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);
        } else {
          return linksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLinks(
          int index, com.passkit.grpc.Links.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.set(index, value);
          onChanged();
        } else {
          linksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setLinks(
          int index, com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.set(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLinks(com.passkit.grpc.Links.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(value);
          onChanged();
        } else {
          linksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLinks(
          int index, com.passkit.grpc.Links.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(index, value);
          onChanged();
        } else {
          linksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLinks(
          com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addLinks(
          int index, com.passkit.grpc.Links.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends com.passkit.grpc.Links.Link> values) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, links_);
          onChanged();
        } else {
          linksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearLinks() {
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x40000000);
          onChanged();
        } else {
          linksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder removeLinks(int index) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.remove(index);
          onChanged();
        } else {
          linksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Links.Link.Builder getLinksBuilder(
          int index) {
        return getLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Links.LinkOrBuilder getLinksOrBuilder(
          int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);  } else {
          return linksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<? extends com.passkit.grpc.Links.LinkOrBuilder> 
           getLinksOrBuilderList() {
        if (linksBuilder_ != null) {
          return linksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(links_);
        }
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Links.Link.Builder addLinksBuilder() {
        return getLinksFieldBuilder().addBuilder(
            com.passkit.grpc.Links.Link.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.Links.Link.Builder addLinksBuilder(
          int index) {
        return getLinksFieldBuilder().addBuilder(
            index, com.passkit.grpc.Links.Link.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of links to be appended to the end of each boarding pass.
       * </pre>
       *
       * <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public java.util.List<com.passkit.grpc.Links.Link.Builder> 
           getLinksBuilderList() {
        return getLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder> 
          getLinksFieldBuilder() {
        if (linksBuilder_ == null) {
          linksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.Links.Link, com.passkit.grpc.Links.Link.Builder, com.passkit.grpc.Links.LinkOrBuilder>(
                  links_,
                  ((bitField0_ & 0x40000000) != 0),
                  getParentForChildren(),
                  isClean());
          links_ = null;
        }
        return linksBuilder_;
      }

      private java.lang.Object barcodeAdditionalData_ = "";
      /**
       * <pre>
       * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
       * </pre>
       *
       * <code>string barcodeAdditionalData = 33;</code>
       * @return The barcodeAdditionalData.
       */
      public java.lang.String getBarcodeAdditionalData() {
        java.lang.Object ref = barcodeAdditionalData_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          barcodeAdditionalData_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
       * </pre>
       *
       * <code>string barcodeAdditionalData = 33;</code>
       * @return The bytes for barcodeAdditionalData.
       */
      public com.google.protobuf.ByteString
          getBarcodeAdditionalDataBytes() {
        java.lang.Object ref = barcodeAdditionalData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          barcodeAdditionalData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
       * </pre>
       *
       * <code>string barcodeAdditionalData = 33;</code>
       * @param value The barcodeAdditionalData to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodeAdditionalData(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        barcodeAdditionalData_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
       * </pre>
       *
       * <code>string barcodeAdditionalData = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearBarcodeAdditionalData() {
        barcodeAdditionalData_ = getDefaultInstance().getBarcodeAdditionalData();
        bitField0_ = (bitField0_ & ~0x80000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
       * </pre>
       *
       * <code>string barcodeAdditionalData = 33;</code>
       * @param value The bytes for barcodeAdditionalData to set.
       * @return This builder for chaining.
       */
      public Builder setBarcodeAdditionalDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        barcodeAdditionalData_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }

      private java.lang.Object infantPassId_ = "";
      /**
       * <pre>
       * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
       * </pre>
       *
       * <code>string infantPassId = 34;</code>
       * @return The infantPassId.
       */
      public java.lang.String getInfantPassId() {
        java.lang.Object ref = infantPassId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          infantPassId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
       * </pre>
       *
       * <code>string infantPassId = 34;</code>
       * @return The bytes for infantPassId.
       */
      public com.google.protobuf.ByteString
          getInfantPassIdBytes() {
        java.lang.Object ref = infantPassId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          infantPassId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
       * </pre>
       *
       * <code>string infantPassId = 34;</code>
       * @param value The infantPassId to set.
       * @return This builder for chaining.
       */
      public Builder setInfantPassId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        infantPassId_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
       * </pre>
       *
       * <code>string infantPassId = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfantPassId() {
        infantPassId_ = getDefaultInstance().getInfantPassId();
        bitField1_ = (bitField1_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
       * </pre>
       *
       * <code>string infantPassId = 34;</code>
       * @param value The bytes for infantPassId to set.
       * @return This builder for chaining.
       */
      public Builder setInfantPassIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        infantPassId_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.passkit.grpc.CommonObjects.DataItems additionalDataItems_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.DataItems, com.passkit.grpc.CommonObjects.DataItems.Builder, com.passkit.grpc.CommonObjects.DataItemsOrBuilder> additionalDataItemsBuilder_;
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       * @return Whether the additionalDataItems field is set.
       */
      public boolean hasAdditionalDataItems() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       * @return The additionalDataItems.
       */
      public com.passkit.grpc.CommonObjects.DataItems getAdditionalDataItems() {
        if (additionalDataItemsBuilder_ == null) {
          return additionalDataItems_ == null ? com.passkit.grpc.CommonObjects.DataItems.getDefaultInstance() : additionalDataItems_;
        } else {
          return additionalDataItemsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public Builder setAdditionalDataItems(com.passkit.grpc.CommonObjects.DataItems value) {
        if (additionalDataItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          additionalDataItems_ = value;
        } else {
          additionalDataItemsBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public Builder setAdditionalDataItems(
          com.passkit.grpc.CommonObjects.DataItems.Builder builderForValue) {
        if (additionalDataItemsBuilder_ == null) {
          additionalDataItems_ = builderForValue.build();
        } else {
          additionalDataItemsBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public Builder mergeAdditionalDataItems(com.passkit.grpc.CommonObjects.DataItems value) {
        if (additionalDataItemsBuilder_ == null) {
          if (((bitField1_ & 0x00000002) != 0) &&
            additionalDataItems_ != null &&
            additionalDataItems_ != com.passkit.grpc.CommonObjects.DataItems.getDefaultInstance()) {
            getAdditionalDataItemsBuilder().mergeFrom(value);
          } else {
            additionalDataItems_ = value;
          }
        } else {
          additionalDataItemsBuilder_.mergeFrom(value);
        }
        if (additionalDataItems_ != null) {
          bitField1_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public Builder clearAdditionalDataItems() {
        bitField1_ = (bitField1_ & ~0x00000002);
        additionalDataItems_ = null;
        if (additionalDataItemsBuilder_ != null) {
          additionalDataItemsBuilder_.dispose();
          additionalDataItemsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public com.passkit.grpc.CommonObjects.DataItems.Builder getAdditionalDataItemsBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getAdditionalDataItemsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      public com.passkit.grpc.CommonObjects.DataItemsOrBuilder getAdditionalDataItemsOrBuilder() {
        if (additionalDataItemsBuilder_ != null) {
          return additionalDataItemsBuilder_.getMessageOrBuilder();
        } else {
          return additionalDataItems_ == null ?
              com.passkit.grpc.CommonObjects.DataItems.getDefaultInstance() : additionalDataItems_;
        }
      }
      /**
       * <pre>
       * Optional key value pairs to be added in to the flight record
       * </pre>
       *
       * <code>.io.DataItems additionalDataItems = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.DataItems, com.passkit.grpc.CommonObjects.DataItems.Builder, com.passkit.grpc.CommonObjects.DataItemsOrBuilder> 
          getAdditionalDataItemsFieldBuilder() {
        if (additionalDataItemsBuilder_ == null) {
          additionalDataItemsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.DataItems, com.passkit.grpc.CommonObjects.DataItems.Builder, com.passkit.grpc.CommonObjects.DataItemsOrBuilder>(
                  getAdditionalDataItems(),
                  getParentForChildren(),
                  isClean());
          additionalDataItems_ = null;
        }
        return additionalDataItemsBuilder_;
      }

      private com.passkit.grpc.MetricsOuterClass.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       * @return The metadata.
       */
      public com.passkit.grpc.MetricsOuterClass.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public Builder setMetadata(com.passkit.grpc.MetricsOuterClass.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public Builder setMetadata(
          com.passkit.grpc.MetricsOuterClass.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public Builder mergeMetadata(com.passkit.grpc.MetricsOuterClass.Metadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField1_ & 0x00000004) != 0) &&
            metadata_ != null &&
            metadata_ != com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField1_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public Builder clearMetadata() {
        bitField1_ = (bitField1_ & ~0x00000004);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.Metadata.Builder getMetadataBuilder() {
        bitField1_ |= 0x00000004;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Pass Metadata
       * </pre>
       *
       * <code>.io.Metadata metadata = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassRecord)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassRecord)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassRecord>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassRecord>() {
      @java.lang.Override
      public BoardingPassRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassRecordRequestByTicketNumberOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassRecordRequestByTicketNumber)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketNumber.
     */
    java.lang.String getTicketNumber();
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for ticketNumber.
     */
    com.google.protobuf.ByteString
        getTicketNumberBytes();

    /**
     * <pre>
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     * </pre>
     *
     * <code>int32 ticketLeg = 2;</code>
     * @return The ticketLeg.
     */
    int getTicketLeg();

    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The boardingPoint.
     */
    java.lang.String getBoardingPoint();
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The bytes for boardingPoint.
     */
    com.google.protobuf.ByteString
        getBoardingPointBytes();
  }
  /**
   * <pre>
   * Boarding passes are indexed by ticket number and leg or boarding point. Either a journey leg or boarding point is required.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassRecordRequestByTicketNumber}
   */
  public static final class BoardingPassRecordRequestByTicketNumber extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassRecordRequestByTicketNumber)
      BoardingPassRecordRequestByTicketNumberOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassRecordRequestByTicketNumber.class.getName());
    }
    // Use BoardingPassRecordRequestByTicketNumber.newBuilder() to construct.
    private BoardingPassRecordRequestByTicketNumber(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassRecordRequestByTicketNumber() {
      ticketNumber_ = "";
      boardingPoint_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByTicketNumber_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder.class);
    }

    public static final int TICKETNUMBER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ticketNumber_ = "";
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The ticketNumber.
     */
    @java.lang.Override
    public java.lang.String getTicketNumber() {
      java.lang.Object ref = ticketNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ticketNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     * </pre>
     *
     * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for ticketNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTicketNumberBytes() {
      java.lang.Object ref = ticketNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticketNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKETLEG_FIELD_NUMBER = 2;
    private int ticketLeg_ = 0;
    /**
     * <pre>
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     * </pre>
     *
     * <code>int32 ticketLeg = 2;</code>
     * @return The ticketLeg.
     */
    @java.lang.Override
    public int getTicketLeg() {
      return ticketLeg_;
    }

    public static final int BOARDINGPOINT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingPoint_ = "";
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The boardingPoint.
     */
    @java.lang.Override
    public java.lang.String getBoardingPoint() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The bytes for boardingPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingPointBytes() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticketNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, ticketNumber_);
      }
      if (ticketLeg_ != 0) {
        output.writeInt32(2, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, boardingPoint_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticketNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, ticketNumber_);
      }
      if (ticketLeg_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, boardingPoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) obj;

      if (!getTicketNumber()
          .equals(other.getTicketNumber())) return false;
      if (getTicketLeg()
          != other.getTicketLeg()) return false;
      if (!getBoardingPoint()
          .equals(other.getBoardingPoint())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TICKETNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getTicketNumber().hashCode();
      hash = (37 * hash) + TICKETLEG_FIELD_NUMBER;
      hash = (53 * hash) + getTicketLeg();
      hash = (37 * hash) + BOARDINGPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingPoint().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Boarding passes are indexed by ticket number and leg or boarding point. Either a journey leg or boarding point is required.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassRecordRequestByTicketNumber}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassRecordRequestByTicketNumber)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByTicketNumber_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ticketNumber_ = "";
        ticketLeg_ = 0;
        boardingPoint_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ticketNumber_ = ticketNumber_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ticketLeg_ = ticketLeg_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.boardingPoint_ = boardingPoint_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance()) return this;
        if (!other.getTicketNumber().isEmpty()) {
          ticketNumber_ = other.ticketNumber_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getTicketLeg() != 0) {
          setTicketLeg(other.getTicketLeg());
        }
        if (!other.getBoardingPoint().isEmpty()) {
          boardingPoint_ = other.boardingPoint_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                ticketNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                ticketLeg_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                boardingPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object ticketNumber_ = "";
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The ticketNumber.
       */
      public java.lang.String getTicketNumber() {
        java.lang.Object ref = ticketNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ticketNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for ticketNumber.
       */
      public com.google.protobuf.ByteString
          getTicketNumberBytes() {
        java.lang.Object ref = ticketNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ticketNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The ticketNumber to set.
       * @return This builder for chaining.
       */
      public Builder setTicketNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ticketNumber_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketNumber() {
        ticketNumber_ = getDefaultInstance().getTicketNumber();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
       * </pre>
       *
       * <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for ticketNumber to set.
       * @return This builder for chaining.
       */
      public Builder setTicketNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ticketNumber_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int ticketLeg_ ;
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @return The ticketLeg.
       */
      @java.lang.Override
      public int getTicketLeg() {
        return ticketLeg_;
      }
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @param value The ticketLeg to set.
       * @return This builder for chaining.
       */
      public Builder setTicketLeg(int value) {

        ticketLeg_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketLeg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ticketLeg_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object boardingPoint_ = "";
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return The boardingPoint.
       */
      public java.lang.String getBoardingPoint() {
        java.lang.Object ref = boardingPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return The bytes for boardingPoint.
       */
      public com.google.protobuf.ByteString
          getBoardingPointBytes() {
        java.lang.Object ref = boardingPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @param value The boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingPoint_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPoint() {
        boardingPoint_ = getDefaultInstance().getBoardingPoint();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @param value The bytes for boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingPoint_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassRecordRequestByTicketNumber)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassRecordRequestByTicketNumber)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassRecordRequestByTicketNumber>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassRecordRequestByTicketNumber>() {
      @java.lang.Override
      public BoardingPassRecordRequestByTicketNumber parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassRecordRequestByTicketNumber> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassRecordRequestByTicketNumber> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassRecordRequestByIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassRecordRequestByIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    java.lang.String getCarrierCode();
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    com.google.protobuf.ByteString
        getCarrierCodeBytes();

    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    java.lang.String getFlightNumber();
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    com.google.protobuf.ByteString
        getFlightNumberBytes();

    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     * @return Whether the departureDate field is set.
     */
    boolean hasDepartureDate();
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     * @return The departureDate.
     */
    com.passkit.grpc.CommonObjects.Date getDepartureDate();
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     */
    com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder();

    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The boardingPoint.
     */
    java.lang.String getBoardingPoint();
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for boardingPoint.
     */
    com.google.protobuf.ByteString
        getBoardingPointBytes();

    /**
     * <pre>
     * The check in sequence number.
     * </pre>
     *
     * <code>int32 sequenceNumber = 5;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();
  }
  /**
   * <pre>
   * Boarding passes are indexed by carrier code, flight number, departure date, boarding point and sequence number.  All values are required.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassRecordRequestByIndex}
   */
  public static final class BoardingPassRecordRequestByIndex extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassRecordRequestByIndex)
      BoardingPassRecordRequestByIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassRecordRequestByIndex.class.getName());
    }
    // Use BoardingPassRecordRequestByIndex.newBuilder() to construct.
    private BoardingPassRecordRequestByIndex(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassRecordRequestByIndex() {
      carrierCode_ = "";
      flightNumber_ = "";
      boardingPoint_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByIndex_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder.class);
    }

    private int bitField0_;
    public static final int CARRIERCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object carrierCode_ = "";
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The carrierCode.
     */
    @java.lang.Override
    public java.lang.String getCarrierCode() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carrierCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The two or three character airline code of the marketing carrier.
     * </pre>
     *
     * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for carrierCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCarrierCodeBytes() {
      java.lang.Object ref = carrierCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carrierCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLIGHTNUMBER_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object flightNumber_ = "";
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The flightNumber.
     */
    @java.lang.Override
    public java.lang.String getFlightNumber() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The flight number of the marketing character (excluding the carrier code).
     * </pre>
     *
     * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for flightNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlightNumberBytes() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPARTUREDATE_FIELD_NUMBER = 3;
    private com.passkit.grpc.CommonObjects.Date departureDate_;
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     * @return Whether the departureDate field is set.
     */
    @java.lang.Override
    public boolean hasDepartureDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     * @return The departureDate.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.Date getDepartureDate() {
      return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
    }
    /**
     * <pre>
     * The date of departure in local airport time.
     * </pre>
     *
     * <code>.io.Date departureDate = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder() {
      return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
    }

    public static final int BOARDINGPOINT_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingPoint_ = "";
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The boardingPoint.
     */
    @java.lang.Override
    public java.lang.String getBoardingPoint() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The bytes for boardingPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingPointBytes() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 5;
    private int sequenceNumber_ = 0;
    /**
     * <pre>
     * The check in sequence number.
     * </pre>
     *
     * <code>int32 sequenceNumber = 5;</code>
     * @return The sequenceNumber.
     */
    @java.lang.Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getDepartureDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, boardingPoint_);
      }
      if (sequenceNumber_ != 0) {
        output.writeInt32(5, sequenceNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(carrierCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, carrierCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(flightNumber_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, flightNumber_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDepartureDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, boardingPoint_);
      }
      if (sequenceNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sequenceNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) obj;

      if (!getCarrierCode()
          .equals(other.getCarrierCode())) return false;
      if (!getFlightNumber()
          .equals(other.getFlightNumber())) return false;
      if (hasDepartureDate() != other.hasDepartureDate()) return false;
      if (hasDepartureDate()) {
        if (!getDepartureDate()
            .equals(other.getDepartureDate())) return false;
      }
      if (!getBoardingPoint()
          .equals(other.getBoardingPoint())) return false;
      if (getSequenceNumber()
          != other.getSequenceNumber()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARRIERCODE_FIELD_NUMBER;
      hash = (53 * hash) + getCarrierCode().hashCode();
      hash = (37 * hash) + FLIGHTNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getFlightNumber().hashCode();
      if (hasDepartureDate()) {
        hash = (37 * hash) + DEPARTUREDATE_FIELD_NUMBER;
        hash = (53 * hash) + getDepartureDate().hashCode();
      }
      hash = (37 * hash) + BOARDINGPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingPoint().hashCode();
      hash = (37 * hash) + SEQUENCENUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNumber();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Boarding passes are indexed by carrier code, flight number, departure date, boarding point and sequence number.  All values are required.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassRecordRequestByIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassRecordRequestByIndex)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByIndex_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDepartureDateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        carrierCode_ = "";
        flightNumber_ = "";
        departureDate_ = null;
        if (departureDateBuilder_ != null) {
          departureDateBuilder_.dispose();
          departureDateBuilder_ = null;
        }
        boardingPoint_ = "";
        sequenceNumber_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequestByIndex_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.carrierCode_ = carrierCode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.flightNumber_ = flightNumber_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.departureDate_ = departureDateBuilder_ == null
              ? departureDate_
              : departureDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.boardingPoint_ = boardingPoint_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sequenceNumber_ = sequenceNumber_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance()) return this;
        if (!other.getCarrierCode().isEmpty()) {
          carrierCode_ = other.carrierCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFlightNumber().isEmpty()) {
          flightNumber_ = other.flightNumber_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasDepartureDate()) {
          mergeDepartureDate(other.getDepartureDate());
        }
        if (!other.getBoardingPoint().isEmpty()) {
          boardingPoint_ = other.boardingPoint_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.getSequenceNumber() != 0) {
          setSequenceNumber(other.getSequenceNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                carrierCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                flightNumber_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getDepartureDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                boardingPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                sequenceNumber_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object carrierCode_ = "";
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The carrierCode.
       */
      public java.lang.String getCarrierCode() {
        java.lang.Object ref = carrierCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          carrierCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for carrierCode.
       */
      public com.google.protobuf.ByteString
          getCarrierCodeBytes() {
        java.lang.Object ref = carrierCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          carrierCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCarrierCode() {
        carrierCode_ = getDefaultInstance().getCarrierCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The two or three character airline code of the marketing carrier.
       * </pre>
       *
       * <code>string carrierCode = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for carrierCode to set.
       * @return This builder for chaining.
       */
      public Builder setCarrierCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        carrierCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object flightNumber_ = "";
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The flightNumber.
       */
      public java.lang.String getFlightNumber() {
        java.lang.Object ref = flightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for flightNumber.
       */
      public com.google.protobuf.ByteString
          getFlightNumberBytes() {
        java.lang.Object ref = flightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumber(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightNumber() {
        flightNumber_ = getDefaultInstance().getFlightNumber();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flight number of the marketing character (excluding the carrier code).
       * </pre>
       *
       * <code>string flightNumber = 2 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        flightNumber_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.passkit.grpc.CommonObjects.Date departureDate_;
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> departureDateBuilder_;
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       * @return Whether the departureDate field is set.
       */
      public boolean hasDepartureDate() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       * @return The departureDate.
       */
      public com.passkit.grpc.CommonObjects.Date getDepartureDate() {
        if (departureDateBuilder_ == null) {
          return departureDate_ == null ? com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
        } else {
          return departureDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public Builder setDepartureDate(com.passkit.grpc.CommonObjects.Date value) {
        if (departureDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          departureDate_ = value;
        } else {
          departureDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public Builder setDepartureDate(
          com.passkit.grpc.CommonObjects.Date.Builder builderForValue) {
        if (departureDateBuilder_ == null) {
          departureDate_ = builderForValue.build();
        } else {
          departureDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public Builder mergeDepartureDate(com.passkit.grpc.CommonObjects.Date value) {
        if (departureDateBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            departureDate_ != null &&
            departureDate_ != com.passkit.grpc.CommonObjects.Date.getDefaultInstance()) {
            getDepartureDateBuilder().mergeFrom(value);
          } else {
            departureDate_ = value;
          }
        } else {
          departureDateBuilder_.mergeFrom(value);
        }
        if (departureDate_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public Builder clearDepartureDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        departureDate_ = null;
        if (departureDateBuilder_ != null) {
          departureDateBuilder_.dispose();
          departureDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public com.passkit.grpc.CommonObjects.Date.Builder getDepartureDateBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDepartureDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      public com.passkit.grpc.CommonObjects.DateOrBuilder getDepartureDateOrBuilder() {
        if (departureDateBuilder_ != null) {
          return departureDateBuilder_.getMessageOrBuilder();
        } else {
          return departureDate_ == null ?
              com.passkit.grpc.CommonObjects.Date.getDefaultInstance() : departureDate_;
        }
      }
      /**
       * <pre>
       * The date of departure in local airport time.
       * </pre>
       *
       * <code>.io.Date departureDate = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder> 
          getDepartureDateFieldBuilder() {
        if (departureDateBuilder_ == null) {
          departureDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.Date, com.passkit.grpc.CommonObjects.Date.Builder, com.passkit.grpc.CommonObjects.DateOrBuilder>(
                  getDepartureDate(),
                  getParentForChildren(),
                  isClean());
          departureDate_ = null;
        }
        return departureDateBuilder_;
      }

      private java.lang.Object boardingPoint_ = "";
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The boardingPoint.
       */
      public java.lang.String getBoardingPoint() {
        java.lang.Object ref = boardingPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The bytes for boardingPoint.
       */
      public com.google.protobuf.ByteString
          getBoardingPointBytes() {
        java.lang.Object ref = boardingPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingPoint_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPoint() {
        boardingPoint_ = getDefaultInstance().getBoardingPoint();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @param value The bytes for boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingPoint_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 5;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 5;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {

        sequenceNumber_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The check in sequence number.
       * </pre>
       *
       * <code>int32 sequenceNumber = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassRecordRequestByIndex)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassRecordRequestByIndex)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassRecordRequestByIndex>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassRecordRequestByIndex>() {
      @java.lang.Override
      public BoardingPassRecordRequestByIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassRecordRequestByIndex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassRecordRequestByIndex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return Whether the ticketNumber field is set.
     */
    boolean hasTicketNumber();
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return The ticketNumber.
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber();
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder();

    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return Whether the index field is set.
     */
    boolean hasIndex();
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return The index.
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex();
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder();

    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     * @return Whether the pnr field is set.
     */
    boolean hasPnr();
    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     * @return The pnr.
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getPnr();
    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder getPnrOrBuilder();

    /**
     * <code>.io.Id passId = 4;</code>
     * @return Whether the passId field is set.
     */
    boolean hasPassId();
    /**
     * <code>.io.Id passId = 4;</code>
     * @return The passId.
     */
    com.passkit.grpc.CommonObjects.Id getPassId();
    /**
     * <code>.io.Id passId = 4;</code>
     */
    com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder();

    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return A list containing the format.
     */
    java.util.List<com.passkit.grpc.CommonObjects.PassBundleFormat> getFormatList();
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return The count of format.
     */
    int getFormatCount();
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @param index The index of the element to return.
     * @return The format at the given index.
     */
    com.passkit.grpc.CommonObjects.PassBundleFormat getFormat(int index);
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return A list containing the enum numeric values on the wire for format.
     */
    java.util.List<java.lang.Integer>
    getFormatValueList();
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of format at the given index.
     */
    int getFormatValue(int index);

    com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Used to request a digital boarding pass by ticket number, index, PassKit ID or PNR.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassRequest}
   */
  public static final class BoardingPassRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassRequest)
      BoardingPassRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassRequest.class.getName());
    }
    // Use BoardingPassRequest.newBuilder() to construct.
    private BoardingPassRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassRequest() {
      format_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.Builder.class);
    }

    private int requestCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TICKETNUMBER(1),
      INDEX(2),
      PNR(3),
      PASSID(4),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 1: return TICKETNUMBER;
          case 2: return INDEX;
          case 3: return PNR;
          case 4: return PASSID;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int TICKETNUMBER_FIELD_NUMBER = 1;
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return Whether the ticketNumber field is set.
     */
    @java.lang.Override
    public boolean hasTicketNumber() {
      return requestCase_ == 1;
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return The ticketNumber.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber() {
      if (requestCase_ == 1) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder() {
      if (requestCase_ == 1) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return requestCase_ == 2;
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return The index.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex() {
      if (requestCase_ == 2) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder() {
      if (requestCase_ == 2) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
    }

    public static final int PNR_FIELD_NUMBER = 3;
    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     * @return Whether the pnr field is set.
     */
    @java.lang.Override
    public boolean hasPnr() {
      return requestCase_ == 3;
    }
    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     * @return The pnr.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getPnr() {
      if (requestCase_ == 3) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
    }
    /**
     * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder getPnrOrBuilder() {
      if (requestCase_ == 3) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
    }

    public static final int PASSID_FIELD_NUMBER = 4;
    /**
     * <code>.io.Id passId = 4;</code>
     * @return Whether the passId field is set.
     */
    @java.lang.Override
    public boolean hasPassId() {
      return requestCase_ == 4;
    }
    /**
     * <code>.io.Id passId = 4;</code>
     * @return The passId.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.Id getPassId() {
      if (requestCase_ == 4) {
         return (com.passkit.grpc.CommonObjects.Id) request_;
      }
      return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
    }
    /**
     * <code>.io.Id passId = 4;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder() {
      if (requestCase_ == 4) {
         return (com.passkit.grpc.CommonObjects.Id) request_;
      }
      return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
    }

    public static final int FORMAT_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList format_;
    private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
        com.passkit.grpc.CommonObjects.PassBundleFormat> format_converter_ =
            new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                com.passkit.grpc.CommonObjects.PassBundleFormat>() {
              public com.passkit.grpc.CommonObjects.PassBundleFormat convert(int from) {
                com.passkit.grpc.CommonObjects.PassBundleFormat result = com.passkit.grpc.CommonObjects.PassBundleFormat.forNumber(from);
                return result == null ? com.passkit.grpc.CommonObjects.PassBundleFormat.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return A list containing the format.
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.CommonObjects.PassBundleFormat> getFormatList() {
      return new com.google.protobuf.Internal.IntListAdapter<
          com.passkit.grpc.CommonObjects.PassBundleFormat>(format_, format_converter_);
    }
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return The count of format.
     */
    @java.lang.Override
    public int getFormatCount() {
      return format_.size();
    }
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @param index The index of the element to return.
     * @return The format at the given index.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.PassBundleFormat getFormat(int index) {
      return format_converter_.convert(format_.getInt(index));
    }
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @return A list containing the enum numeric values on the wire for format.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getFormatValueList() {
      return format_;
    }
    /**
     * <pre>
     * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
     * </pre>
     *
     * <code>repeated .io.PassBundleFormat format = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of format at the given index.
     */
    @java.lang.Override
    public int getFormatValue(int index) {
      return format_.getInt(index);
    }
    private int formatMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (requestCase_ == 1) {
        output.writeMessage(1, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_);
      }
      if (requestCase_ == 4) {
        output.writeMessage(4, (com.passkit.grpc.CommonObjects.Id) request_);
      }
      if (getFormatList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(formatMemoizedSerializedSize);
      }
      for (int i = 0; i < format_.size(); i++) {
        output.writeEnumNoTag(format_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_);
      }
      if (requestCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.passkit.grpc.CommonObjects.Id) request_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < format_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(format_.getInt(i));
        }
        size += dataSize;
        if (!getFormatList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }formatMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest) obj;

      if (!format_.equals(other.format_)) return false;
      if (!getRequestCase().equals(other.getRequestCase())) return false;
      switch (requestCase_) {
        case 1:
          if (!getTicketNumber()
              .equals(other.getTicketNumber())) return false;
          break;
        case 2:
          if (!getIndex()
              .equals(other.getIndex())) return false;
          break;
        case 3:
          if (!getPnr()
              .equals(other.getPnr())) return false;
          break;
        case 4:
          if (!getPassId()
              .equals(other.getPassId())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFormatCount() > 0) {
        hash = (37 * hash) + FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + format_.hashCode();
      }
      switch (requestCase_) {
        case 1:
          hash = (37 * hash) + TICKETNUMBER_FIELD_NUMBER;
          hash = (53 * hash) + getTicketNumber().hashCode();
          break;
        case 2:
          hash = (37 * hash) + INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getIndex().hashCode();
          break;
        case 3:
          hash = (37 * hash) + PNR_FIELD_NUMBER;
          hash = (53 * hash) + getPnr().hashCode();
          break;
        case 4:
          hash = (37 * hash) + PASSID_FIELD_NUMBER;
          hash = (53 * hash) + getPassId().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to request a digital boarding pass by ticket number, index, PassKit ID or PNR.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassRequest)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (ticketNumberBuilder_ != null) {
          ticketNumberBuilder_.clear();
        }
        if (indexBuilder_ != null) {
          indexBuilder_.clear();
        }
        if (pnrBuilder_ != null) {
          pnrBuilder_.clear();
        }
        if (passIdBuilder_ != null) {
          passIdBuilder_.clear();
        }
        format_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest result) {
        if (((bitField0_ & 0x00000010) != 0)) {
          format_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.format_ = format_;
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest result) {
        result.requestCase_ = requestCase_;
        result.request_ = this.request_;
        if (requestCase_ == 1 &&
            ticketNumberBuilder_ != null) {
          result.request_ = ticketNumberBuilder_.build();
        }
        if (requestCase_ == 2 &&
            indexBuilder_ != null) {
          result.request_ = indexBuilder_.build();
        }
        if (requestCase_ == 3 &&
            pnrBuilder_ != null) {
          result.request_ = pnrBuilder_.build();
        }
        if (requestCase_ == 4 &&
            passIdBuilder_ != null) {
          result.request_ = passIdBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest.getDefaultInstance()) return this;
        if (!other.format_.isEmpty()) {
          if (format_.isEmpty()) {
            format_ = other.format_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFormatIsMutable();
            format_.addAll(other.format_);
          }
          onChanged();
        }
        switch (other.getRequestCase()) {
          case TICKETNUMBER: {
            mergeTicketNumber(other.getTicketNumber());
            break;
          }
          case INDEX: {
            mergeIndex(other.getIndex());
            break;
          }
          case PNR: {
            mergePnr(other.getPnr());
            break;
          }
          case PASSID: {
            mergePassId(other.getPassId());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTicketNumberFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getIndexFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPnrFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getPassIdFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 4;
                break;
              } // case 34
              case 40: {
                int tmpRaw = input.readEnum();
                ensureFormatIsMutable();
                format_.addInt(tmpRaw);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureFormatIsMutable();
                  format_.addInt(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder> ticketNumberBuilder_;
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       * @return Whether the ticketNumber field is set.
       */
      @java.lang.Override
      public boolean hasTicketNumber() {
        return requestCase_ == 1;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       * @return The ticketNumber.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber() {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        } else {
          if (requestCase_ == 1) {
            return ticketNumberBuilder_.getMessage();
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder setTicketNumber(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber value) {
        if (ticketNumberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          ticketNumberBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder setTicketNumber(
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder builderForValue) {
        if (ticketNumberBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          ticketNumberBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder mergeTicketNumber(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber value) {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1 &&
              request_ != com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance()) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.newBuilder((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 1) {
            ticketNumberBuilder_.mergeFrom(value);
          } else {
            ticketNumberBuilder_.setMessage(value);
          }
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder clearTicketNumber() {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
          }
          ticketNumberBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder getTicketNumberBuilder() {
        return getTicketNumberFieldBuilder().getBuilder();
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder() {
        if ((requestCase_ == 1) && (ticketNumberBuilder_ != null)) {
          return ticketNumberBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 1) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder> 
          getTicketNumberFieldBuilder() {
        if (ticketNumberBuilder_ == null) {
          if (!(requestCase_ == 1)) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
          }
          ticketNumberBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder>(
                  (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 1;
        onChanged();
        return ticketNumberBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder> indexBuilder_;
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       * @return Whether the index field is set.
       */
      @java.lang.Override
      public boolean hasIndex() {
        return requestCase_ == 2;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       * @return The index.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex() {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return indexBuilder_.getMessage();
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder setIndex(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex value) {
        if (indexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          indexBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder setIndex(
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder builderForValue) {
        if (indexBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          indexBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder mergeIndex(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex value) {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance()) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.newBuilder((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            indexBuilder_.mergeFrom(value);
          } else {
            indexBuilder_.setMessage(value);
          }
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder clearIndex() {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          indexBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder getIndexBuilder() {
        return getIndexFieldBuilder().getBuilder();
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder() {
        if ((requestCase_ == 2) && (indexBuilder_ != null)) {
          return indexBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder> 
          getIndexFieldBuilder() {
        if (indexBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
          }
          indexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder>(
                  (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();
        return indexBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder> pnrBuilder_;
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       * @return Whether the pnr field is set.
       */
      @java.lang.Override
      public boolean hasPnr() {
        return requestCase_ == 3;
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       * @return The pnr.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getPnr() {
        if (pnrBuilder_ == null) {
          if (requestCase_ == 3) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return pnrBuilder_.getMessage();
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      public Builder setPnr(com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest value) {
        if (pnrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          pnrBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      public Builder setPnr(
          com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder builderForValue) {
        if (pnrBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          pnrBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      public Builder mergePnr(com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest value) {
        if (pnrBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance()) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.newBuilder((com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            pnrBuilder_.mergeFrom(value);
          } else {
            pnrBuilder_.setMessage(value);
          }
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      public Builder clearPnr() {
        if (pnrBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          pnrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder getPnrBuilder() {
        return getPnrFieldBuilder().getBuilder();
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder getPnrOrBuilder() {
        if ((requestCase_ == 3) && (pnrBuilder_ != null)) {
          return pnrBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassesForBookingRequest pnr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder> 
          getPnrFieldBuilder() {
        if (pnrBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
          }
          pnrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder>(
                  (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();
        return pnrBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder> passIdBuilder_;
      /**
       * <code>.io.Id passId = 4;</code>
       * @return Whether the passId field is set.
       */
      @java.lang.Override
      public boolean hasPassId() {
        return requestCase_ == 4;
      }
      /**
       * <code>.io.Id passId = 4;</code>
       * @return The passId.
       */
      @java.lang.Override
      public com.passkit.grpc.CommonObjects.Id getPassId() {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 4) {
            return (com.passkit.grpc.CommonObjects.Id) request_;
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        } else {
          if (requestCase_ == 4) {
            return passIdBuilder_.getMessage();
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        }
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      public Builder setPassId(com.passkit.grpc.CommonObjects.Id value) {
        if (passIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          passIdBuilder_.setMessage(value);
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      public Builder setPassId(
          com.passkit.grpc.CommonObjects.Id.Builder builderForValue) {
        if (passIdBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          passIdBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      public Builder mergePassId(com.passkit.grpc.CommonObjects.Id value) {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 4 &&
              request_ != com.passkit.grpc.CommonObjects.Id.getDefaultInstance()) {
            request_ = com.passkit.grpc.CommonObjects.Id.newBuilder((com.passkit.grpc.CommonObjects.Id) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 4) {
            passIdBuilder_.mergeFrom(value);
          } else {
            passIdBuilder_.setMessage(value);
          }
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      public Builder clearPassId() {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
          }
          passIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      public com.passkit.grpc.CommonObjects.Id.Builder getPassIdBuilder() {
        return getPassIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder() {
        if ((requestCase_ == 4) && (passIdBuilder_ != null)) {
          return passIdBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 4) {
            return (com.passkit.grpc.CommonObjects.Id) request_;
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        }
      }
      /**
       * <code>.io.Id passId = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder> 
          getPassIdFieldBuilder() {
        if (passIdBuilder_ == null) {
          if (!(requestCase_ == 4)) {
            request_ = com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
          }
          passIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder>(
                  (com.passkit.grpc.CommonObjects.Id) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 4;
        onChanged();
        return passIdBuilder_;
      }

      private com.google.protobuf.Internal.IntList format_ =
        emptyIntList();
      private void ensureFormatIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          format_ = makeMutableCopy(format_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @return A list containing the format.
       */
      public java.util.List<com.passkit.grpc.CommonObjects.PassBundleFormat> getFormatList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            com.passkit.grpc.CommonObjects.PassBundleFormat>(format_, format_converter_);
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @return The count of format.
       */
      public int getFormatCount() {
        return format_.size();
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param index The index of the element to return.
       * @return The format at the given index.
       */
      public com.passkit.grpc.CommonObjects.PassBundleFormat getFormat(int index) {
        return format_converter_.convert(format_.getInt(index));
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param index The index to set the value at.
       * @param value The format to set.
       * @return This builder for chaining.
       */
      public Builder setFormat(
          int index, com.passkit.grpc.CommonObjects.PassBundleFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFormatIsMutable();
        format_.setInt(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param value The format to add.
       * @return This builder for chaining.
       */
      public Builder addFormat(com.passkit.grpc.CommonObjects.PassBundleFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFormatIsMutable();
        format_.addInt(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param values The format to add.
       * @return This builder for chaining.
       */
      public Builder addAllFormat(
          java.lang.Iterable<? extends com.passkit.grpc.CommonObjects.PassBundleFormat> values) {
        ensureFormatIsMutable();
        for (com.passkit.grpc.CommonObjects.PassBundleFormat value : values) {
          format_.addInt(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormat() {
        format_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @return A list containing the enum numeric values on the wire for format.
       */
      public java.util.List<java.lang.Integer>
      getFormatValueList() {
        return java.util.Collections.unmodifiableList(format_);
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of format at the given index.
       */
      public int getFormatValue(int index) {
        return format_.getInt(index);
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for format to set.
       * @return This builder for chaining.
       */
      public Builder setFormatValue(
          int index, int value) {
        ensureFormatIsMutable();
        format_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param value The enum numeric value on the wire for format to add.
       * @return This builder for chaining.
       */
      public Builder addFormatValue(int value) {
        ensureFormatIsMutable();
        format_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. If omitted, return the URL to the web pass landing page. Not used when getting or deleting the underlying boarding pass record.
       * </pre>
       *
       * <code>repeated .io.PassBundleFormat format = 5;</code>
       * @param values The enum numeric values on the wire for format to add.
       * @return This builder for chaining.
       */
      public Builder addAllFormatValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureFormatIsMutable();
        for (int value : values) {
          format_.addInt(value);
        }
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassRequest)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassRequest)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassRequest>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassRequest>() {
      @java.lang.Override
      public BoardingPassRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassRecordRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassRecordRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return Whether the ticketNumber field is set.
     */
    boolean hasTicketNumber();
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return The ticketNumber.
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber();
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder();

    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return Whether the index field is set.
     */
    boolean hasIndex();
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return The index.
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex();
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     */
    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder();

    /**
     * <code>.io.Id passId = 3;</code>
     * @return Whether the passId field is set.
     */
    boolean hasPassId();
    /**
     * <code>.io.Id passId = 3;</code>
     * @return The passId.
     */
    com.passkit.grpc.CommonObjects.Id getPassId();
    /**
     * <code>.io.Id passId = 3;</code>
     */
    com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder();

    com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Used to request a digital boarding pass record by ticket number, index or pass id.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassRecordRequest}
   */
  public static final class BoardingPassRecordRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassRecordRequest)
      BoardingPassRecordRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassRecordRequest.class.getName());
    }
    // Use BoardingPassRecordRequest.newBuilder() to construct.
    private BoardingPassRecordRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassRecordRequest() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.Builder.class);
    }

    private int requestCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TICKETNUMBER(1),
      INDEX(2),
      PASSID(3),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 1: return TICKETNUMBER;
          case 2: return INDEX;
          case 3: return PASSID;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int TICKETNUMBER_FIELD_NUMBER = 1;
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return Whether the ticketNumber field is set.
     */
    @java.lang.Override
    public boolean hasTicketNumber() {
      return requestCase_ == 1;
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     * @return The ticketNumber.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber() {
      if (requestCase_ == 1) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder() {
      if (requestCase_ == 1) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return requestCase_ == 2;
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     * @return The index.
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex() {
      if (requestCase_ == 2) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
    }
    /**
     * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder() {
      if (requestCase_ == 2) {
         return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
      }
      return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
    }

    public static final int PASSID_FIELD_NUMBER = 3;
    /**
     * <code>.io.Id passId = 3;</code>
     * @return Whether the passId field is set.
     */
    @java.lang.Override
    public boolean hasPassId() {
      return requestCase_ == 3;
    }
    /**
     * <code>.io.Id passId = 3;</code>
     * @return The passId.
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.Id getPassId() {
      if (requestCase_ == 3) {
         return (com.passkit.grpc.CommonObjects.Id) request_;
      }
      return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
    }
    /**
     * <code>.io.Id passId = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder() {
      if (requestCase_ == 3) {
         return (com.passkit.grpc.CommonObjects.Id) request_;
      }
      return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestCase_ == 1) {
        output.writeMessage(1, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (com.passkit.grpc.CommonObjects.Id) request_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.passkit.grpc.CommonObjects.Id) request_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest) obj;

      if (!getRequestCase().equals(other.getRequestCase())) return false;
      switch (requestCase_) {
        case 1:
          if (!getTicketNumber()
              .equals(other.getTicketNumber())) return false;
          break;
        case 2:
          if (!getIndex()
              .equals(other.getIndex())) return false;
          break;
        case 3:
          if (!getPassId()
              .equals(other.getPassId())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (requestCase_) {
        case 1:
          hash = (37 * hash) + TICKETNUMBER_FIELD_NUMBER;
          hash = (53 * hash) + getTicketNumber().hashCode();
          break;
        case 2:
          hash = (37 * hash) + INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getIndex().hashCode();
          break;
        case 3:
          hash = (37 * hash) + PASSID_FIELD_NUMBER;
          hash = (53 * hash) + getPassId().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to request a digital boarding pass record by ticket number, index or pass id.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassRecordRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassRecordRequest)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (ticketNumberBuilder_ != null) {
          ticketNumberBuilder_.clear();
        }
        if (indexBuilder_ != null) {
          indexBuilder_.clear();
        }
        if (passIdBuilder_ != null) {
          passIdBuilder_.clear();
        }
        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassRecordRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest result) {
        result.requestCase_ = requestCase_;
        result.request_ = this.request_;
        if (requestCase_ == 1 &&
            ticketNumberBuilder_ != null) {
          result.request_ = ticketNumberBuilder_.build();
        }
        if (requestCase_ == 2 &&
            indexBuilder_ != null) {
          result.request_ = indexBuilder_.build();
        }
        if (requestCase_ == 3 &&
            passIdBuilder_ != null) {
          result.request_ = passIdBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest.getDefaultInstance()) return this;
        switch (other.getRequestCase()) {
          case TICKETNUMBER: {
            mergeTicketNumber(other.getTicketNumber());
            break;
          }
          case INDEX: {
            mergeIndex(other.getIndex());
            break;
          }
          case PASSID: {
            mergePassId(other.getPassId());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTicketNumberFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getIndexFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPassIdFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 3;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder> ticketNumberBuilder_;
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       * @return Whether the ticketNumber field is set.
       */
      @java.lang.Override
      public boolean hasTicketNumber() {
        return requestCase_ == 1;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       * @return The ticketNumber.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber getTicketNumber() {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        } else {
          if (requestCase_ == 1) {
            return ticketNumberBuilder_.getMessage();
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder setTicketNumber(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber value) {
        if (ticketNumberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          ticketNumberBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder setTicketNumber(
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder builderForValue) {
        if (ticketNumberBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          ticketNumberBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder mergeTicketNumber(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber value) {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1 &&
              request_ != com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance()) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.newBuilder((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 1) {
            ticketNumberBuilder_.mergeFrom(value);
          } else {
            ticketNumberBuilder_.setMessage(value);
          }
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public Builder clearTicketNumber() {
        if (ticketNumberBuilder_ == null) {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
          }
          ticketNumberBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder getTicketNumberBuilder() {
        return getTicketNumberFieldBuilder().getBuilder();
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder getTicketNumberOrBuilder() {
        if ((requestCase_ == 1) && (ticketNumberBuilder_ != null)) {
          return ticketNumberBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 1) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByTicketNumber ticketNumber = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder> 
          getTicketNumberFieldBuilder() {
        if (ticketNumberBuilder_ == null) {
          if (!(requestCase_ == 1)) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.getDefaultInstance();
          }
          ticketNumberBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumberOrBuilder>(
                  (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByTicketNumber) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 1;
        onChanged();
        return ticketNumberBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder> indexBuilder_;
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       * @return Whether the index field is set.
       */
      @java.lang.Override
      public boolean hasIndex() {
        return requestCase_ == 2;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       * @return The index.
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex getIndex() {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return indexBuilder_.getMessage();
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder setIndex(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex value) {
        if (indexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          indexBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder setIndex(
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder builderForValue) {
        if (indexBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          indexBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder mergeIndex(com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex value) {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance()) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.newBuilder((com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            indexBuilder_.mergeFrom(value);
          } else {
            indexBuilder_.setMessage(value);
          }
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public Builder clearIndex() {
        if (indexBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          indexBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder getIndexBuilder() {
        return getIndexFieldBuilder().getBuilder();
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder getIndexOrBuilder() {
        if ((requestCase_ == 2) && (indexBuilder_ != null)) {
          return indexBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_;
          }
          return com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
        }
      }
      /**
       * <code>.flights.BoardingPassRecordRequestByIndex index = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder> 
          getIndexFieldBuilder() {
        if (indexBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.getDefaultInstance();
          }
          indexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex.Builder, com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndexOrBuilder>(
                  (com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequestByIndex) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();
        return indexBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder> passIdBuilder_;
      /**
       * <code>.io.Id passId = 3;</code>
       * @return Whether the passId field is set.
       */
      @java.lang.Override
      public boolean hasPassId() {
        return requestCase_ == 3;
      }
      /**
       * <code>.io.Id passId = 3;</code>
       * @return The passId.
       */
      @java.lang.Override
      public com.passkit.grpc.CommonObjects.Id getPassId() {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 3) {
            return (com.passkit.grpc.CommonObjects.Id) request_;
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return passIdBuilder_.getMessage();
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        }
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      public Builder setPassId(com.passkit.grpc.CommonObjects.Id value) {
        if (passIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          passIdBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      public Builder setPassId(
          com.passkit.grpc.CommonObjects.Id.Builder builderForValue) {
        if (passIdBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          passIdBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      public Builder mergePassId(com.passkit.grpc.CommonObjects.Id value) {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != com.passkit.grpc.CommonObjects.Id.getDefaultInstance()) {
            request_ = com.passkit.grpc.CommonObjects.Id.newBuilder((com.passkit.grpc.CommonObjects.Id) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            passIdBuilder_.mergeFrom(value);
          } else {
            passIdBuilder_.setMessage(value);
          }
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      public Builder clearPassId() {
        if (passIdBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          passIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      public com.passkit.grpc.CommonObjects.Id.Builder getPassIdBuilder() {
        return getPassIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      @java.lang.Override
      public com.passkit.grpc.CommonObjects.IdOrBuilder getPassIdOrBuilder() {
        if ((requestCase_ == 3) && (passIdBuilder_ != null)) {
          return passIdBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (com.passkit.grpc.CommonObjects.Id) request_;
          }
          return com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
        }
      }
      /**
       * <code>.io.Id passId = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder> 
          getPassIdFieldBuilder() {
        if (passIdBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = com.passkit.grpc.CommonObjects.Id.getDefaultInstance();
          }
          passIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.passkit.grpc.CommonObjects.Id, com.passkit.grpc.CommonObjects.Id.Builder, com.passkit.grpc.CommonObjects.IdOrBuilder>(
                  (com.passkit.grpc.CommonObjects.Id) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();
        return passIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassRecordRequest)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassRecordRequest)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassRecordRequest>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassRecordRequest>() {
      @java.lang.Override
      public BoardingPassRecordRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassRecordRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassRecordRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassRecordRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassesForBookingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassesForBookingRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The master PNR for the booking.
     * </pre>
     *
     * <code>string pnr = 1;</code>
     * @return The pnr.
     */
    java.lang.String getPnr();
    /**
     * <pre>
     * The master PNR for the booking.
     * </pre>
     *
     * <code>string pnr = 1;</code>
     * @return The bytes for pnr.
     */
    com.google.protobuf.ByteString
        getPnrBytes();

    /**
     * <pre>
     * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     * </pre>
     *
     * <code>int32 ticketLeg = 2;</code>
     * @return The ticketLeg.
     */
    int getTicketLeg();

    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The boardingPoint.
     */
    java.lang.String getBoardingPoint();
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The bytes for boardingPoint.
     */
    com.google.protobuf.ByteString
        getBoardingPointBytes();
  }
  /**
   * <pre>
   * Used to request digital boarding pass(es) by booking number. Either a journey leg or boarding point is required.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassesForBookingRequest}
   */
  public static final class BoardingPassesForBookingRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassesForBookingRequest)
      BoardingPassesForBookingRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassesForBookingRequest.class.getName());
    }
    // Use BoardingPassesForBookingRequest.newBuilder() to construct.
    private BoardingPassesForBookingRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassesForBookingRequest() {
      pnr_ = "";
      boardingPoint_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesForBookingRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesForBookingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder.class);
    }

    public static final int PNR_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object pnr_ = "";
    /**
     * <pre>
     * The master PNR for the booking.
     * </pre>
     *
     * <code>string pnr = 1;</code>
     * @return The pnr.
     */
    @java.lang.Override
    public java.lang.String getPnr() {
      java.lang.Object ref = pnr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pnr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The master PNR for the booking.
     * </pre>
     *
     * <code>string pnr = 1;</code>
     * @return The bytes for pnr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPnrBytes() {
      java.lang.Object ref = pnr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pnr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKETLEG_FIELD_NUMBER = 2;
    private int ticketLeg_ = 0;
    /**
     * <pre>
     * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     * </pre>
     *
     * <code>int32 ticketLeg = 2;</code>
     * @return The ticketLeg.
     */
    @java.lang.Override
    public int getTicketLeg() {
      return ticketLeg_;
    }

    public static final int BOARDINGPOINT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object boardingPoint_ = "";
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The boardingPoint.
     */
    @java.lang.Override
    public java.lang.String getBoardingPoint() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardingPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * </pre>
     *
     * <code>string boardingPoint = 3;</code>
     * @return The bytes for boardingPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardingPointBytes() {
      java.lang.Object ref = boardingPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardingPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pnr_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, pnr_);
      }
      if (ticketLeg_ != 0) {
        output.writeInt32(2, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, boardingPoint_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pnr_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, pnr_);
      }
      if (ticketLeg_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ticketLeg_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(boardingPoint_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, boardingPoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) obj;

      if (!getPnr()
          .equals(other.getPnr())) return false;
      if (getTicketLeg()
          != other.getTicketLeg()) return false;
      if (!getBoardingPoint()
          .equals(other.getBoardingPoint())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PNR_FIELD_NUMBER;
      hash = (53 * hash) + getPnr().hashCode();
      hash = (37 * hash) + TICKETLEG_FIELD_NUMBER;
      hash = (53 * hash) + getTicketLeg();
      hash = (37 * hash) + BOARDINGPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardingPoint().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to request digital boarding pass(es) by booking number. Either a journey leg or boarding point is required.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassesForBookingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassesForBookingRequest)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesForBookingRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesForBookingRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pnr_ = "";
        ticketLeg_ = 0;
        boardingPoint_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesForBookingRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pnr_ = pnr_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ticketLeg_ = ticketLeg_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.boardingPoint_ = boardingPoint_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest.getDefaultInstance()) return this;
        if (!other.getPnr().isEmpty()) {
          pnr_ = other.pnr_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getTicketLeg() != 0) {
          setTicketLeg(other.getTicketLeg());
        }
        if (!other.getBoardingPoint().isEmpty()) {
          boardingPoint_ = other.boardingPoint_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                pnr_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                ticketLeg_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                boardingPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object pnr_ = "";
      /**
       * <pre>
       * The master PNR for the booking.
       * </pre>
       *
       * <code>string pnr = 1;</code>
       * @return The pnr.
       */
      public java.lang.String getPnr() {
        java.lang.Object ref = pnr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pnr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The master PNR for the booking.
       * </pre>
       *
       * <code>string pnr = 1;</code>
       * @return The bytes for pnr.
       */
      public com.google.protobuf.ByteString
          getPnrBytes() {
        java.lang.Object ref = pnr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pnr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The master PNR for the booking.
       * </pre>
       *
       * <code>string pnr = 1;</code>
       * @param value The pnr to set.
       * @return This builder for chaining.
       */
      public Builder setPnr(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        pnr_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The master PNR for the booking.
       * </pre>
       *
       * <code>string pnr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPnr() {
        pnr_ = getDefaultInstance().getPnr();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The master PNR for the booking.
       * </pre>
       *
       * <code>string pnr = 1;</code>
       * @param value The bytes for pnr to set.
       * @return This builder for chaining.
       */
      public Builder setPnrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        pnr_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int ticketLeg_ ;
      /**
       * <pre>
       * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @return The ticketLeg.
       */
      @java.lang.Override
      public int getTicketLeg() {
        return ticketLeg_;
      }
      /**
       * <pre>
       * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @param value The ticketLeg to set.
       * @return This builder for chaining.
       */
      public Builder setTicketLeg(int value) {

        ticketLeg_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
       * </pre>
       *
       * <code>int32 ticketLeg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketLeg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ticketLeg_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object boardingPoint_ = "";
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return The boardingPoint.
       */
      public java.lang.String getBoardingPoint() {
        java.lang.Object ref = boardingPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardingPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return The bytes for boardingPoint.
       */
      public com.google.protobuf.ByteString
          getBoardingPointBytes() {
        java.lang.Object ref = boardingPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardingPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @param value The boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        boardingPoint_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardingPoint() {
        boardingPoint_ = getDefaultInstance().getBoardingPoint();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
       * </pre>
       *
       * <code>string boardingPoint = 3;</code>
       * @param value The bytes for boardingPoint to set.
       * @return This builder for chaining.
       */
      public Builder setBoardingPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        boardingPoint_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassesForBookingRequest)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassesForBookingRequest)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassesForBookingRequest>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassesForBookingRequest>() {
      @java.lang.Override
      public BoardingPassesForBookingRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassesForBookingRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassesForBookingRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassesForBookingRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoardingPassesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flights.BoardingPassesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    java.util.List<com.passkit.grpc.CommonObjects.PassBundle> 
        getBoardingPassesList();
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    com.passkit.grpc.CommonObjects.PassBundle getBoardingPasses(int index);
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    int getBoardingPassesCount();
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    java.util.List<? extends com.passkit.grpc.CommonObjects.PassBundleOrBuilder> 
        getBoardingPassesOrBuilderList();
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    com.passkit.grpc.CommonObjects.PassBundleOrBuilder getBoardingPassesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Contains an array of digital boarding passes.
   * </pre>
   *
   * Protobuf type {@code flights.BoardingPassesResponse}
   */
  public static final class BoardingPassesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:flights.BoardingPassesResponse)
      BoardingPassesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 0,
        /* suffix= */ "",
        BoardingPassesResponse.class.getName());
    }
    // Use BoardingPassesResponse.newBuilder() to construct.
    private BoardingPassesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoardingPassesResponse() {
      boardingPasses_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.Builder.class);
    }

    public static final int BOARDINGPASSES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.passkit.grpc.CommonObjects.PassBundle> boardingPasses_;
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.passkit.grpc.CommonObjects.PassBundle> getBoardingPassesList() {
      return boardingPasses_;
    }
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.passkit.grpc.CommonObjects.PassBundleOrBuilder> 
        getBoardingPassesOrBuilderList() {
      return boardingPasses_;
    }
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    @java.lang.Override
    public int getBoardingPassesCount() {
      return boardingPasses_.size();
    }
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.PassBundle getBoardingPasses(int index) {
      return boardingPasses_.get(index);
    }
    /**
     * <pre>
     * An array of boarding passes found relating to the PNR.
     * </pre>
     *
     * <code>repeated .io.PassBundle boardingPasses = 1;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.CommonObjects.PassBundleOrBuilder getBoardingPassesOrBuilder(
        int index) {
      return boardingPasses_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < boardingPasses_.size(); i++) {
        output.writeMessage(1, boardingPasses_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < boardingPasses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, boardingPasses_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse other = (com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse) obj;

      if (!getBoardingPassesList()
          .equals(other.getBoardingPassesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBoardingPassesCount() > 0) {
        hash = (37 * hash) + BOARDINGPASSES_FIELD_NUMBER;
        hash = (53 * hash) + getBoardingPassesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains an array of digital boarding passes.
     * </pre>
     *
     * Protobuf type {@code flights.BoardingPassesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flights.BoardingPassesResponse)
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.class, com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.Builder.class);
      }

      // Construct using com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (boardingPassesBuilder_ == null) {
          boardingPasses_ = java.util.Collections.emptyList();
        } else {
          boardingPasses_ = null;
          boardingPassesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Flights.BoardingPass.internal_static_flights_BoardingPassesResponse_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse getDefaultInstanceForType() {
        return com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse build() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse buildPartial() {
        com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse result = new com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse result) {
        if (boardingPassesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            boardingPasses_ = java.util.Collections.unmodifiableList(boardingPasses_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.boardingPasses_ = boardingPasses_;
        } else {
          result.boardingPasses_ = boardingPassesBuilder_.build();
        }
      }

      private void buildPartial0(com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse) {
          return mergeFrom((com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse other) {
        if (other == com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse.getDefaultInstance()) return this;
        if (boardingPassesBuilder_ == null) {
          if (!other.boardingPasses_.isEmpty()) {
            if (boardingPasses_.isEmpty()) {
              boardingPasses_ = other.boardingPasses_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBoardingPassesIsMutable();
              boardingPasses_.addAll(other.boardingPasses_);
            }
            onChanged();
          }
        } else {
          if (!other.boardingPasses_.isEmpty()) {
            if (boardingPassesBuilder_.isEmpty()) {
              boardingPassesBuilder_.dispose();
              boardingPassesBuilder_ = null;
              boardingPasses_ = other.boardingPasses_;
              bitField0_ = (bitField0_ & ~0x00000001);
              boardingPassesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoardingPassesFieldBuilder() : null;
            } else {
              boardingPassesBuilder_.addAllMessages(other.boardingPasses_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.passkit.grpc.CommonObjects.PassBundle m =
                    input.readMessage(
                        com.passkit.grpc.CommonObjects.PassBundle.parser(),
                        extensionRegistry);
                if (boardingPassesBuilder_ == null) {
                  ensureBoardingPassesIsMutable();
                  boardingPasses_.add(m);
                } else {
                  boardingPassesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.passkit.grpc.CommonObjects.PassBundle> boardingPasses_ =
        java.util.Collections.emptyList();
      private void ensureBoardingPassesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          boardingPasses_ = new java.util.ArrayList<com.passkit.grpc.CommonObjects.PassBundle>(boardingPasses_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.CommonObjects.PassBundle, com.passkit.grpc.CommonObjects.PassBundle.Builder, com.passkit.grpc.CommonObjects.PassBundleOrBuilder> boardingPassesBuilder_;

      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public java.util.List<com.passkit.grpc.CommonObjects.PassBundle> getBoardingPassesList() {
        if (boardingPassesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boardingPasses_);
        } else {
          return boardingPassesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public int getBoardingPassesCount() {
        if (boardingPassesBuilder_ == null) {
          return boardingPasses_.size();
        } else {
          return boardingPassesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public com.passkit.grpc.CommonObjects.PassBundle getBoardingPasses(int index) {
        if (boardingPassesBuilder_ == null) {
          return boardingPasses_.get(index);
        } else {
          return boardingPassesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder setBoardingPasses(
          int index, com.passkit.grpc.CommonObjects.PassBundle value) {
        if (boardingPassesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardingPassesIsMutable();
          boardingPasses_.set(index, value);
          onChanged();
        } else {
          boardingPassesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder setBoardingPasses(
          int index, com.passkit.grpc.CommonObjects.PassBundle.Builder builderForValue) {
        if (boardingPassesBuilder_ == null) {
          ensureBoardingPassesIsMutable();
          boardingPasses_.set(index, builderForValue.build());
          onChanged();
        } else {
          boardingPassesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder addBoardingPasses(com.passkit.grpc.CommonObjects.PassBundle value) {
        if (boardingPassesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardingPassesIsMutable();
          boardingPasses_.add(value);
          onChanged();
        } else {
          boardingPassesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder addBoardingPasses(
          int index, com.passkit.grpc.CommonObjects.PassBundle value) {
        if (boardingPassesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardingPassesIsMutable();
          boardingPasses_.add(index, value);
          onChanged();
        } else {
          boardingPassesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder addBoardingPasses(
          com.passkit.grpc.CommonObjects.PassBundle.Builder builderForValue) {
        if (boardingPassesBuilder_ == null) {
          ensureBoardingPassesIsMutable();
          boardingPasses_.add(builderForValue.build());
          onChanged();
        } else {
          boardingPassesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder addBoardingPasses(
          int index, com.passkit.grpc.CommonObjects.PassBundle.Builder builderForValue) {
        if (boardingPassesBuilder_ == null) {
          ensureBoardingPassesIsMutable();
          boardingPasses_.add(index, builderForValue.build());
          onChanged();
        } else {
          boardingPassesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder addAllBoardingPasses(
          java.lang.Iterable<? extends com.passkit.grpc.CommonObjects.PassBundle> values) {
        if (boardingPassesBuilder_ == null) {
          ensureBoardingPassesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boardingPasses_);
          onChanged();
        } else {
          boardingPassesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder clearBoardingPasses() {
        if (boardingPassesBuilder_ == null) {
          boardingPasses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          boardingPassesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public Builder removeBoardingPasses(int index) {
        if (boardingPassesBuilder_ == null) {
          ensureBoardingPassesIsMutable();
          boardingPasses_.remove(index);
          onChanged();
        } else {
          boardingPassesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public com.passkit.grpc.CommonObjects.PassBundle.Builder getBoardingPassesBuilder(
          int index) {
        return getBoardingPassesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public com.passkit.grpc.CommonObjects.PassBundleOrBuilder getBoardingPassesOrBuilder(
          int index) {
        if (boardingPassesBuilder_ == null) {
          return boardingPasses_.get(index);  } else {
          return boardingPassesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public java.util.List<? extends com.passkit.grpc.CommonObjects.PassBundleOrBuilder> 
           getBoardingPassesOrBuilderList() {
        if (boardingPassesBuilder_ != null) {
          return boardingPassesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boardingPasses_);
        }
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public com.passkit.grpc.CommonObjects.PassBundle.Builder addBoardingPassesBuilder() {
        return getBoardingPassesFieldBuilder().addBuilder(
            com.passkit.grpc.CommonObjects.PassBundle.getDefaultInstance());
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public com.passkit.grpc.CommonObjects.PassBundle.Builder addBoardingPassesBuilder(
          int index) {
        return getBoardingPassesFieldBuilder().addBuilder(
            index, com.passkit.grpc.CommonObjects.PassBundle.getDefaultInstance());
      }
      /**
       * <pre>
       * An array of boarding passes found relating to the PNR.
       * </pre>
       *
       * <code>repeated .io.PassBundle boardingPasses = 1;</code>
       */
      public java.util.List<com.passkit.grpc.CommonObjects.PassBundle.Builder> 
           getBoardingPassesBuilderList() {
        return getBoardingPassesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.passkit.grpc.CommonObjects.PassBundle, com.passkit.grpc.CommonObjects.PassBundle.Builder, com.passkit.grpc.CommonObjects.PassBundleOrBuilder> 
          getBoardingPassesFieldBuilder() {
        if (boardingPassesBuilder_ == null) {
          boardingPassesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.passkit.grpc.CommonObjects.PassBundle, com.passkit.grpc.CommonObjects.PassBundle.Builder, com.passkit.grpc.CommonObjects.PassBundleOrBuilder>(
                  boardingPasses_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          boardingPasses_ = null;
        }
        return boardingPassesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:flights.BoardingPassesResponse)
    }

    // @@protoc_insertion_point(class_scope:flights.BoardingPassesResponse)
    private static final com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse();
    }

    public static com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoardingPassesResponse>
        PARSER = new com.google.protobuf.AbstractParser<BoardingPassesResponse>() {
      @java.lang.Override
      public BoardingPassesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoardingPassesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoardingPassesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Flights.BoardingPass.BoardingPassesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassRecordRequestByTicketNumber_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassRecordRequestByIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassRecordRequestByIndex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassRecordRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassRecordRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassesForBookingRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassesForBookingRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flights_BoardingPassesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_flights_BoardingPassesResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036io/flights/boarding_pass.proto\022\007flight" +
      "s\032\032io/flights/passenger.proto\032\030io/flight" +
      "s/barcode.proto\032(io/flights/cabin_codes/" +
      "cabin_codes.proto\032\036io/common/common_obje" +
      "cts.proto\032\031io/common/proximity.proto\032\025io" +
      "/common/links.proto\032\027io/common/metrics.p" +
      "roto\032.protoc-gen-openapiv2/options/annot" +
      "ations.proto\"\277\017\n\022BoardingPassRecord\022\n\n\002i" +
      "d\030\001 \001(\t\0222\n\023operatingCarrierPNR\030\002 \001(\tB\025\222A" +
      "\022\212\001\017^[A-Z0-9]{5,7}$\022\330\002\n\013relatedPNRs\030\003 \003(" +
      "\tB\302\002\222A\276\0022\227\002Related PNRs can be used to i" +
      "ndex the record and can be the marketing" +
      " carrier PNR or a master PNR containing " +
      "multiple bookings. If required, a relate" +
      "d PNR can be followed by the two or thre" +
      "e character designator of the carrier or" +
      " CRS controlling the PNR, separated by a" +
      "n oblique.\212\001!^[A-Z0-9]{5,7}(\\/[A-Z0-9]{2" +
      ",3})?$\022*\n\014ticketNumber\030\004 \001(\tB\024\222A\021\212\001\016^([0" +
      "-9]{3,10}$\022\037\n\tticketLeg\030\005 \001(\005B\014\222A\ti\000\000\000\000\000" +
      "\000\360?\022)\n\rboardingPoint\030\006 \001(\tB\022\222A\017\212\001\014^[A-Z]" +
      "{3,4}$\022*\n\016deplaningPoint\030\007 \001(\tB\022\222A\017\212\001\014^[" +
      "A-Z]{3,4}$\022\035\n\013carrierCode\030\010 \001(\tB\010\222A\005x\003\200\001" +
      "\002\022\033\n\014flightNumber\030\t \001(\tB\005\222A\002x\005\022\037\n\rdepart" +
      "ureDate\030\013 \001(\0132\010.io.Date\022%\n\tpassenger\030\014 \001" +
      "(\0132\022.flights.Passenger\022\r\n\005class\030\r \001(\t\0225\n" +
      "\017compartmentCode\030\016 \001(\0162\034.cabin_codes.Com" +
      "partmentCode\022\031\n\nseatNumber\030\017 \001(\tB\005\222A\002x\005\022" +
      "\026\n\016sequenceNumber\030\020 \001(\005\022\025\n\rboardingGroup" +
      "\030\021 \001(\t\022\030\n\020boardingPosition\030\022 \001(\t\022&\n\024free" +
      "BaggageAllowance\030\023 \001(\tB\010\222A\005x\003\200\001\003\022\"\n\020carr" +
      "yOnAllowance\030\024 \001(\tB\010\222A\005x\003\200\001\003\022\020\n\010ssrCodes" +
      "\030\025 \003(\t\022\013\n\003osi\030\026 \001(\t\022\017\n\007remarks\030\027 \001(\t\0221\n\017" +
      "passengerStatus\030\030 \001(\0162\030.flights.Passenge" +
      "rStatus\0223\n\020conditionalItems\030\031 \001(\0132\031.flig" +
      "hts.ConditionalItems\022\026\n\016barcodePayload\030\032" +
      " \001(\t\022\025\n\rsecurityImage\030\033 \001(\t\022\026\n\016privilege" +
      "Image\030\034 \001(\t\022\023\n\013footerImage\030\035 \001(\t\0221\n\020loca" +
      "tionMessages\030\036 \003(\0132\017.io.GPSLocationB\006\222A\003" +
      "\240\001\n\022*\n\016beaconMessages\030\037 \003(\0132\n.io.BeaconB" +
      "\006\222A\003\240\001\n\022\037\n\005links\030  \003(\0132\010.io.LinkB\006\222A\003\240\001\n" +
      "\022\035\n\025barcodeAdditionalData\030! \001(\t\022\024\n\014infan" +
      "tPassId\030\" \001(\t\022*\n\023additionalDataItems\030# \001" +
      "(\0132\r.io.DataItems\022\036\n\010metadata\030$ \001(\0132\014.io" +
      ".Metadata:\372\003\222A\366\003\n\363\003*\024Boarding Pass Recor" +
      "d2\331\002A Boarding Pass record is unique to " +
      "an individual passenger journey form a b" +
      "oarding point to a deplaning point. A Ca" +
      "rrier and a Flight Designation record mu" +
      "st exist. If a Flight record does not al" +
      "ready exist, then it will be auto-genera" +
      "ted based on the Flight Designation reco" +
      "rd (and other publicly available data if" +
      " subscribed to data updates).\322\001\023operatin" +
      "gCarrierPNR\322\001\016sequenceNumber\322\001\rboardingP" +
      "oint\322\001\016deplaningPoint\322\001\014flightNumber\322\001\rd" +
      "epartureDate\322\001\tpassenger\322\001\013carrierCode\"\271" +
      "\002\n\'BoardingPassRecordRequestByTicketNumb" +
      "er\022*\n\014ticketNumber\030\001 \001(\tB\024\222A\021\212\001\016^([0-9]{" +
      "3,10}$\022\021\n\tticketLeg\030\002 \001(\005\022\025\n\rboardingPoi" +
      "nt\030\003 \001(\t:\267\001\222A\263\001\n\260\001*%Boarding Pass Record" +
      " By Ticket Number2xUsed to access a sing" +
      "le boarding pass or boarding pass record" +
      ".  Either a ticket leg or boarding point" +
      " should be provided\322\001\014ticketNumber\"\371\002\n B" +
      "oardingPassRecordRequestByIndex\022\035\n\013carri" +
      "erCode\030\001 \001(\tB\010\222A\005x\003\200\001\002\022\033\n\014flightNumber\030\002" +
      " \001(\tB\005\222A\002x\005\022\037\n\rdepartureDate\030\003 \001(\0132\010.io." +
      "Date\022)\n\rboardingPoint\030\004 \001(\tB\022\222A\017\212\001\014^[A-Z" +
      "]{3,4}$\022\026\n\016sequenceNumber\030\005 \001(\005:\264\001\222A\260\001\n\255" +
      "\001*\035Boarding Pass Record By Index2>Used t" +
      "o access a single boarding pass or board" +
      "ing pass record.\322\001\013carrierCode\322\001\014flightN" +
      "umber\322\001\rdepartureDate\322\001\rboardingPoint\322\001\016" +
      "sequenceNumber\"\237\002\n\023BoardingPassRequest\022H" +
      "\n\014ticketNumber\030\001 \001(\01320.flights.BoardingP" +
      "assRecordRequestByTicketNumberH\000\022:\n\005inde" +
      "x\030\002 \001(\0132).flights.BoardingPassRecordRequ" +
      "estByIndexH\000\0227\n\003pnr\030\003 \001(\0132(.flights.Boar" +
      "dingPassesForBookingRequestH\000\022\030\n\006passId\030" +
      "\004 \001(\0132\006.io.IdH\000\022$\n\006format\030\005 \003(\0162\024.io.Pas" +
      "sBundleFormatB\t\n\007request\"\306\001\n\031BoardingPas" +
      "sRecordRequest\022H\n\014ticketNumber\030\001 \001(\01320.f" +
      "lights.BoardingPassRecordRequestByTicket" +
      "NumberH\000\022:\n\005index\030\002 \001(\0132).flights.Boardi" +
      "ngPassRecordRequestByIndexH\000\022\030\n\006passId\030\003" +
      " \001(\0132\006.io.IdH\000B\t\n\007request\"\330\001\n\037BoardingPa" +
      "ssesForBookingRequest\022\013\n\003pnr\030\001 \001(\t\022\021\n\tti" +
      "cketLeg\030\002 \001(\005\022\025\n\rboardingPoint\030\003 \001(\t:~\222A" +
      "{\ny*\"Boarding Pass Record By PNR record2" +
      "MUsed to access a single or multiple boa" +
      "rding passed or boarding pass records.\322\001" +
      "\003pnr\"@\n\026BoardingPassesResponse\022&\n\016boardi" +
      "ngPasses\030\001 \003(\0132\016.io.PassBundleB_\n\030com.pa" +
      "sskit.grpc.FlightsZ,stash.passkit.com/io" +
      "/model/sdk/go/io/flights\252\002\024PassKit.Grpc." +
      "Flightsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.passkit.grpc.Flights.PassengerOuterClass.getDescriptor(),
          com.passkit.grpc.Flights.Barcode.getDescriptor(),
          com.passkit.grpc.Flights.CabinCodes.CabinCodes.getDescriptor(),
          com.passkit.grpc.CommonObjects.getDescriptor(),
          com.passkit.grpc.Proximity.getDescriptor(),
          com.passkit.grpc.Links.getDescriptor(),
          com.passkit.grpc.MetricsOuterClass.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    internal_static_flights_BoardingPassRecord_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flights_BoardingPassRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassRecord_descriptor,
        new java.lang.String[] { "Id", "OperatingCarrierPNR", "RelatedPNRs", "TicketNumber", "TicketLeg", "BoardingPoint", "DeplaningPoint", "CarrierCode", "FlightNumber", "DepartureDate", "Passenger", "Class_", "CompartmentCode", "SeatNumber", "SequenceNumber", "BoardingGroup", "BoardingPosition", "FreeBaggageAllowance", "CarryOnAllowance", "SsrCodes", "Osi", "Remarks", "PassengerStatus", "ConditionalItems", "BarcodePayload", "SecurityImage", "PrivilegeImage", "FooterImage", "LocationMessages", "BeaconMessages", "Links", "BarcodeAdditionalData", "InfantPassId", "AdditionalDataItems", "Metadata", });
    internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flights_BoardingPassRecordRequestByTicketNumber_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassRecordRequestByTicketNumber_descriptor,
        new java.lang.String[] { "TicketNumber", "TicketLeg", "BoardingPoint", });
    internal_static_flights_BoardingPassRecordRequestByIndex_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flights_BoardingPassRecordRequestByIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassRecordRequestByIndex_descriptor,
        new java.lang.String[] { "CarrierCode", "FlightNumber", "DepartureDate", "BoardingPoint", "SequenceNumber", });
    internal_static_flights_BoardingPassRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_flights_BoardingPassRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassRequest_descriptor,
        new java.lang.String[] { "TicketNumber", "Index", "Pnr", "PassId", "Format", "Request", });
    internal_static_flights_BoardingPassRecordRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_flights_BoardingPassRecordRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassRecordRequest_descriptor,
        new java.lang.String[] { "TicketNumber", "Index", "PassId", "Request", });
    internal_static_flights_BoardingPassesForBookingRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_flights_BoardingPassesForBookingRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassesForBookingRequest_descriptor,
        new java.lang.String[] { "Pnr", "TicketLeg", "BoardingPoint", });
    internal_static_flights_BoardingPassesResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_flights_BoardingPassesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_flights_BoardingPassesResponse_descriptor,
        new java.lang.String[] { "BoardingPasses", });
    descriptor.resolveAllFeaturesImmutable();
    com.passkit.grpc.Flights.PassengerOuterClass.getDescriptor();
    com.passkit.grpc.Flights.Barcode.getDescriptor();
    com.passkit.grpc.Flights.CabinCodes.CabinCodes.getDescriptor();
    com.passkit.grpc.CommonObjects.getDescriptor();
    com.passkit.grpc.Proximity.getDescriptor();
    com.passkit.grpc.Links.getDescriptor();
    com.passkit.grpc.MetricsOuterClass.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Field);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
