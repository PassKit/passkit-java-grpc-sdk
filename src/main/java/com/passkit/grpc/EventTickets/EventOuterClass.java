// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/event_tickets/event.proto

// Protobuf Java Version: 3.25.0
package com.passkit.grpc.EventTickets;

public final class EventOuterClass {
  private EventOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PassKit generated event id (22 characters). No writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * PassKit generated event id (22 characters). No writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     * @return Whether the production field is set.
     */
    boolean hasProduction();
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     * @return The production.
     */
    com.passkit.grpc.EventTickets.ProductionOuterClass.Production getProduction();
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     */
    com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder getProductionOrBuilder();

    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     * @return Whether the venue field is set.
     */
    boolean hasVenue();
    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     * @return The venue.
     */
    com.passkit.grpc.EventTickets.VenueOuterClass.Venue getVenue();
    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     */
    com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder getVenueOrBuilder();

    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return Whether the doorsOpen field is set.
     */
    boolean hasDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return The doorsOpen.
     */
    com.google.protobuf.Timestamp getDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder();

    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    boolean hasScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    com.google.protobuf.Timestamp getScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder();

    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return Whether the actualStartDate field is set.
     */
    boolean hasActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return The actualStartDate.
     */
    com.google.protobuf.Timestamp getActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder();

    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return Whether the endDate field is set.
     */
    boolean hasEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return The endDate.
     */
    com.google.protobuf.Timestamp getEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder();

    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return Whether the relevantDate field is set.
     */
    boolean hasRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return The relevantDate.
     */
    com.google.protobuf.Timestamp getRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     */
    com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder();

    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return Whether the quota field is set.
     */
    boolean hasQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return The quota.
     */
    com.passkit.grpc.Billing.Quota getQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     */
    com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder();

    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the metrics field is set.
     */
    boolean hasMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The metrics.
     */
    com.passkit.grpc.MetricsOuterClass.Metrics getMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder();

    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the created field is set.
     */
    boolean hasCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The created.
     */
    com.google.protobuf.Timestamp getCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder();

    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the updated field is set.
     */
    boolean hasUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The updated.
     */
    com.google.protobuf.Timestamp getUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder();
  }
  /**
   * Protobuf type {@code event_tickets.Event}
   */
  public static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.Event)
      EventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Event();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_Event_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.Event.class, com.passkit.grpc.EventTickets.EventOuterClass.Event.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * PassKit generated event id (22 characters). No writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PassKit generated event id (22 characters). No writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCTION_FIELD_NUMBER = 2;
    private com.passkit.grpc.EventTickets.ProductionOuterClass.Production production_;
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     * @return Whether the production field is set.
     */
    @java.lang.Override
    public boolean hasProduction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     * @return The production.
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.ProductionOuterClass.Production getProduction() {
      return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.Production.getDefaultInstance() : production_;
    }
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.Production production = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder getProductionOrBuilder() {
      return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.Production.getDefaultInstance() : production_;
    }

    public static final int VENUE_FIELD_NUMBER = 3;
    private com.passkit.grpc.EventTickets.VenueOuterClass.Venue venue_;
    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     * @return Whether the venue field is set.
     */
    @java.lang.Override
    public boolean hasVenue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     * @return The venue.
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.VenueOuterClass.Venue getVenue() {
      return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.Venue.getDefaultInstance() : venue_;
    }
    /**
     * <pre>
     * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.Venue venue = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder getVenueOrBuilder() {
      return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.Venue.getDefaultInstance() : venue_;
    }

    public static final int DOORSOPEN_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp doorsOpen_;
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return Whether the doorsOpen field is set.
     */
    @java.lang.Override
    public boolean hasDoorsOpen() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return The doorsOpen.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getDoorsOpen() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }

    public static final int SCHEDULEDSTARTDATE_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp scheduledStartDate_;
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    @java.lang.Override
    public boolean hasScheduledStartDate() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getScheduledStartDate() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }

    public static final int ACTUALSTARTDATE_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp actualStartDate_;
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return Whether the actualStartDate field is set.
     */
    @java.lang.Override
    public boolean hasActualStartDate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return The actualStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getActualStartDate() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }

    public static final int ENDDATE_FIELD_NUMBER = 7;
    private com.google.protobuf.Timestamp endDate_;
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return Whether the endDate field is set.
     */
    @java.lang.Override
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return The endDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndDate() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }

    public static final int RELEVANTDATE_FIELD_NUMBER = 8;
    private com.google.protobuf.Timestamp relevantDate_;
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return Whether the relevantDate field is set.
     */
    @java.lang.Override
    public boolean hasRelevantDate() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return The relevantDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getRelevantDate() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }

    public static final int QUOTA_FIELD_NUMBER = 9;
    private com.passkit.grpc.Billing.Quota quota_;
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return Whether the quota field is set.
     */
    @java.lang.Override
    public boolean hasQuota() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return The quota.
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.Quota getQuota() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }

    public static final int METRICS_FIELD_NUMBER = 10;
    private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the metrics field is set.
     */
    @java.lang.Override
    public boolean hasMetrics() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The metrics.
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }

    public static final int CREATED_FIELD_NUMBER = 11;
    private com.google.protobuf.Timestamp created_;
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the created field is set.
     */
    @java.lang.Override
    public boolean hasCreated() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The created.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreated() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }

    public static final int UPDATED_FIELD_NUMBER = 12;
    private com.google.protobuf.Timestamp updated_;
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return Whether the updated field is set.
     */
    @java.lang.Override
    public boolean hasUpdated() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     * @return The updated.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdated() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getProduction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getVenue());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getActualStartDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(7, getEndDate());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(8, getRelevantDate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(9, getQuota());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(10, getMetrics());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(11, getCreated());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(12, getUpdated());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProduction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVenue());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getActualStartDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getEndDate());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRelevantDate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getQuota());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMetrics());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getCreated());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getUpdated());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.Event)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.Event other = (com.passkit.grpc.EventTickets.EventOuterClass.Event) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasProduction() != other.hasProduction()) return false;
      if (hasProduction()) {
        if (!getProduction()
            .equals(other.getProduction())) return false;
      }
      if (hasVenue() != other.hasVenue()) return false;
      if (hasVenue()) {
        if (!getVenue()
            .equals(other.getVenue())) return false;
      }
      if (hasDoorsOpen() != other.hasDoorsOpen()) return false;
      if (hasDoorsOpen()) {
        if (!getDoorsOpen()
            .equals(other.getDoorsOpen())) return false;
      }
      if (hasScheduledStartDate() != other.hasScheduledStartDate()) return false;
      if (hasScheduledStartDate()) {
        if (!getScheduledStartDate()
            .equals(other.getScheduledStartDate())) return false;
      }
      if (hasActualStartDate() != other.hasActualStartDate()) return false;
      if (hasActualStartDate()) {
        if (!getActualStartDate()
            .equals(other.getActualStartDate())) return false;
      }
      if (hasEndDate() != other.hasEndDate()) return false;
      if (hasEndDate()) {
        if (!getEndDate()
            .equals(other.getEndDate())) return false;
      }
      if (hasRelevantDate() != other.hasRelevantDate()) return false;
      if (hasRelevantDate()) {
        if (!getRelevantDate()
            .equals(other.getRelevantDate())) return false;
      }
      if (hasQuota() != other.hasQuota()) return false;
      if (hasQuota()) {
        if (!getQuota()
            .equals(other.getQuota())) return false;
      }
      if (hasMetrics() != other.hasMetrics()) return false;
      if (hasMetrics()) {
        if (!getMetrics()
            .equals(other.getMetrics())) return false;
      }
      if (hasCreated() != other.hasCreated()) return false;
      if (hasCreated()) {
        if (!getCreated()
            .equals(other.getCreated())) return false;
      }
      if (hasUpdated() != other.hasUpdated()) return false;
      if (hasUpdated()) {
        if (!getUpdated()
            .equals(other.getUpdated())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasProduction()) {
        hash = (37 * hash) + PRODUCTION_FIELD_NUMBER;
        hash = (53 * hash) + getProduction().hashCode();
      }
      if (hasVenue()) {
        hash = (37 * hash) + VENUE_FIELD_NUMBER;
        hash = (53 * hash) + getVenue().hashCode();
      }
      if (hasDoorsOpen()) {
        hash = (37 * hash) + DOORSOPEN_FIELD_NUMBER;
        hash = (53 * hash) + getDoorsOpen().hashCode();
      }
      if (hasScheduledStartDate()) {
        hash = (37 * hash) + SCHEDULEDSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledStartDate().hashCode();
      }
      if (hasActualStartDate()) {
        hash = (37 * hash) + ACTUALSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getActualStartDate().hashCode();
      }
      if (hasEndDate()) {
        hash = (37 * hash) + ENDDATE_FIELD_NUMBER;
        hash = (53 * hash) + getEndDate().hashCode();
      }
      if (hasRelevantDate()) {
        hash = (37 * hash) + RELEVANTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getRelevantDate().hashCode();
      }
      if (hasQuota()) {
        hash = (37 * hash) + QUOTA_FIELD_NUMBER;
        hash = (53 * hash) + getQuota().hashCode();
      }
      if (hasMetrics()) {
        hash = (37 * hash) + METRICS_FIELD_NUMBER;
        hash = (53 * hash) + getMetrics().hashCode();
      }
      if (hasCreated()) {
        hash = (37 * hash) + CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getCreated().hashCode();
      }
      if (hasUpdated()) {
        hash = (37 * hash) + UPDATED_FIELD_NUMBER;
        hash = (53 * hash) + getUpdated().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.Event)
        com.passkit.grpc.EventTickets.EventOuterClass.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_Event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.Event.class, com.passkit.grpc.EventTickets.EventOuterClass.Event.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getProductionFieldBuilder();
          getVenueFieldBuilder();
          getDoorsOpenFieldBuilder();
          getScheduledStartDateFieldBuilder();
          getActualStartDateFieldBuilder();
          getEndDateFieldBuilder();
          getRelevantDateFieldBuilder();
          getQuotaFieldBuilder();
          getMetricsFieldBuilder();
          getCreatedFieldBuilder();
          getUpdatedFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        production_ = null;
        if (productionBuilder_ != null) {
          productionBuilder_.dispose();
          productionBuilder_ = null;
        }
        venue_ = null;
        if (venueBuilder_ != null) {
          venueBuilder_.dispose();
          venueBuilder_ = null;
        }
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_Event_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.Event getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.Event.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.Event build() {
        com.passkit.grpc.EventTickets.EventOuterClass.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.Event buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.Event result = new com.passkit.grpc.EventTickets.EventOuterClass.Event(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.Event result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.production_ = productionBuilder_ == null
              ? production_
              : productionBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.venue_ = venueBuilder_ == null
              ? venue_
              : venueBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.doorsOpen_ = doorsOpenBuilder_ == null
              ? doorsOpen_
              : doorsOpenBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.scheduledStartDate_ = scheduledStartDateBuilder_ == null
              ? scheduledStartDate_
              : scheduledStartDateBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.actualStartDate_ = actualStartDateBuilder_ == null
              ? actualStartDate_
              : actualStartDateBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.endDate_ = endDateBuilder_ == null
              ? endDate_
              : endDateBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.relevantDate_ = relevantDateBuilder_ == null
              ? relevantDate_
              : relevantDateBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.quota_ = quotaBuilder_ == null
              ? quota_
              : quotaBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.metrics_ = metricsBuilder_ == null
              ? metrics_
              : metricsBuilder_.build();
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.created_ = createdBuilder_ == null
              ? created_
              : createdBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.updated_ = updatedBuilder_ == null
              ? updated_
              : updatedBuilder_.build();
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.Event) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.Event other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.Event.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasProduction()) {
          mergeProduction(other.getProduction());
        }
        if (other.hasVenue()) {
          mergeVenue(other.getVenue());
        }
        if (other.hasDoorsOpen()) {
          mergeDoorsOpen(other.getDoorsOpen());
        }
        if (other.hasScheduledStartDate()) {
          mergeScheduledStartDate(other.getScheduledStartDate());
        }
        if (other.hasActualStartDate()) {
          mergeActualStartDate(other.getActualStartDate());
        }
        if (other.hasEndDate()) {
          mergeEndDate(other.getEndDate());
        }
        if (other.hasRelevantDate()) {
          mergeRelevantDate(other.getRelevantDate());
        }
        if (other.hasQuota()) {
          mergeQuota(other.getQuota());
        }
        if (other.hasMetrics()) {
          mergeMetrics(other.getMetrics());
        }
        if (other.hasCreated()) {
          mergeCreated(other.getCreated());
        }
        if (other.hasUpdated()) {
          mergeUpdated(other.getUpdated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getProductionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getVenueFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDoorsOpenFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getScheduledStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getActualStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getEndDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getRelevantDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getQuotaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getMetricsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getCreatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getUpdatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * PassKit generated event id (22 characters). No writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters). No writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters). No writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters). No writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters). No writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.passkit.grpc.EventTickets.ProductionOuterClass.Production production_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.ProductionOuterClass.Production, com.passkit.grpc.EventTickets.ProductionOuterClass.Production.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder> productionBuilder_;
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       * @return Whether the production field is set.
       */
      public boolean hasProduction() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       * @return The production.
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.Production getProduction() {
        if (productionBuilder_ == null) {
          return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.Production.getDefaultInstance() : production_;
        } else {
          return productionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public Builder setProduction(com.passkit.grpc.EventTickets.ProductionOuterClass.Production value) {
        if (productionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          production_ = value;
        } else {
          productionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public Builder setProduction(
          com.passkit.grpc.EventTickets.ProductionOuterClass.Production.Builder builderForValue) {
        if (productionBuilder_ == null) {
          production_ = builderForValue.build();
        } else {
          productionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public Builder mergeProduction(com.passkit.grpc.EventTickets.ProductionOuterClass.Production value) {
        if (productionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            production_ != null &&
            production_ != com.passkit.grpc.EventTickets.ProductionOuterClass.Production.getDefaultInstance()) {
            getProductionBuilder().mergeFrom(value);
          } else {
            production_ = value;
          }
        } else {
          productionBuilder_.mergeFrom(value);
        }
        if (production_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public Builder clearProduction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        production_ = null;
        if (productionBuilder_ != null) {
          productionBuilder_.dispose();
          productionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.Production.Builder getProductionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProductionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder getProductionOrBuilder() {
        if (productionBuilder_ != null) {
          return productionBuilder_.getMessageOrBuilder();
        } else {
          return production_ == null ?
              com.passkit.grpc.EventTickets.ProductionOuterClass.Production.getDefaultInstance() : production_;
        }
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.Production production = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.ProductionOuterClass.Production, com.passkit.grpc.EventTickets.ProductionOuterClass.Production.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder> 
          getProductionFieldBuilder() {
        if (productionBuilder_ == null) {
          productionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.EventTickets.ProductionOuterClass.Production, com.passkit.grpc.EventTickets.ProductionOuterClass.Production.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionOrBuilder>(
                  getProduction(),
                  getParentForChildren(),
                  isClean());
          production_ = null;
        }
        return productionBuilder_;
      }

      private com.passkit.grpc.EventTickets.VenueOuterClass.Venue venue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.VenueOuterClass.Venue, com.passkit.grpc.EventTickets.VenueOuterClass.Venue.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder> venueBuilder_;
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       * @return Whether the venue field is set.
       */
      public boolean hasVenue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       * @return The venue.
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.Venue getVenue() {
        if (venueBuilder_ == null) {
          return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.Venue.getDefaultInstance() : venue_;
        } else {
          return venueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public Builder setVenue(com.passkit.grpc.EventTickets.VenueOuterClass.Venue value) {
        if (venueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          venue_ = value;
        } else {
          venueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public Builder setVenue(
          com.passkit.grpc.EventTickets.VenueOuterClass.Venue.Builder builderForValue) {
        if (venueBuilder_ == null) {
          venue_ = builderForValue.build();
        } else {
          venueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public Builder mergeVenue(com.passkit.grpc.EventTickets.VenueOuterClass.Venue value) {
        if (venueBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            venue_ != null &&
            venue_ != com.passkit.grpc.EventTickets.VenueOuterClass.Venue.getDefaultInstance()) {
            getVenueBuilder().mergeFrom(value);
          } else {
            venue_ = value;
          }
        } else {
          venueBuilder_.mergeFrom(value);
        }
        if (venue_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public Builder clearVenue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        venue_ = null;
        if (venueBuilder_ != null) {
          venueBuilder_.dispose();
          venueBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.Venue.Builder getVenueBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVenueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder getVenueOrBuilder() {
        if (venueBuilder_ != null) {
          return venueBuilder_.getMessageOrBuilder();
        } else {
          return venue_ == null ?
              com.passkit.grpc.EventTickets.VenueOuterClass.Venue.getDefaultInstance() : venue_;
        }
      }
      /**
       * <pre>
       * The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.Venue venue = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.VenueOuterClass.Venue, com.passkit.grpc.EventTickets.VenueOuterClass.Venue.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder> 
          getVenueFieldBuilder() {
        if (venueBuilder_ == null) {
          venueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.EventTickets.VenueOuterClass.Venue, com.passkit.grpc.EventTickets.VenueOuterClass.Venue.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueOrBuilder>(
                  getVenue(),
                  getParentForChildren(),
                  isClean());
          venue_ = null;
        }
        return venueBuilder_;
      }

      private com.google.protobuf.Timestamp doorsOpen_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> doorsOpenBuilder_;
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       * @return Whether the doorsOpen field is set.
       */
      public boolean hasDoorsOpen() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       * @return The doorsOpen.
       */
      public com.google.protobuf.Timestamp getDoorsOpen() {
        if (doorsOpenBuilder_ == null) {
          return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        } else {
          return doorsOpenBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder setDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          doorsOpen_ = value;
        } else {
          doorsOpenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder setDoorsOpen(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (doorsOpenBuilder_ == null) {
          doorsOpen_ = builderForValue.build();
        } else {
          doorsOpenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder mergeDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            doorsOpen_ != null &&
            doorsOpen_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getDoorsOpenBuilder().mergeFrom(value);
          } else {
            doorsOpen_ = value;
          }
        } else {
          doorsOpenBuilder_.mergeFrom(value);
        }
        if (doorsOpen_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder clearDoorsOpen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getDoorsOpenBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDoorsOpenFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
        if (doorsOpenBuilder_ != null) {
          return doorsOpenBuilder_.getMessageOrBuilder();
        } else {
          return doorsOpen_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getDoorsOpenFieldBuilder() {
        if (doorsOpenBuilder_ == null) {
          doorsOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getDoorsOpen(),
                  getParentForChildren(),
                  isClean());
          doorsOpen_ = null;
        }
        return doorsOpenBuilder_;
      }

      private com.google.protobuf.Timestamp scheduledStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> scheduledStartDateBuilder_;
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return Whether the scheduledStartDate field is set.
       */
      public boolean hasScheduledStartDate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return The scheduledStartDate.
       */
      public com.google.protobuf.Timestamp getScheduledStartDate() {
        if (scheduledStartDateBuilder_ == null) {
          return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        } else {
          return scheduledStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduledStartDate_ = value;
        } else {
          scheduledStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDate_ = builderForValue.build();
        } else {
          scheduledStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder mergeScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            scheduledStartDate_ != null &&
            scheduledStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getScheduledStartDateBuilder().mergeFrom(value);
          } else {
            scheduledStartDate_ = value;
          }
        } else {
          scheduledStartDateBuilder_.mergeFrom(value);
        }
        if (scheduledStartDate_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder clearScheduledStartDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.Timestamp.Builder getScheduledStartDateBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getScheduledStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
        if (scheduledStartDateBuilder_ != null) {
          return scheduledStartDateBuilder_.getMessageOrBuilder();
        } else {
          return scheduledStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getScheduledStartDateFieldBuilder() {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getScheduledStartDate(),
                  getParentForChildren(),
                  isClean());
          scheduledStartDate_ = null;
        }
        return scheduledStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp actualStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> actualStartDateBuilder_;
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       * @return Whether the actualStartDate field is set.
       */
      public boolean hasActualStartDate() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       * @return The actualStartDate.
       */
      public com.google.protobuf.Timestamp getActualStartDate() {
        if (actualStartDateBuilder_ == null) {
          return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        } else {
          return actualStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder setActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualStartDate_ = value;
        } else {
          actualStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder setActualStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (actualStartDateBuilder_ == null) {
          actualStartDate_ = builderForValue.build();
        } else {
          actualStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder mergeActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            actualStartDate_ != null &&
            actualStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getActualStartDateBuilder().mergeFrom(value);
          } else {
            actualStartDate_ = value;
          }
        } else {
          actualStartDateBuilder_.mergeFrom(value);
        }
        if (actualStartDate_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder clearActualStartDate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getActualStartDateBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getActualStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
        if (actualStartDateBuilder_ != null) {
          return actualStartDateBuilder_.getMessageOrBuilder();
        } else {
          return actualStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getActualStartDateFieldBuilder() {
        if (actualStartDateBuilder_ == null) {
          actualStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getActualStartDate(),
                  getParentForChildren(),
                  isClean());
          actualStartDate_ = null;
        }
        return actualStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp endDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endDateBuilder_;
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       * @return Whether the endDate field is set.
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       * @return The endDate.
       */
      public com.google.protobuf.Timestamp getEndDate() {
        if (endDateBuilder_ == null) {
          return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        } else {
          return endDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder setEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endDate_ = value;
        } else {
          endDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder setEndDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endDateBuilder_ == null) {
          endDate_ = builderForValue.build();
        } else {
          endDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder mergeEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            endDate_ != null &&
            endDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getEndDateBuilder().mergeFrom(value);
          } else {
            endDate_ = value;
          }
        } else {
          endDateBuilder_.mergeFrom(value);
        }
        if (endDate_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndDateBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getEndDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
        if (endDateBuilder_ != null) {
          return endDateBuilder_.getMessageOrBuilder();
        } else {
          return endDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndDateFieldBuilder() {
        if (endDateBuilder_ == null) {
          endDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndDate(),
                  getParentForChildren(),
                  isClean());
          endDate_ = null;
        }
        return endDateBuilder_;
      }

      private com.google.protobuf.Timestamp relevantDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> relevantDateBuilder_;
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       * @return Whether the relevantDate field is set.
       */
      public boolean hasRelevantDate() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       * @return The relevantDate.
       */
      public com.google.protobuf.Timestamp getRelevantDate() {
        if (relevantDateBuilder_ == null) {
          return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        } else {
          return relevantDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder setRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relevantDate_ = value;
        } else {
          relevantDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder setRelevantDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (relevantDateBuilder_ == null) {
          relevantDate_ = builderForValue.build();
        } else {
          relevantDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder mergeRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            relevantDate_ != null &&
            relevantDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getRelevantDateBuilder().mergeFrom(value);
          } else {
            relevantDate_ = value;
          }
        } else {
          relevantDateBuilder_.mergeFrom(value);
        }
        if (relevantDate_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder clearRelevantDate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public com.google.protobuf.Timestamp.Builder getRelevantDateBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getRelevantDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
        if (relevantDateBuilder_ != null) {
          return relevantDateBuilder_.getMessageOrBuilder();
        } else {
          return relevantDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getRelevantDateFieldBuilder() {
        if (relevantDateBuilder_ == null) {
          relevantDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getRelevantDate(),
                  getParentForChildren(),
                  isClean());
          relevantDate_ = null;
        }
        return relevantDateBuilder_;
      }

      private com.passkit.grpc.Billing.Quota quota_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> quotaBuilder_;
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       * @return Whether the quota field is set.
       */
      public boolean hasQuota() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       * @return The quota.
       */
      public com.passkit.grpc.Billing.Quota getQuota() {
        if (quotaBuilder_ == null) {
          return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        } else {
          return quotaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder setQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          quota_ = value;
        } else {
          quotaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder setQuota(
          com.passkit.grpc.Billing.Quota.Builder builderForValue) {
        if (quotaBuilder_ == null) {
          quota_ = builderForValue.build();
        } else {
          quotaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder mergeQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            quota_ != null &&
            quota_ != com.passkit.grpc.Billing.Quota.getDefaultInstance()) {
            getQuotaBuilder().mergeFrom(value);
          } else {
            quota_ = value;
          }
        } else {
          quotaBuilder_.mergeFrom(value);
        }
        if (quota_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder clearQuota() {
        bitField0_ = (bitField0_ & ~0x00000100);
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public com.passkit.grpc.Billing.Quota.Builder getQuotaBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getQuotaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
        if (quotaBuilder_ != null) {
          return quotaBuilder_.getMessageOrBuilder();
        } else {
          return quota_ == null ?
              com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> 
          getQuotaFieldBuilder() {
        if (quotaBuilder_ == null) {
          quotaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder>(
                  getQuota(),
                  getParentForChildren(),
                  isClean());
          quota_ = null;
        }
        return quotaBuilder_;
      }

      private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> metricsBuilder_;
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return Whether the metrics field is set.
       */
      public boolean hasMetrics() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The metrics.
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
        if (metricsBuilder_ == null) {
          return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        } else {
          return metricsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metrics_ = value;
        } else {
          metricsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setMetrics(
          com.passkit.grpc.MetricsOuterClass.Metrics.Builder builderForValue) {
        if (metricsBuilder_ == null) {
          metrics_ = builderForValue.build();
        } else {
          metricsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder mergeMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            metrics_ != null &&
            metrics_ != com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance()) {
            getMetricsBuilder().mergeFrom(value);
          } else {
            metrics_ = value;
          }
        } else {
          metricsBuilder_.mergeFrom(value);
        }
        if (metrics_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearMetrics() {
        bitField0_ = (bitField0_ & ~0x00000200);
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics.Builder getMetricsBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getMetricsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
        if (metricsBuilder_ != null) {
          return metricsBuilder_.getMessageOrBuilder();
        } else {
          return metrics_ == null ?
              com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> 
          getMetricsFieldBuilder() {
        if (metricsBuilder_ == null) {
          metricsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder>(
                  getMetrics(),
                  getParentForChildren(),
                  isClean());
          metrics_ = null;
        }
        return metricsBuilder_;
      }

      private com.google.protobuf.Timestamp created_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdBuilder_;
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return Whether the created field is set.
       */
      public boolean hasCreated() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The created.
       */
      public com.google.protobuf.Timestamp getCreated() {
        if (createdBuilder_ == null) {
          return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        } else {
          return createdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          created_ = value;
        } else {
          createdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setCreated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (createdBuilder_ == null) {
          created_ = builderForValue.build();
        } else {
          createdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder mergeCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            created_ != null &&
            created_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getCreatedBuilder().mergeFrom(value);
          } else {
            created_ = value;
          }
        } else {
          createdBuilder_.mergeFrom(value);
        }
        if (created_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearCreated() {
        bitField0_ = (bitField0_ & ~0x00000400);
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreatedBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getCreatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
        if (createdBuilder_ != null) {
          return createdBuilder_.getMessageOrBuilder();
        } else {
          return created_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreatedFieldBuilder() {
        if (createdBuilder_ == null) {
          createdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreated(),
                  getParentForChildren(),
                  isClean());
          created_ = null;
        }
        return createdBuilder_;
      }

      private com.google.protobuf.Timestamp updated_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updatedBuilder_;
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return Whether the updated field is set.
       */
      public boolean hasUpdated() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       * @return The updated.
       */
      public com.google.protobuf.Timestamp getUpdated() {
        if (updatedBuilder_ == null) {
          return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        } else {
          return updatedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updated_ = value;
        } else {
          updatedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder setUpdated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updatedBuilder_ == null) {
          updated_ = builderForValue.build();
        } else {
          updatedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder mergeUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
            updated_ != null &&
            updated_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getUpdatedBuilder().mergeFrom(value);
          } else {
            updated_ = value;
          }
        } else {
          updatedBuilder_.mergeFrom(value);
        }
        if (updated_ != null) {
          bitField0_ |= 0x00000800;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public Builder clearUpdated() {
        bitField0_ = (bitField0_ & ~0x00000800);
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdatedBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getUpdatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
        if (updatedBuilder_ != null) {
          return updatedBuilder_.getMessageOrBuilder();
        } else {
          return updated_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdatedFieldBuilder() {
        if (updatedBuilder_ == null) {
          updatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdated(),
                  getParentForChildren(),
                  isClean());
          updated_ = null;
        }
        return updatedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.Event)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.Event)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.Event();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      @java.lang.Override
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.EventListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return Whether the productionId field is set.
     */
    boolean hasProductionId();
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    java.lang.String getProductionId();
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    com.google.protobuf.ByteString
        getProductionIdBytes();

    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return Whether the productionUid field is set.
     */
    boolean hasProductionUid();
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The productionUid.
     */
    java.lang.String getProductionUid();
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The bytes for productionUid.
     */
    com.google.protobuf.ByteString
        getProductionUidBytes();

    /**
     * <code>string venueId = 3;</code>
     * @return The venueId.
     */
    java.lang.String getVenueId();
    /**
     * <code>string venueId = 3;</code>
     * @return The bytes for venueId.
     */
    com.google.protobuf.ByteString
        getVenueIdBytes();

    /**
     * <code>.io.Filters filters = 4;</code>
     * @return Whether the filters field is set.
     */
    boolean hasFilters();
    /**
     * <code>.io.Filters filters = 4;</code>
     * @return The filters.
     */
    com.passkit.grpc.Filter.Filters getFilters();
    /**
     * <code>.io.Filters filters = 4;</code>
     */
    com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder();

    com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.ProductionCase getProductionCase();
  }
  /**
   * Protobuf type {@code event_tickets.EventListRequest}
   */
  public static final class EventListRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.EventListRequest)
      EventListRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventListRequest.newBuilder() to construct.
    private EventListRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventListRequest() {
      venueId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventListRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.Builder.class);
    }

    private int bitField0_;
    private int productionCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object production_;
    public enum ProductionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PRODUCTIONID(1),
      PRODUCTIONUID(2),
      PRODUCTION_NOT_SET(0);
      private final int value;
      private ProductionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ProductionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ProductionCase forNumber(int value) {
        switch (value) {
          case 1: return PRODUCTIONID;
          case 2: return PRODUCTIONUID;
          case 0: return PRODUCTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ProductionCase
    getProductionCase() {
      return ProductionCase.forNumber(
          productionCase_);
    }

    public static final int PRODUCTIONID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return Whether the productionId field is set.
     */
    public boolean hasProductionId() {
      return productionCase_ == 1;
    }
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    public java.lang.String getProductionId() {
      java.lang.Object ref = "";
      if (productionCase_ == 1) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (productionCase_ == 1) {
          production_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    public com.google.protobuf.ByteString
        getProductionIdBytes() {
      java.lang.Object ref = "";
      if (productionCase_ == 1) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (productionCase_ == 1) {
          production_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCTIONUID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return Whether the productionUid field is set.
     */
    public boolean hasProductionUid() {
      return productionCase_ == 2;
    }
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The productionUid.
     */
    public java.lang.String getProductionUid() {
      java.lang.Object ref = "";
      if (productionCase_ == 2) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (productionCase_ == 2) {
          production_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The bytes for productionUid.
     */
    public com.google.protobuf.ByteString
        getProductionUidBytes() {
      java.lang.Object ref = "";
      if (productionCase_ == 2) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (productionCase_ == 2) {
          production_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VENUEID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object venueId_ = "";
    /**
     * <code>string venueId = 3;</code>
     * @return The venueId.
     */
    @java.lang.Override
    public java.lang.String getVenueId() {
      java.lang.Object ref = venueId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        venueId_ = s;
        return s;
      }
    }
    /**
     * <code>string venueId = 3;</code>
     * @return The bytes for venueId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVenueIdBytes() {
      java.lang.Object ref = venueId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        venueId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTERS_FIELD_NUMBER = 4;
    private com.passkit.grpc.Filter.Filters filters_;
    /**
     * <code>.io.Filters filters = 4;</code>
     * @return Whether the filters field is set.
     */
    @java.lang.Override
    public boolean hasFilters() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.io.Filters filters = 4;</code>
     * @return The filters.
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.Filters getFilters() {
      return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
    }
    /**
     * <code>.io.Filters filters = 4;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
      return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (productionCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, production_);
      }
      if (productionCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, production_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(venueId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, venueId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(4, getFilters());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (productionCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, production_);
      }
      if (productionCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, production_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(venueId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, venueId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFilters());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest other = (com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest) obj;

      if (!getVenueId()
          .equals(other.getVenueId())) return false;
      if (hasFilters() != other.hasFilters()) return false;
      if (hasFilters()) {
        if (!getFilters()
            .equals(other.getFilters())) return false;
      }
      if (!getProductionCase().equals(other.getProductionCase())) return false;
      switch (productionCase_) {
        case 1:
          if (!getProductionId()
              .equals(other.getProductionId())) return false;
          break;
        case 2:
          if (!getProductionUid()
              .equals(other.getProductionUid())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VENUEID_FIELD_NUMBER;
      hash = (53 * hash) + getVenueId().hashCode();
      if (hasFilters()) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFilters().hashCode();
      }
      switch (productionCase_) {
        case 1:
          hash = (37 * hash) + PRODUCTIONID_FIELD_NUMBER;
          hash = (53 * hash) + getProductionId().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PRODUCTIONUID_FIELD_NUMBER;
          hash = (53 * hash) + getProductionUid().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.EventListRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.EventListRequest)
        com.passkit.grpc.EventTickets.EventOuterClass.EventListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFiltersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        venueId_ = "";
        filters_ = null;
        if (filtersBuilder_ != null) {
          filtersBuilder_.dispose();
          filtersBuilder_ = null;
        }
        productionCase_ = 0;
        production_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest build() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest result = new com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.venueId_ = venueId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.filters_ = filtersBuilder_ == null
              ? filters_
              : filtersBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest result) {
        result.productionCase_ = productionCase_;
        result.production_ = this.production_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest.getDefaultInstance()) return this;
        if (!other.getVenueId().isEmpty()) {
          venueId_ = other.venueId_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasFilters()) {
          mergeFilters(other.getFilters());
        }
        switch (other.getProductionCase()) {
          case PRODUCTIONID: {
            productionCase_ = 1;
            production_ = other.production_;
            onChanged();
            break;
          }
          case PRODUCTIONUID: {
            productionCase_ = 2;
            production_ = other.production_;
            onChanged();
            break;
          }
          case PRODUCTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                productionCase_ = 1;
                production_ = s;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                productionCase_ = 2;
                production_ = s;
                break;
              } // case 18
              case 26: {
                venueId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getFiltersFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int productionCase_ = 0;
      private java.lang.Object production_;
      public ProductionCase
          getProductionCase() {
        return ProductionCase.forNumber(
            productionCase_);
      }

      public Builder clearProduction() {
        productionCase_ = 0;
        production_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return Whether the productionId field is set.
       */
      @java.lang.Override
      public boolean hasProductionId() {
        return productionCase_ == 1;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The productionId.
       */
      @java.lang.Override
      public java.lang.String getProductionId() {
        java.lang.Object ref = "";
        if (productionCase_ == 1) {
          ref = production_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (productionCase_ == 1) {
            production_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The bytes for productionId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProductionIdBytes() {
        java.lang.Object ref = "";
        if (productionCase_ == 1) {
          ref = production_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (productionCase_ == 1) {
            production_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        productionCase_ = 1;
        production_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductionId() {
        if (productionCase_ == 1) {
          productionCase_ = 0;
          production_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The bytes for productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        productionCase_ = 1;
        production_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return Whether the productionUid field is set.
       */
      @java.lang.Override
      public boolean hasProductionUid() {
        return productionCase_ == 2;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return The productionUid.
       */
      @java.lang.Override
      public java.lang.String getProductionUid() {
        java.lang.Object ref = "";
        if (productionCase_ == 2) {
          ref = production_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (productionCase_ == 2) {
            production_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return The bytes for productionUid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProductionUidBytes() {
        java.lang.Object ref = "";
        if (productionCase_ == 2) {
          ref = production_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (productionCase_ == 2) {
            production_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @param value The productionUid to set.
       * @return This builder for chaining.
       */
      public Builder setProductionUid(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        productionCase_ = 2;
        production_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductionUid() {
        if (productionCase_ == 2) {
          productionCase_ = 0;
          production_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @param value The bytes for productionUid to set.
       * @return This builder for chaining.
       */
      public Builder setProductionUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        productionCase_ = 2;
        production_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object venueId_ = "";
      /**
       * <code>string venueId = 3;</code>
       * @return The venueId.
       */
      public java.lang.String getVenueId() {
        java.lang.Object ref = venueId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          venueId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string venueId = 3;</code>
       * @return The bytes for venueId.
       */
      public com.google.protobuf.ByteString
          getVenueIdBytes() {
        java.lang.Object ref = venueId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          venueId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string venueId = 3;</code>
       * @param value The venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        venueId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string venueId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVenueId() {
        venueId_ = getDefaultInstance().getVenueId();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string venueId = 3;</code>
       * @param value The bytes for venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        venueId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Filter.Filters filters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> filtersBuilder_;
      /**
       * <code>.io.Filters filters = 4;</code>
       * @return Whether the filters field is set.
       */
      public boolean hasFilters() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       * @return The filters.
       */
      public com.passkit.grpc.Filter.Filters getFilters() {
        if (filtersBuilder_ == null) {
          return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        } else {
          return filtersBuilder_.getMessage();
        }
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public Builder setFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filters_ = value;
        } else {
          filtersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public Builder setFilters(
          com.passkit.grpc.Filter.Filters.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          filters_ = builderForValue.build();
        } else {
          filtersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public Builder mergeFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            filters_ != null &&
            filters_ != com.passkit.grpc.Filter.Filters.getDefaultInstance()) {
            getFiltersBuilder().mergeFrom(value);
          } else {
            filters_ = value;
          }
        } else {
          filtersBuilder_.mergeFrom(value);
        }
        if (filters_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public Builder clearFilters() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filters_ = null;
        if (filtersBuilder_ != null) {
          filtersBuilder_.dispose();
          filtersBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public com.passkit.grpc.Filter.Filters.Builder getFiltersBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getFiltersFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilder();
        } else {
          return filters_ == null ?
              com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        }
      }
      /**
       * <code>.io.Filters filters = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder>(
                  getFilters(),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.EventListRequest)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.EventListRequest)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventListRequest>
        PARSER = new com.google.protobuf.AbstractParser<EventListRequest>() {
      @java.lang.Override
      public EventListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventListRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventListRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.EventListRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetEventRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.GetEventRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return Whether the productionId field is set.
     */
    boolean hasProductionId();
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    java.lang.String getProductionId();
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    com.google.protobuf.ByteString
        getProductionIdBytes();

    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return Whether the productionUid field is set.
     */
    boolean hasProductionUid();
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The productionUid.
     */
    java.lang.String getProductionUid();
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The bytes for productionUid.
     */
    com.google.protobuf.ByteString
        getProductionUidBytes();

    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return Whether the venueId field is set.
     */
    boolean hasVenueId();
    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return The venueId.
     */
    java.lang.String getVenueId();
    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return The bytes for venueId.
     */
    com.google.protobuf.ByteString
        getVenueIdBytes();

    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return Whether the venueUid field is set.
     */
    boolean hasVenueUid();
    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return The venueUid.
     */
    java.lang.String getVenueUid();
    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return The bytes for venueUid.
     */
    com.google.protobuf.ByteString
        getVenueUidBytes();

    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    boolean hasScheduledStartDate();
    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    com.google.protobuf.Timestamp getScheduledStartDate();
    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder();

    com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.ProductionCase getProductionCase();

    com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.VenueCase getVenueCase();
  }
  /**
   * Protobuf type {@code event_tickets.GetEventRequest}
   */
  public static final class GetEventRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.GetEventRequest)
      GetEventRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetEventRequest.newBuilder() to construct.
    private GetEventRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetEventRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetEventRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_GetEventRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_GetEventRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.Builder.class);
    }

    private int bitField0_;
    private int productionCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object production_;
    public enum ProductionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PRODUCTIONID(1),
      PRODUCTIONUID(2),
      PRODUCTION_NOT_SET(0);
      private final int value;
      private ProductionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ProductionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ProductionCase forNumber(int value) {
        switch (value) {
          case 1: return PRODUCTIONID;
          case 2: return PRODUCTIONUID;
          case 0: return PRODUCTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ProductionCase
    getProductionCase() {
      return ProductionCase.forNumber(
          productionCase_);
    }

    private int venueCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object venue_;
    public enum VenueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      VENUEID(3),
      VENUEUID(4),
      VENUE_NOT_SET(0);
      private final int value;
      private VenueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VenueCase valueOf(int value) {
        return forNumber(value);
      }

      public static VenueCase forNumber(int value) {
        switch (value) {
          case 3: return VENUEID;
          case 4: return VENUEUID;
          case 0: return VENUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VenueCase
    getVenueCase() {
      return VenueCase.forNumber(
          venueCase_);
    }

    public static final int PRODUCTIONID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return Whether the productionId field is set.
     */
    public boolean hasProductionId() {
      return productionCase_ == 1;
    }
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    public java.lang.String getProductionId() {
      java.lang.Object ref = "";
      if (productionCase_ == 1) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (productionCase_ == 1) {
          production_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Production ID. Required if productionUid is not provided.
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    public com.google.protobuf.ByteString
        getProductionIdBytes() {
      java.lang.Object ref = "";
      if (productionCase_ == 1) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (productionCase_ == 1) {
          production_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCTIONUID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return Whether the productionUid field is set.
     */
    public boolean hasProductionUid() {
      return productionCase_ == 2;
    }
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The productionUid.
     */
    public java.lang.String getProductionUid() {
      java.lang.Object ref = "";
      if (productionCase_ == 2) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (productionCase_ == 2) {
          production_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Production UID. Required if productionId is not provided.
     * </pre>
     *
     * <code>string productionUid = 2;</code>
     * @return The bytes for productionUid.
     */
    public com.google.protobuf.ByteString
        getProductionUidBytes() {
      java.lang.Object ref = "";
      if (productionCase_ == 2) {
        ref = production_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (productionCase_ == 2) {
          production_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VENUEID_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return Whether the venueId field is set.
     */
    public boolean hasVenueId() {
      return venueCase_ == 3;
    }
    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return The venueId.
     */
    public java.lang.String getVenueId() {
      java.lang.Object ref = "";
      if (venueCase_ == 3) {
        ref = venue_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (venueCase_ == 3) {
          venue_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Venue ID. Required if venueUid is not provided.
     * </pre>
     *
     * <code>string venueId = 3;</code>
     * @return The bytes for venueId.
     */
    public com.google.protobuf.ByteString
        getVenueIdBytes() {
      java.lang.Object ref = "";
      if (venueCase_ == 3) {
        ref = venue_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (venueCase_ == 3) {
          venue_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VENUEUID_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return Whether the venueUid field is set.
     */
    public boolean hasVenueUid() {
      return venueCase_ == 4;
    }
    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return The venueUid.
     */
    public java.lang.String getVenueUid() {
      java.lang.Object ref = "";
      if (venueCase_ == 4) {
        ref = venue_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (venueCase_ == 4) {
          venue_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Venue UID. Required if venueId is not provided.
     * </pre>
     *
     * <code>string venueUid = 4;</code>
     * @return The bytes for venueUid.
     */
    public com.google.protobuf.ByteString
        getVenueUidBytes() {
      java.lang.Object ref = "";
      if (venueCase_ == 4) {
        ref = venue_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (venueCase_ == 4) {
          venue_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCHEDULEDSTARTDATE_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp scheduledStartDate_;
    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    @java.lang.Override
    public boolean hasScheduledStartDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getScheduledStartDate() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }
    /**
     * <pre>
     * Event scheduled start date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (productionCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, production_);
      }
      if (productionCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, production_);
      }
      if (venueCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, venue_);
      }
      if (venueCase_ == 4) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, venue_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(5, getScheduledStartDate());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (productionCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, production_);
      }
      if (productionCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, production_);
      }
      if (venueCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, venue_);
      }
      if (venueCase_ == 4) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, venue_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getScheduledStartDate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest other = (com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest) obj;

      if (hasScheduledStartDate() != other.hasScheduledStartDate()) return false;
      if (hasScheduledStartDate()) {
        if (!getScheduledStartDate()
            .equals(other.getScheduledStartDate())) return false;
      }
      if (!getProductionCase().equals(other.getProductionCase())) return false;
      switch (productionCase_) {
        case 1:
          if (!getProductionId()
              .equals(other.getProductionId())) return false;
          break;
        case 2:
          if (!getProductionUid()
              .equals(other.getProductionUid())) return false;
          break;
        case 0:
        default:
      }
      if (!getVenueCase().equals(other.getVenueCase())) return false;
      switch (venueCase_) {
        case 3:
          if (!getVenueId()
              .equals(other.getVenueId())) return false;
          break;
        case 4:
          if (!getVenueUid()
              .equals(other.getVenueUid())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScheduledStartDate()) {
        hash = (37 * hash) + SCHEDULEDSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledStartDate().hashCode();
      }
      switch (productionCase_) {
        case 1:
          hash = (37 * hash) + PRODUCTIONID_FIELD_NUMBER;
          hash = (53 * hash) + getProductionId().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PRODUCTIONUID_FIELD_NUMBER;
          hash = (53 * hash) + getProductionUid().hashCode();
          break;
        case 0:
        default:
      }
      switch (venueCase_) {
        case 3:
          hash = (37 * hash) + VENUEID_FIELD_NUMBER;
          hash = (53 * hash) + getVenueId().hashCode();
          break;
        case 4:
          hash = (37 * hash) + VENUEUID_FIELD_NUMBER;
          hash = (53 * hash) + getVenueUid().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.GetEventRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.GetEventRequest)
        com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_GetEventRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_GetEventRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScheduledStartDateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        productionCase_ = 0;
        production_ = null;
        venueCase_ = 0;
        venue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_GetEventRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest build() {
        com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest result = new com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.scheduledStartDate_ = scheduledStartDateBuilder_ == null
              ? scheduledStartDate_
              : scheduledStartDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest result) {
        result.productionCase_ = productionCase_;
        result.production_ = this.production_;
        result.venueCase_ = venueCase_;
        result.venue_ = this.venue_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest.getDefaultInstance()) return this;
        if (other.hasScheduledStartDate()) {
          mergeScheduledStartDate(other.getScheduledStartDate());
        }
        switch (other.getProductionCase()) {
          case PRODUCTIONID: {
            productionCase_ = 1;
            production_ = other.production_;
            onChanged();
            break;
          }
          case PRODUCTIONUID: {
            productionCase_ = 2;
            production_ = other.production_;
            onChanged();
            break;
          }
          case PRODUCTION_NOT_SET: {
            break;
          }
        }
        switch (other.getVenueCase()) {
          case VENUEID: {
            venueCase_ = 3;
            venue_ = other.venue_;
            onChanged();
            break;
          }
          case VENUEUID: {
            venueCase_ = 4;
            venue_ = other.venue_;
            onChanged();
            break;
          }
          case VENUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                productionCase_ = 1;
                production_ = s;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                productionCase_ = 2;
                production_ = s;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                venueCase_ = 3;
                venue_ = s;
                break;
              } // case 26
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                venueCase_ = 4;
                venue_ = s;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getScheduledStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int productionCase_ = 0;
      private java.lang.Object production_;
      public ProductionCase
          getProductionCase() {
        return ProductionCase.forNumber(
            productionCase_);
      }

      public Builder clearProduction() {
        productionCase_ = 0;
        production_ = null;
        onChanged();
        return this;
      }

      private int venueCase_ = 0;
      private java.lang.Object venue_;
      public VenueCase
          getVenueCase() {
        return VenueCase.forNumber(
            venueCase_);
      }

      public Builder clearVenue() {
        venueCase_ = 0;
        venue_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return Whether the productionId field is set.
       */
      @java.lang.Override
      public boolean hasProductionId() {
        return productionCase_ == 1;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The productionId.
       */
      @java.lang.Override
      public java.lang.String getProductionId() {
        java.lang.Object ref = "";
        if (productionCase_ == 1) {
          ref = production_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (productionCase_ == 1) {
            production_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The bytes for productionId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProductionIdBytes() {
        java.lang.Object ref = "";
        if (productionCase_ == 1) {
          ref = production_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (productionCase_ == 1) {
            production_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        productionCase_ = 1;
        production_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductionId() {
        if (productionCase_ == 1) {
          productionCase_ = 0;
          production_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Production ID. Required if productionUid is not provided.
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The bytes for productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        productionCase_ = 1;
        production_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return Whether the productionUid field is set.
       */
      @java.lang.Override
      public boolean hasProductionUid() {
        return productionCase_ == 2;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return The productionUid.
       */
      @java.lang.Override
      public java.lang.String getProductionUid() {
        java.lang.Object ref = "";
        if (productionCase_ == 2) {
          ref = production_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (productionCase_ == 2) {
            production_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return The bytes for productionUid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProductionUidBytes() {
        java.lang.Object ref = "";
        if (productionCase_ == 2) {
          ref = production_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (productionCase_ == 2) {
            production_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @param value The productionUid to set.
       * @return This builder for chaining.
       */
      public Builder setProductionUid(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        productionCase_ = 2;
        production_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductionUid() {
        if (productionCase_ == 2) {
          productionCase_ = 0;
          production_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Production UID. Required if productionId is not provided.
       * </pre>
       *
       * <code>string productionUid = 2;</code>
       * @param value The bytes for productionUid to set.
       * @return This builder for chaining.
       */
      public Builder setProductionUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        productionCase_ = 2;
        production_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @return Whether the venueId field is set.
       */
      @java.lang.Override
      public boolean hasVenueId() {
        return venueCase_ == 3;
      }
      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @return The venueId.
       */
      @java.lang.Override
      public java.lang.String getVenueId() {
        java.lang.Object ref = "";
        if (venueCase_ == 3) {
          ref = venue_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (venueCase_ == 3) {
            venue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @return The bytes for venueId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVenueIdBytes() {
        java.lang.Object ref = "";
        if (venueCase_ == 3) {
          ref = venue_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (venueCase_ == 3) {
            venue_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @param value The venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        venueCase_ = 3;
        venue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVenueId() {
        if (venueCase_ == 3) {
          venueCase_ = 0;
          venue_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Venue ID. Required if venueUid is not provided.
       * </pre>
       *
       * <code>string venueId = 3;</code>
       * @param value The bytes for venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        venueCase_ = 3;
        venue_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @return Whether the venueUid field is set.
       */
      @java.lang.Override
      public boolean hasVenueUid() {
        return venueCase_ == 4;
      }
      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @return The venueUid.
       */
      @java.lang.Override
      public java.lang.String getVenueUid() {
        java.lang.Object ref = "";
        if (venueCase_ == 4) {
          ref = venue_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (venueCase_ == 4) {
            venue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @return The bytes for venueUid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVenueUidBytes() {
        java.lang.Object ref = "";
        if (venueCase_ == 4) {
          ref = venue_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (venueCase_ == 4) {
            venue_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @param value The venueUid to set.
       * @return This builder for chaining.
       */
      public Builder setVenueUid(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        venueCase_ = 4;
        venue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVenueUid() {
        if (venueCase_ == 4) {
          venueCase_ = 0;
          venue_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Venue UID. Required if venueId is not provided.
       * </pre>
       *
       * <code>string venueUid = 4;</code>
       * @param value The bytes for venueUid to set.
       * @return This builder for chaining.
       */
      public Builder setVenueUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        venueCase_ = 4;
        venue_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp scheduledStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> scheduledStartDateBuilder_;
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return Whether the scheduledStartDate field is set.
       */
      public boolean hasScheduledStartDate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return The scheduledStartDate.
       */
      public com.google.protobuf.Timestamp getScheduledStartDate() {
        if (scheduledStartDateBuilder_ == null) {
          return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        } else {
          return scheduledStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduledStartDate_ = value;
        } else {
          scheduledStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDate_ = builderForValue.build();
        } else {
          scheduledStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder mergeScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            scheduledStartDate_ != null &&
            scheduledStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getScheduledStartDateBuilder().mergeFrom(value);
          } else {
            scheduledStartDate_ = value;
          }
        } else {
          scheduledStartDateBuilder_.mergeFrom(value);
        }
        if (scheduledStartDate_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder clearScheduledStartDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.Timestamp.Builder getScheduledStartDateBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getScheduledStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
        if (scheduledStartDateBuilder_ != null) {
          return scheduledStartDateBuilder_.getMessageOrBuilder();
        } else {
          return scheduledStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        }
      }
      /**
       * <pre>
       * Event scheduled start date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getScheduledStartDateFieldBuilder() {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getScheduledStartDate(),
                  getParentForChildren(),
                  isClean());
          scheduledStartDate_ = null;
        }
        return scheduledStartDateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.GetEventRequest)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.GetEventRequest)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetEventRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetEventRequest>() {
      @java.lang.Override
      public GetEventRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetEventRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetEventRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.GetEventRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventLimitedFieldsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.EventLimitedFieldsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    boolean hasScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     * @return The scheduledStartDate.
     */
    com.google.protobuf.Timestamp getScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder();

    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     * @return Whether the actualStartDate field is set.
     */
    boolean hasActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     * @return The actualStartDate.
     */
    com.google.protobuf.Timestamp getActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder();

    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     * @return Whether the endDate field is set.
     */
    boolean hasEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     * @return The endDate.
     */
    com.google.protobuf.Timestamp getEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder();
  }
  /**
   * Protobuf type {@code event_tickets.EventLimitedFieldsResponse}
   */
  public static final class EventLimitedFieldsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.EventLimitedFieldsResponse)
      EventLimitedFieldsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventLimitedFieldsResponse.newBuilder() to construct.
    private EventLimitedFieldsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventLimitedFieldsResponse() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventLimitedFieldsResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.class, com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCHEDULEDSTARTDATE_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp scheduledStartDate_;
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    @java.lang.Override
    public boolean hasScheduledStartDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     * @return The scheduledStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getScheduledStartDate() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }

    public static final int ACTUALSTARTDATE_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp actualStartDate_;
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     * @return Whether the actualStartDate field is set.
     */
    @java.lang.Override
    public boolean hasActualStartDate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     * @return The actualStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getActualStartDate() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }

    public static final int ENDDATE_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp endDate_;
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     * @return Whether the endDate field is set.
     */
    @java.lang.Override
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     * @return The endDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndDate() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getActualStartDate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getEndDate());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getActualStartDate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getEndDate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse other = (com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasScheduledStartDate() != other.hasScheduledStartDate()) return false;
      if (hasScheduledStartDate()) {
        if (!getScheduledStartDate()
            .equals(other.getScheduledStartDate())) return false;
      }
      if (hasActualStartDate() != other.hasActualStartDate()) return false;
      if (hasActualStartDate()) {
        if (!getActualStartDate()
            .equals(other.getActualStartDate())) return false;
      }
      if (hasEndDate() != other.hasEndDate()) return false;
      if (hasEndDate()) {
        if (!getEndDate()
            .equals(other.getEndDate())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasScheduledStartDate()) {
        hash = (37 * hash) + SCHEDULEDSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledStartDate().hashCode();
      }
      if (hasActualStartDate()) {
        hash = (37 * hash) + ACTUALSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getActualStartDate().hashCode();
      }
      if (hasEndDate()) {
        hash = (37 * hash) + ENDDATE_FIELD_NUMBER;
        hash = (53 * hash) + getEndDate().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.EventLimitedFieldsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.EventLimitedFieldsResponse)
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.class, com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScheduledStartDateFieldBuilder();
          getActualStartDateFieldBuilder();
          getEndDateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsResponse_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse build() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse result = new com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.scheduledStartDate_ = scheduledStartDateBuilder_ == null
              ? scheduledStartDate_
              : scheduledStartDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.actualStartDate_ = actualStartDateBuilder_ == null
              ? actualStartDate_
              : actualStartDateBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.endDate_ = endDateBuilder_ == null
              ? endDate_
              : endDateBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasScheduledStartDate()) {
          mergeScheduledStartDate(other.getScheduledStartDate());
        }
        if (other.hasActualStartDate()) {
          mergeActualStartDate(other.getActualStartDate());
        }
        if (other.hasEndDate()) {
          mergeEndDate(other.getEndDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getScheduledStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getActualStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getEndDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp scheduledStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> scheduledStartDateBuilder_;
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       * @return Whether the scheduledStartDate field is set.
       */
      public boolean hasScheduledStartDate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       * @return The scheduledStartDate.
       */
      public com.google.protobuf.Timestamp getScheduledStartDate() {
        if (scheduledStartDateBuilder_ == null) {
          return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        } else {
          return scheduledStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public Builder setScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduledStartDate_ = value;
        } else {
          scheduledStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public Builder setScheduledStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDate_ = builderForValue.build();
        } else {
          scheduledStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public Builder mergeScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            scheduledStartDate_ != null &&
            scheduledStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getScheduledStartDateBuilder().mergeFrom(value);
          } else {
            scheduledStartDate_ = value;
          }
        } else {
          scheduledStartDateBuilder_.mergeFrom(value);
        }
        if (scheduledStartDate_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public Builder clearScheduledStartDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getScheduledStartDateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getScheduledStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
        if (scheduledStartDateBuilder_ != null) {
          return scheduledStartDateBuilder_.getMessageOrBuilder();
        } else {
          return scheduledStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getScheduledStartDateFieldBuilder() {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getScheduledStartDate(),
                  getParentForChildren(),
                  isClean());
          scheduledStartDate_ = null;
        }
        return scheduledStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp actualStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> actualStartDateBuilder_;
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       * @return Whether the actualStartDate field is set.
       */
      public boolean hasActualStartDate() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       * @return The actualStartDate.
       */
      public com.google.protobuf.Timestamp getActualStartDate() {
        if (actualStartDateBuilder_ == null) {
          return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        } else {
          return actualStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public Builder setActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualStartDate_ = value;
        } else {
          actualStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public Builder setActualStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (actualStartDateBuilder_ == null) {
          actualStartDate_ = builderForValue.build();
        } else {
          actualStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public Builder mergeActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            actualStartDate_ != null &&
            actualStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getActualStartDateBuilder().mergeFrom(value);
          } else {
            actualStartDate_ = value;
          }
        } else {
          actualStartDateBuilder_.mergeFrom(value);
        }
        if (actualStartDate_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public Builder clearActualStartDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getActualStartDateBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getActualStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
        if (actualStartDateBuilder_ != null) {
          return actualStartDateBuilder_.getMessageOrBuilder();
        } else {
          return actualStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getActualStartDateFieldBuilder() {
        if (actualStartDateBuilder_ == null) {
          actualStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getActualStartDate(),
                  getParentForChildren(),
                  isClean());
          actualStartDate_ = null;
        }
        return actualStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp endDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endDateBuilder_;
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       * @return Whether the endDate field is set.
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       * @return The endDate.
       */
      public com.google.protobuf.Timestamp getEndDate() {
        if (endDateBuilder_ == null) {
          return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        } else {
          return endDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public Builder setEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endDate_ = value;
        } else {
          endDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public Builder setEndDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endDateBuilder_ == null) {
          endDate_ = builderForValue.build();
        } else {
          endDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public Builder mergeEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            endDate_ != null &&
            endDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getEndDateBuilder().mergeFrom(value);
          } else {
            endDate_ = value;
          }
        } else {
          endDateBuilder_.mergeFrom(value);
        }
        if (endDate_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndDateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getEndDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
        if (endDateBuilder_ != null) {
          return endDateBuilder_.getMessageOrBuilder();
        } else {
          return endDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndDateFieldBuilder() {
        if (endDateBuilder_ == null) {
          endDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndDate(),
                  getParentForChildren(),
                  isClean());
          endDate_ = null;
        }
        return endDateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.EventLimitedFieldsResponse)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.EventLimitedFieldsResponse)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventLimitedFieldsResponse>
        PARSER = new com.google.protobuf.AbstractParser<EventLimitedFieldsResponse>() {
      @java.lang.Override
      public EventLimitedFieldsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventLimitedFieldsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventLimitedFieldsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventLimitedFieldsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.EventLimitedFieldsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PassKit generated production id (22 characters).
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    java.lang.String getProductionId();
    /**
     * <pre>
     * PassKit generated production id (22 characters).
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    com.google.protobuf.ByteString
        getProductionIdBytes();

    /**
     * <pre>
     * PassKit generated venue id (22 characters).
     * </pre>
     *
     * <code>string venueId = 2;</code>
     * @return The venueId.
     */
    java.lang.String getVenueId();
    /**
     * <pre>
     * PassKit generated venue id (22 characters).
     * </pre>
     *
     * <code>string venueId = 2;</code>
     * @return The bytes for venueId.
     */
    com.google.protobuf.ByteString
        getVenueIdBytes();

    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     * @return Whether the doorsOpen field is set.
     */
    boolean hasDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     * @return The doorsOpen.
     */
    com.google.protobuf.Timestamp getDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder();

    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    boolean hasScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     * @return The scheduledStartDate.
     */
    com.google.protobuf.Timestamp getScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder();

    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     * @return Whether the actualStartDate field is set.
     */
    boolean hasActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     * @return The actualStartDate.
     */
    com.google.protobuf.Timestamp getActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     */
    com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder();

    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     * @return Whether the endDate field is set.
     */
    boolean hasEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     * @return The endDate.
     */
    com.google.protobuf.Timestamp getEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder();

    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     * @return Whether the relevantDate field is set.
     */
    boolean hasRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     * @return The relevantDate.
     */
    com.google.protobuf.Timestamp getRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     */
    com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder();

    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     * @return Whether the quota field is set.
     */
    boolean hasQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     * @return The quota.
     */
    com.passkit.grpc.Billing.Quota getQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     */
    com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder();

    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     * @return Whether the metrics field is set.
     */
    boolean hasMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     * @return The metrics.
     */
    com.passkit.grpc.MetricsOuterClass.Metrics getMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     */
    com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder();

    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     * @return Whether the created field is set.
     */
    boolean hasCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     * @return The created.
     */
    com.google.protobuf.Timestamp getCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder();

    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     * @return Whether the updated field is set.
     */
    boolean hasUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     * @return The updated.
     */
    com.google.protobuf.Timestamp getUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder();
  }
  /**
   * Protobuf type {@code event_tickets.EventLimitedFieldsRequest}
   */
  public static final class EventLimitedFieldsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.EventLimitedFieldsRequest)
      EventLimitedFieldsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventLimitedFieldsRequest.newBuilder() to construct.
    private EventLimitedFieldsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventLimitedFieldsRequest() {
      productionId_ = "";
      venueId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventLimitedFieldsRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int PRODUCTIONID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object productionId_ = "";
    /**
     * <pre>
     * PassKit generated production id (22 characters).
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The productionId.
     */
    @java.lang.Override
    public java.lang.String getProductionId() {
      java.lang.Object ref = productionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        productionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PassKit generated production id (22 characters).
     * </pre>
     *
     * <code>string productionId = 1;</code>
     * @return The bytes for productionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProductionIdBytes() {
      java.lang.Object ref = productionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        productionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VENUEID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object venueId_ = "";
    /**
     * <pre>
     * PassKit generated venue id (22 characters).
     * </pre>
     *
     * <code>string venueId = 2;</code>
     * @return The venueId.
     */
    @java.lang.Override
    public java.lang.String getVenueId() {
      java.lang.Object ref = venueId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        venueId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PassKit generated venue id (22 characters).
     * </pre>
     *
     * <code>string venueId = 2;</code>
     * @return The bytes for venueId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVenueIdBytes() {
      java.lang.Object ref = venueId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        venueId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOORSOPEN_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp doorsOpen_;
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     * @return Whether the doorsOpen field is set.
     */
    @java.lang.Override
    public boolean hasDoorsOpen() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     * @return The doorsOpen.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getDoorsOpen() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }

    public static final int SCHEDULEDSTARTDATE_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp scheduledStartDate_;
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    @java.lang.Override
    public boolean hasScheduledStartDate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     * @return The scheduledStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getScheduledStartDate() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }

    public static final int ACTUALSTARTDATE_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp actualStartDate_;
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     * @return Whether the actualStartDate field is set.
     */
    @java.lang.Override
    public boolean hasActualStartDate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     * @return The actualStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getActualStartDate() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }

    public static final int ENDDATE_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp endDate_;
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     * @return Whether the endDate field is set.
     */
    @java.lang.Override
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     * @return The endDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndDate() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }

    public static final int RELEVANTDATE_FIELD_NUMBER = 7;
    private com.google.protobuf.Timestamp relevantDate_;
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     * @return Whether the relevantDate field is set.
     */
    @java.lang.Override
    public boolean hasRelevantDate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     * @return The relevantDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getRelevantDate() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }

    public static final int QUOTA_FIELD_NUMBER = 8;
    private com.passkit.grpc.Billing.Quota quota_;
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     * @return Whether the quota field is set.
     */
    @java.lang.Override
    public boolean hasQuota() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     * @return The quota.
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.Quota getQuota() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 8;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }

    public static final int METRICS_FIELD_NUMBER = 9;
    private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     * @return Whether the metrics field is set.
     */
    @java.lang.Override
    public boolean hasMetrics() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     * @return The metrics.
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 9;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }

    public static final int CREATED_FIELD_NUMBER = 10;
    private com.google.protobuf.Timestamp created_;
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     * @return Whether the created field is set.
     */
    @java.lang.Override
    public boolean hasCreated() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     * @return The created.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreated() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }

    public static final int UPDATED_FIELD_NUMBER = 11;
    private com.google.protobuf.Timestamp updated_;
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     * @return Whether the updated field is set.
     */
    @java.lang.Override
    public boolean hasUpdated() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     * @return The updated.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdated() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(productionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, productionId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(venueId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, venueId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(5, getActualStartDate());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(6, getEndDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getRelevantDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(8, getQuota());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(9, getMetrics());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(10, getCreated());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(11, getUpdated());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(productionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, productionId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(venueId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, venueId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getActualStartDate());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getEndDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRelevantDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getQuota());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMetrics());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getCreated());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getUpdated());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest other = (com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest) obj;

      if (!getProductionId()
          .equals(other.getProductionId())) return false;
      if (!getVenueId()
          .equals(other.getVenueId())) return false;
      if (hasDoorsOpen() != other.hasDoorsOpen()) return false;
      if (hasDoorsOpen()) {
        if (!getDoorsOpen()
            .equals(other.getDoorsOpen())) return false;
      }
      if (hasScheduledStartDate() != other.hasScheduledStartDate()) return false;
      if (hasScheduledStartDate()) {
        if (!getScheduledStartDate()
            .equals(other.getScheduledStartDate())) return false;
      }
      if (hasActualStartDate() != other.hasActualStartDate()) return false;
      if (hasActualStartDate()) {
        if (!getActualStartDate()
            .equals(other.getActualStartDate())) return false;
      }
      if (hasEndDate() != other.hasEndDate()) return false;
      if (hasEndDate()) {
        if (!getEndDate()
            .equals(other.getEndDate())) return false;
      }
      if (hasRelevantDate() != other.hasRelevantDate()) return false;
      if (hasRelevantDate()) {
        if (!getRelevantDate()
            .equals(other.getRelevantDate())) return false;
      }
      if (hasQuota() != other.hasQuota()) return false;
      if (hasQuota()) {
        if (!getQuota()
            .equals(other.getQuota())) return false;
      }
      if (hasMetrics() != other.hasMetrics()) return false;
      if (hasMetrics()) {
        if (!getMetrics()
            .equals(other.getMetrics())) return false;
      }
      if (hasCreated() != other.hasCreated()) return false;
      if (hasCreated()) {
        if (!getCreated()
            .equals(other.getCreated())) return false;
      }
      if (hasUpdated() != other.hasUpdated()) return false;
      if (hasUpdated()) {
        if (!getUpdated()
            .equals(other.getUpdated())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PRODUCTIONID_FIELD_NUMBER;
      hash = (53 * hash) + getProductionId().hashCode();
      hash = (37 * hash) + VENUEID_FIELD_NUMBER;
      hash = (53 * hash) + getVenueId().hashCode();
      if (hasDoorsOpen()) {
        hash = (37 * hash) + DOORSOPEN_FIELD_NUMBER;
        hash = (53 * hash) + getDoorsOpen().hashCode();
      }
      if (hasScheduledStartDate()) {
        hash = (37 * hash) + SCHEDULEDSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledStartDate().hashCode();
      }
      if (hasActualStartDate()) {
        hash = (37 * hash) + ACTUALSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getActualStartDate().hashCode();
      }
      if (hasEndDate()) {
        hash = (37 * hash) + ENDDATE_FIELD_NUMBER;
        hash = (53 * hash) + getEndDate().hashCode();
      }
      if (hasRelevantDate()) {
        hash = (37 * hash) + RELEVANTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getRelevantDate().hashCode();
      }
      if (hasQuota()) {
        hash = (37 * hash) + QUOTA_FIELD_NUMBER;
        hash = (53 * hash) + getQuota().hashCode();
      }
      if (hasMetrics()) {
        hash = (37 * hash) + METRICS_FIELD_NUMBER;
        hash = (53 * hash) + getMetrics().hashCode();
      }
      if (hasCreated()) {
        hash = (37 * hash) + CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getCreated().hashCode();
      }
      if (hasUpdated()) {
        hash = (37 * hash) + UPDATED_FIELD_NUMBER;
        hash = (53 * hash) + getUpdated().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.EventLimitedFieldsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.EventLimitedFieldsRequest)
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.class, com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDoorsOpenFieldBuilder();
          getScheduledStartDateFieldBuilder();
          getActualStartDateFieldBuilder();
          getEndDateFieldBuilder();
          getRelevantDateFieldBuilder();
          getQuotaFieldBuilder();
          getMetricsFieldBuilder();
          getCreatedFieldBuilder();
          getUpdatedFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        productionId_ = "";
        venueId_ = "";
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventLimitedFieldsRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest build() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest result = new com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.productionId_ = productionId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.venueId_ = venueId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.doorsOpen_ = doorsOpenBuilder_ == null
              ? doorsOpen_
              : doorsOpenBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.scheduledStartDate_ = scheduledStartDateBuilder_ == null
              ? scheduledStartDate_
              : scheduledStartDateBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.actualStartDate_ = actualStartDateBuilder_ == null
              ? actualStartDate_
              : actualStartDateBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.endDate_ = endDateBuilder_ == null
              ? endDate_
              : endDateBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.relevantDate_ = relevantDateBuilder_ == null
              ? relevantDate_
              : relevantDateBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.quota_ = quotaBuilder_ == null
              ? quota_
              : quotaBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.metrics_ = metricsBuilder_ == null
              ? metrics_
              : metricsBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.created_ = createdBuilder_ == null
              ? created_
              : createdBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.updated_ = updatedBuilder_ == null
              ? updated_
              : updatedBuilder_.build();
          to_bitField0_ |= 0x00000100;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest.getDefaultInstance()) return this;
        if (!other.getProductionId().isEmpty()) {
          productionId_ = other.productionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getVenueId().isEmpty()) {
          venueId_ = other.venueId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasDoorsOpen()) {
          mergeDoorsOpen(other.getDoorsOpen());
        }
        if (other.hasScheduledStartDate()) {
          mergeScheduledStartDate(other.getScheduledStartDate());
        }
        if (other.hasActualStartDate()) {
          mergeActualStartDate(other.getActualStartDate());
        }
        if (other.hasEndDate()) {
          mergeEndDate(other.getEndDate());
        }
        if (other.hasRelevantDate()) {
          mergeRelevantDate(other.getRelevantDate());
        }
        if (other.hasQuota()) {
          mergeQuota(other.getQuota());
        }
        if (other.hasMetrics()) {
          mergeMetrics(other.getMetrics());
        }
        if (other.hasCreated()) {
          mergeCreated(other.getCreated());
        }
        if (other.hasUpdated()) {
          mergeUpdated(other.getUpdated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                productionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                venueId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getDoorsOpenFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getScheduledStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getActualStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getEndDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getRelevantDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getQuotaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getMetricsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getCreatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getUpdatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object productionId_ = "";
      /**
       * <pre>
       * PassKit generated production id (22 characters).
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The productionId.
       */
      public java.lang.String getProductionId() {
        java.lang.Object ref = productionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          productionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated production id (22 characters).
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return The bytes for productionId.
       */
      public com.google.protobuf.ByteString
          getProductionIdBytes() {
        java.lang.Object ref = productionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          productionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated production id (22 characters).
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        productionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated production id (22 characters).
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductionId() {
        productionId_ = getDefaultInstance().getProductionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated production id (22 characters).
       * </pre>
       *
       * <code>string productionId = 1;</code>
       * @param value The bytes for productionId to set.
       * @return This builder for chaining.
       */
      public Builder setProductionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        productionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object venueId_ = "";
      /**
       * <pre>
       * PassKit generated venue id (22 characters).
       * </pre>
       *
       * <code>string venueId = 2;</code>
       * @return The venueId.
       */
      public java.lang.String getVenueId() {
        java.lang.Object ref = venueId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          venueId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated venue id (22 characters).
       * </pre>
       *
       * <code>string venueId = 2;</code>
       * @return The bytes for venueId.
       */
      public com.google.protobuf.ByteString
          getVenueIdBytes() {
        java.lang.Object ref = venueId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          venueId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated venue id (22 characters).
       * </pre>
       *
       * <code>string venueId = 2;</code>
       * @param value The venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        venueId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated venue id (22 characters).
       * </pre>
       *
       * <code>string venueId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVenueId() {
        venueId_ = getDefaultInstance().getVenueId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated venue id (22 characters).
       * </pre>
       *
       * <code>string venueId = 2;</code>
       * @param value The bytes for venueId to set.
       * @return This builder for chaining.
       */
      public Builder setVenueIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        venueId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp doorsOpen_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> doorsOpenBuilder_;
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       * @return Whether the doorsOpen field is set.
       */
      public boolean hasDoorsOpen() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       * @return The doorsOpen.
       */
      public com.google.protobuf.Timestamp getDoorsOpen() {
        if (doorsOpenBuilder_ == null) {
          return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        } else {
          return doorsOpenBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public Builder setDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          doorsOpen_ = value;
        } else {
          doorsOpenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public Builder setDoorsOpen(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (doorsOpenBuilder_ == null) {
          doorsOpen_ = builderForValue.build();
        } else {
          doorsOpenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public Builder mergeDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            doorsOpen_ != null &&
            doorsOpen_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getDoorsOpenBuilder().mergeFrom(value);
          } else {
            doorsOpen_ = value;
          }
        } else {
          doorsOpenBuilder_.mergeFrom(value);
        }
        if (doorsOpen_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public Builder clearDoorsOpen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getDoorsOpenBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDoorsOpenFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
        if (doorsOpenBuilder_ != null) {
          return doorsOpenBuilder_.getMessageOrBuilder();
        } else {
          return doorsOpen_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getDoorsOpenFieldBuilder() {
        if (doorsOpenBuilder_ == null) {
          doorsOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getDoorsOpen(),
                  getParentForChildren(),
                  isClean());
          doorsOpen_ = null;
        }
        return doorsOpenBuilder_;
      }

      private com.google.protobuf.Timestamp scheduledStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> scheduledStartDateBuilder_;
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       * @return Whether the scheduledStartDate field is set.
       */
      public boolean hasScheduledStartDate() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       * @return The scheduledStartDate.
       */
      public com.google.protobuf.Timestamp getScheduledStartDate() {
        if (scheduledStartDateBuilder_ == null) {
          return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        } else {
          return scheduledStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public Builder setScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduledStartDate_ = value;
        } else {
          scheduledStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public Builder setScheduledStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDate_ = builderForValue.build();
        } else {
          scheduledStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public Builder mergeScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            scheduledStartDate_ != null &&
            scheduledStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getScheduledStartDateBuilder().mergeFrom(value);
          } else {
            scheduledStartDate_ = value;
          }
        } else {
          scheduledStartDateBuilder_.mergeFrom(value);
        }
        if (scheduledStartDate_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public Builder clearScheduledStartDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getScheduledStartDateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getScheduledStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
        if (scheduledStartDateBuilder_ != null) {
          return scheduledStartDateBuilder_.getMessageOrBuilder();
        } else {
          return scheduledStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getScheduledStartDateFieldBuilder() {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getScheduledStartDate(),
                  getParentForChildren(),
                  isClean());
          scheduledStartDate_ = null;
        }
        return scheduledStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp actualStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> actualStartDateBuilder_;
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       * @return Whether the actualStartDate field is set.
       */
      public boolean hasActualStartDate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       * @return The actualStartDate.
       */
      public com.google.protobuf.Timestamp getActualStartDate() {
        if (actualStartDateBuilder_ == null) {
          return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        } else {
          return actualStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public Builder setActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualStartDate_ = value;
        } else {
          actualStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public Builder setActualStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (actualStartDateBuilder_ == null) {
          actualStartDate_ = builderForValue.build();
        } else {
          actualStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public Builder mergeActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            actualStartDate_ != null &&
            actualStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getActualStartDateBuilder().mergeFrom(value);
          } else {
            actualStartDate_ = value;
          }
        } else {
          actualStartDateBuilder_.mergeFrom(value);
        }
        if (actualStartDate_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public Builder clearActualStartDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public com.google.protobuf.Timestamp.Builder getActualStartDateBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getActualStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
        if (actualStartDateBuilder_ != null) {
          return actualStartDateBuilder_.getMessageOrBuilder();
        } else {
          return actualStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getActualStartDateFieldBuilder() {
        if (actualStartDateBuilder_ == null) {
          actualStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getActualStartDate(),
                  getParentForChildren(),
                  isClean());
          actualStartDate_ = null;
        }
        return actualStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp endDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endDateBuilder_;
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       * @return Whether the endDate field is set.
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       * @return The endDate.
       */
      public com.google.protobuf.Timestamp getEndDate() {
        if (endDateBuilder_ == null) {
          return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        } else {
          return endDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public Builder setEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endDate_ = value;
        } else {
          endDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public Builder setEndDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endDateBuilder_ == null) {
          endDate_ = builderForValue.build();
        } else {
          endDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public Builder mergeEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            endDate_ != null &&
            endDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getEndDateBuilder().mergeFrom(value);
          } else {
            endDate_ = value;
          }
        } else {
          endDateBuilder_.mergeFrom(value);
        }
        if (endDate_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndDateBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getEndDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
        if (endDateBuilder_ != null) {
          return endDateBuilder_.getMessageOrBuilder();
        } else {
          return endDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndDateFieldBuilder() {
        if (endDateBuilder_ == null) {
          endDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndDate(),
                  getParentForChildren(),
                  isClean());
          endDate_ = null;
        }
        return endDateBuilder_;
      }

      private com.google.protobuf.Timestamp relevantDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> relevantDateBuilder_;
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       * @return Whether the relevantDate field is set.
       */
      public boolean hasRelevantDate() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       * @return The relevantDate.
       */
      public com.google.protobuf.Timestamp getRelevantDate() {
        if (relevantDateBuilder_ == null) {
          return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        } else {
          return relevantDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public Builder setRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relevantDate_ = value;
        } else {
          relevantDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public Builder setRelevantDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (relevantDateBuilder_ == null) {
          relevantDate_ = builderForValue.build();
        } else {
          relevantDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public Builder mergeRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            relevantDate_ != null &&
            relevantDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getRelevantDateBuilder().mergeFrom(value);
          } else {
            relevantDate_ = value;
          }
        } else {
          relevantDateBuilder_.mergeFrom(value);
        }
        if (relevantDate_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public Builder clearRelevantDate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public com.google.protobuf.Timestamp.Builder getRelevantDateBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getRelevantDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
        if (relevantDateBuilder_ != null) {
          return relevantDateBuilder_.getMessageOrBuilder();
        } else {
          return relevantDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getRelevantDateFieldBuilder() {
        if (relevantDateBuilder_ == null) {
          relevantDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getRelevantDate(),
                  getParentForChildren(),
                  isClean());
          relevantDate_ = null;
        }
        return relevantDateBuilder_;
      }

      private com.passkit.grpc.Billing.Quota quota_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> quotaBuilder_;
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       * @return Whether the quota field is set.
       */
      public boolean hasQuota() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       * @return The quota.
       */
      public com.passkit.grpc.Billing.Quota getQuota() {
        if (quotaBuilder_ == null) {
          return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        } else {
          return quotaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public Builder setQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          quota_ = value;
        } else {
          quotaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public Builder setQuota(
          com.passkit.grpc.Billing.Quota.Builder builderForValue) {
        if (quotaBuilder_ == null) {
          quota_ = builderForValue.build();
        } else {
          quotaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public Builder mergeQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            quota_ != null &&
            quota_ != com.passkit.grpc.Billing.Quota.getDefaultInstance()) {
            getQuotaBuilder().mergeFrom(value);
          } else {
            quota_ = value;
          }
        } else {
          quotaBuilder_.mergeFrom(value);
        }
        if (quota_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public Builder clearQuota() {
        bitField0_ = (bitField0_ & ~0x00000080);
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public com.passkit.grpc.Billing.Quota.Builder getQuotaBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getQuotaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
        if (quotaBuilder_ != null) {
          return quotaBuilder_.getMessageOrBuilder();
        } else {
          return quota_ == null ?
              com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> 
          getQuotaFieldBuilder() {
        if (quotaBuilder_ == null) {
          quotaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder>(
                  getQuota(),
                  getParentForChildren(),
                  isClean());
          quota_ = null;
        }
        return quotaBuilder_;
      }

      private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> metricsBuilder_;
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       * @return Whether the metrics field is set.
       */
      public boolean hasMetrics() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       * @return The metrics.
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
        if (metricsBuilder_ == null) {
          return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        } else {
          return metricsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public Builder setMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metrics_ = value;
        } else {
          metricsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public Builder setMetrics(
          com.passkit.grpc.MetricsOuterClass.Metrics.Builder builderForValue) {
        if (metricsBuilder_ == null) {
          metrics_ = builderForValue.build();
        } else {
          metricsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public Builder mergeMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            metrics_ != null &&
            metrics_ != com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance()) {
            getMetricsBuilder().mergeFrom(value);
          } else {
            metrics_ = value;
          }
        } else {
          metricsBuilder_.mergeFrom(value);
        }
        if (metrics_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public Builder clearMetrics() {
        bitField0_ = (bitField0_ & ~0x00000100);
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics.Builder getMetricsBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getMetricsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
        if (metricsBuilder_ != null) {
          return metricsBuilder_.getMessageOrBuilder();
        } else {
          return metrics_ == null ?
              com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> 
          getMetricsFieldBuilder() {
        if (metricsBuilder_ == null) {
          metricsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder>(
                  getMetrics(),
                  getParentForChildren(),
                  isClean());
          metrics_ = null;
        }
        return metricsBuilder_;
      }

      private com.google.protobuf.Timestamp created_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdBuilder_;
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       * @return Whether the created field is set.
       */
      public boolean hasCreated() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       * @return The created.
       */
      public com.google.protobuf.Timestamp getCreated() {
        if (createdBuilder_ == null) {
          return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        } else {
          return createdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public Builder setCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          created_ = value;
        } else {
          createdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public Builder setCreated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (createdBuilder_ == null) {
          created_ = builderForValue.build();
        } else {
          createdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public Builder mergeCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            created_ != null &&
            created_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getCreatedBuilder().mergeFrom(value);
          } else {
            created_ = value;
          }
        } else {
          createdBuilder_.mergeFrom(value);
        }
        if (created_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public Builder clearCreated() {
        bitField0_ = (bitField0_ & ~0x00000200);
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreatedBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getCreatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
        if (createdBuilder_ != null) {
          return createdBuilder_.getMessageOrBuilder();
        } else {
          return created_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreatedFieldBuilder() {
        if (createdBuilder_ == null) {
          createdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreated(),
                  getParentForChildren(),
                  isClean());
          created_ = null;
        }
        return createdBuilder_;
      }

      private com.google.protobuf.Timestamp updated_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updatedBuilder_;
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       * @return Whether the updated field is set.
       */
      public boolean hasUpdated() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       * @return The updated.
       */
      public com.google.protobuf.Timestamp getUpdated() {
        if (updatedBuilder_ == null) {
          return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        } else {
          return updatedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public Builder setUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updated_ = value;
        } else {
          updatedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public Builder setUpdated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updatedBuilder_ == null) {
          updated_ = builderForValue.build();
        } else {
          updatedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public Builder mergeUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            updated_ != null &&
            updated_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getUpdatedBuilder().mergeFrom(value);
          } else {
            updated_ = value;
          }
        } else {
          updatedBuilder_.mergeFrom(value);
        }
        if (updated_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public Builder clearUpdated() {
        bitField0_ = (bitField0_ & ~0x00000400);
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdatedBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getUpdatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
        if (updatedBuilder_ != null) {
          return updatedBuilder_.getMessageOrBuilder();
        } else {
          return updated_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdatedFieldBuilder() {
        if (updatedBuilder_ == null) {
          updatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdated(),
                  getParentForChildren(),
                  isClean());
          updated_ = null;
        }
        return updatedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.EventLimitedFieldsRequest)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.EventLimitedFieldsRequest)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventLimitedFieldsRequest>
        PARSER = new com.google.protobuf.AbstractParser<EventLimitedFieldsRequest>() {
      @java.lang.Override
      public EventLimitedFieldsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventLimitedFieldsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventLimitedFieldsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.EventLimitedFieldsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_tickets.EventListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     * @return Whether the production field is set.
     */
    boolean hasProduction();
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     * @return The production.
     */
    com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse getProduction();
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     */
    com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder getProductionOrBuilder();

    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     * @return Whether the venue field is set.
     */
    boolean hasVenue();
    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     * @return The venue.
     */
    com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse getVenue();
    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     */
    com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder getVenueOrBuilder();

    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return Whether the doorsOpen field is set.
     */
    boolean hasDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return The doorsOpen.
     */
    com.google.protobuf.Timestamp getDoorsOpen();
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder();

    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    boolean hasScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    com.google.protobuf.Timestamp getScheduledStartDate();
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder();

    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return Whether the actualStartDate field is set.
     */
    boolean hasActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return The actualStartDate.
     */
    com.google.protobuf.Timestamp getActualStartDate();
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder();

    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return Whether the endDate field is set.
     */
    boolean hasEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return The endDate.
     */
    com.google.protobuf.Timestamp getEndDate();
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder();

    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return Whether the relevantDate field is set.
     */
    boolean hasRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return The relevantDate.
     */
    com.google.protobuf.Timestamp getRelevantDate();
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     */
    com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder();

    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return Whether the quota field is set.
     */
    boolean hasQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return The quota.
     */
    com.passkit.grpc.Billing.Quota getQuota();
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     */
    com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder();

    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     * @return Whether the metrics field is set.
     */
    boolean hasMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     * @return The metrics.
     */
    com.passkit.grpc.MetricsOuterClass.Metrics getMetrics();
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     */
    com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder();

    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     * @return Whether the created field is set.
     */
    boolean hasCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     * @return The created.
     */
    com.google.protobuf.Timestamp getCreated();
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder();

    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     * @return Whether the updated field is set.
     */
    boolean hasUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     * @return The updated.
     */
    com.google.protobuf.Timestamp getUpdated();
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder();
  }
  /**
   * Protobuf type {@code event_tickets.EventListResponse}
   */
  public static final class EventListResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_tickets.EventListResponse)
      EventListResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventListResponse.newBuilder() to construct.
    private EventListResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventListResponse() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventListResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.class, com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PassKit generated event id (22 characters).
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCTION_FIELD_NUMBER = 2;
    private com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse production_;
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     * @return Whether the production field is set.
     */
    @java.lang.Override
    public boolean hasProduction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     * @return The production.
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse getProduction() {
      return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.getDefaultInstance() : production_;
    }
    /**
     * <pre>
     * The production that the event belongs to. In case of a create, only the production id needs to be provided.
     * </pre>
     *
     * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder getProductionOrBuilder() {
      return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.getDefaultInstance() : production_;
    }

    public static final int VENUE_FIELD_NUMBER = 3;
    private com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse venue_;
    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     * @return Whether the venue field is set.
     */
    @java.lang.Override
    public boolean hasVenue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     * @return The venue.
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse getVenue() {
      return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.getDefaultInstance() : venue_;
    }
    /**
     * <pre>
     * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
     * </pre>
     *
     * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder getVenueOrBuilder() {
      return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.getDefaultInstance() : venue_;
    }

    public static final int DOORSOPEN_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp doorsOpen_;
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return Whether the doorsOpen field is set.
     */
    @java.lang.Override
    public boolean hasDoorsOpen() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     * @return The doorsOpen.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getDoorsOpen() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }
    /**
     * <pre>
     * The date/time when the doors open at the venue.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
      return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
    }

    public static final int SCHEDULEDSTARTDATE_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp scheduledStartDate_;
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return Whether the scheduledStartDate field is set.
     */
    @java.lang.Override
    public boolean hasScheduledStartDate() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     * @return The scheduledStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getScheduledStartDate() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }
    /**
     * <pre>
     * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
      return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
    }

    public static final int ACTUALSTARTDATE_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp actualStartDate_;
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return Whether the actualStartDate field is set.
     */
    @java.lang.Override
    public boolean hasActualStartDate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     * @return The actualStartDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getActualStartDate() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }
    /**
     * <pre>
     * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
      return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
    }

    public static final int ENDDATE_FIELD_NUMBER = 7;
    private com.google.protobuf.Timestamp endDate_;
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return Whether the endDate field is set.
     */
    @java.lang.Override
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     * @return The endDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndDate() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }
    /**
     * <pre>
     * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp endDate = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
      return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
    }

    public static final int RELEVANTDATE_FIELD_NUMBER = 8;
    private com.google.protobuf.Timestamp relevantDate_;
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return Whether the relevantDate field is set.
     */
    @java.lang.Override
    public boolean hasRelevantDate() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     * @return The relevantDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getRelevantDate() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }
    /**
     * <pre>
     * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
      return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
    }

    public static final int QUOTA_FIELD_NUMBER = 9;
    private com.passkit.grpc.Billing.Quota quota_;
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return Whether the quota field is set.
     */
    @java.lang.Override
    public boolean hasQuota() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     * @return The quota.
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.Quota getQuota() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }
    /**
     * <pre>
     * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
     * </pre>
     *
     * <code>.io.Quota quota = 9;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
      return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
    }

    public static final int METRICS_FIELD_NUMBER = 10;
    private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     * @return Whether the metrics field is set.
     */
    @java.lang.Override
    public boolean hasMetrics() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     * @return The metrics.
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }
    /**
     * <pre>
     * Performance analytics for the event. Not writable.
     * </pre>
     *
     * <code>.io.Metrics metrics = 10;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
      return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
    }

    public static final int CREATED_FIELD_NUMBER = 11;
    private com.google.protobuf.Timestamp created_;
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     * @return Whether the created field is set.
     */
    @java.lang.Override
    public boolean hasCreated() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     * @return The created.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreated() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }
    /**
     * <pre>
     * The date the event was created. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }

    public static final int UPDATED_FIELD_NUMBER = 12;
    private com.google.protobuf.Timestamp updated_;
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     * @return Whether the updated field is set.
     */
    @java.lang.Override
    public boolean hasUpdated() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     * @return The updated.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdated() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }
    /**
     * <pre>
     * The date the event updated. Not writable.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 12;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getProduction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getVenue());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getActualStartDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(7, getEndDate());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(8, getRelevantDate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(9, getQuota());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(10, getMetrics());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(11, getCreated());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(12, getUpdated());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProduction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVenue());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDoorsOpen());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getScheduledStartDate());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getActualStartDate());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getEndDate());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRelevantDate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getQuota());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMetrics());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getCreated());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getUpdated());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse)) {
        return super.equals(obj);
      }
      com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse other = (com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasProduction() != other.hasProduction()) return false;
      if (hasProduction()) {
        if (!getProduction()
            .equals(other.getProduction())) return false;
      }
      if (hasVenue() != other.hasVenue()) return false;
      if (hasVenue()) {
        if (!getVenue()
            .equals(other.getVenue())) return false;
      }
      if (hasDoorsOpen() != other.hasDoorsOpen()) return false;
      if (hasDoorsOpen()) {
        if (!getDoorsOpen()
            .equals(other.getDoorsOpen())) return false;
      }
      if (hasScheduledStartDate() != other.hasScheduledStartDate()) return false;
      if (hasScheduledStartDate()) {
        if (!getScheduledStartDate()
            .equals(other.getScheduledStartDate())) return false;
      }
      if (hasActualStartDate() != other.hasActualStartDate()) return false;
      if (hasActualStartDate()) {
        if (!getActualStartDate()
            .equals(other.getActualStartDate())) return false;
      }
      if (hasEndDate() != other.hasEndDate()) return false;
      if (hasEndDate()) {
        if (!getEndDate()
            .equals(other.getEndDate())) return false;
      }
      if (hasRelevantDate() != other.hasRelevantDate()) return false;
      if (hasRelevantDate()) {
        if (!getRelevantDate()
            .equals(other.getRelevantDate())) return false;
      }
      if (hasQuota() != other.hasQuota()) return false;
      if (hasQuota()) {
        if (!getQuota()
            .equals(other.getQuota())) return false;
      }
      if (hasMetrics() != other.hasMetrics()) return false;
      if (hasMetrics()) {
        if (!getMetrics()
            .equals(other.getMetrics())) return false;
      }
      if (hasCreated() != other.hasCreated()) return false;
      if (hasCreated()) {
        if (!getCreated()
            .equals(other.getCreated())) return false;
      }
      if (hasUpdated() != other.hasUpdated()) return false;
      if (hasUpdated()) {
        if (!getUpdated()
            .equals(other.getUpdated())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasProduction()) {
        hash = (37 * hash) + PRODUCTION_FIELD_NUMBER;
        hash = (53 * hash) + getProduction().hashCode();
      }
      if (hasVenue()) {
        hash = (37 * hash) + VENUE_FIELD_NUMBER;
        hash = (53 * hash) + getVenue().hashCode();
      }
      if (hasDoorsOpen()) {
        hash = (37 * hash) + DOORSOPEN_FIELD_NUMBER;
        hash = (53 * hash) + getDoorsOpen().hashCode();
      }
      if (hasScheduledStartDate()) {
        hash = (37 * hash) + SCHEDULEDSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledStartDate().hashCode();
      }
      if (hasActualStartDate()) {
        hash = (37 * hash) + ACTUALSTARTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getActualStartDate().hashCode();
      }
      if (hasEndDate()) {
        hash = (37 * hash) + ENDDATE_FIELD_NUMBER;
        hash = (53 * hash) + getEndDate().hashCode();
      }
      if (hasRelevantDate()) {
        hash = (37 * hash) + RELEVANTDATE_FIELD_NUMBER;
        hash = (53 * hash) + getRelevantDate().hashCode();
      }
      if (hasQuota()) {
        hash = (37 * hash) + QUOTA_FIELD_NUMBER;
        hash = (53 * hash) + getQuota().hashCode();
      }
      if (hasMetrics()) {
        hash = (37 * hash) + METRICS_FIELD_NUMBER;
        hash = (53 * hash) + getMetrics().hashCode();
      }
      if (hasCreated()) {
        hash = (37 * hash) + CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getCreated().hashCode();
      }
      if (hasUpdated()) {
        hash = (37 * hash) + UPDATED_FIELD_NUMBER;
        hash = (53 * hash) + getUpdated().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_tickets.EventListResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_tickets.EventListResponse)
        com.passkit.grpc.EventTickets.EventOuterClass.EventListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.class, com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.Builder.class);
      }

      // Construct using com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getProductionFieldBuilder();
          getVenueFieldBuilder();
          getDoorsOpenFieldBuilder();
          getScheduledStartDateFieldBuilder();
          getActualStartDateFieldBuilder();
          getEndDateFieldBuilder();
          getRelevantDateFieldBuilder();
          getQuotaFieldBuilder();
          getMetricsFieldBuilder();
          getCreatedFieldBuilder();
          getUpdatedFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        production_ = null;
        if (productionBuilder_ != null) {
          productionBuilder_.dispose();
          productionBuilder_ = null;
        }
        venue_ = null;
        if (venueBuilder_ != null) {
          venueBuilder_.dispose();
          venueBuilder_ = null;
        }
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.internal_static_event_tickets_EventListResponse_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse getDefaultInstanceForType() {
        return com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse build() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse buildPartial() {
        com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse result = new com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.production_ = productionBuilder_ == null
              ? production_
              : productionBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.venue_ = venueBuilder_ == null
              ? venue_
              : venueBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.doorsOpen_ = doorsOpenBuilder_ == null
              ? doorsOpen_
              : doorsOpenBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.scheduledStartDate_ = scheduledStartDateBuilder_ == null
              ? scheduledStartDate_
              : scheduledStartDateBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.actualStartDate_ = actualStartDateBuilder_ == null
              ? actualStartDate_
              : actualStartDateBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.endDate_ = endDateBuilder_ == null
              ? endDate_
              : endDateBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.relevantDate_ = relevantDateBuilder_ == null
              ? relevantDate_
              : relevantDateBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.quota_ = quotaBuilder_ == null
              ? quota_
              : quotaBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.metrics_ = metricsBuilder_ == null
              ? metrics_
              : metricsBuilder_.build();
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.created_ = createdBuilder_ == null
              ? created_
              : createdBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.updated_ = updatedBuilder_ == null
              ? updated_
              : updatedBuilder_.build();
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse) {
          return mergeFrom((com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse other) {
        if (other == com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasProduction()) {
          mergeProduction(other.getProduction());
        }
        if (other.hasVenue()) {
          mergeVenue(other.getVenue());
        }
        if (other.hasDoorsOpen()) {
          mergeDoorsOpen(other.getDoorsOpen());
        }
        if (other.hasScheduledStartDate()) {
          mergeScheduledStartDate(other.getScheduledStartDate());
        }
        if (other.hasActualStartDate()) {
          mergeActualStartDate(other.getActualStartDate());
        }
        if (other.hasEndDate()) {
          mergeEndDate(other.getEndDate());
        }
        if (other.hasRelevantDate()) {
          mergeRelevantDate(other.getRelevantDate());
        }
        if (other.hasQuota()) {
          mergeQuota(other.getQuota());
        }
        if (other.hasMetrics()) {
          mergeMetrics(other.getMetrics());
        }
        if (other.hasCreated()) {
          mergeCreated(other.getCreated());
        }
        if (other.hasUpdated()) {
          mergeUpdated(other.getUpdated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getProductionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getVenueFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDoorsOpenFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getScheduledStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getActualStartDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getEndDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getRelevantDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getQuotaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getMetricsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getCreatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getUpdatedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PassKit generated event id (22 characters).
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse production_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder> productionBuilder_;
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       * @return Whether the production field is set.
       */
      public boolean hasProduction() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       * @return The production.
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse getProduction() {
        if (productionBuilder_ == null) {
          return production_ == null ? com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.getDefaultInstance() : production_;
        } else {
          return productionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public Builder setProduction(com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse value) {
        if (productionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          production_ = value;
        } else {
          productionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public Builder setProduction(
          com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.Builder builderForValue) {
        if (productionBuilder_ == null) {
          production_ = builderForValue.build();
        } else {
          productionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public Builder mergeProduction(com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse value) {
        if (productionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            production_ != null &&
            production_ != com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.getDefaultInstance()) {
            getProductionBuilder().mergeFrom(value);
          } else {
            production_ = value;
          }
        } else {
          productionBuilder_.mergeFrom(value);
        }
        if (production_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public Builder clearProduction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        production_ = null;
        if (productionBuilder_ != null) {
          productionBuilder_.dispose();
          productionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.Builder getProductionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProductionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      public com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder getProductionOrBuilder() {
        if (productionBuilder_ != null) {
          return productionBuilder_.getMessageOrBuilder();
        } else {
          return production_ == null ?
              com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.getDefaultInstance() : production_;
        }
      }
      /**
       * <pre>
       * The production that the event belongs to. In case of a create, only the production id needs to be provided.
       * </pre>
       *
       * <code>.event_tickets.ProductionLimitedFieldsResponse production = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder> 
          getProductionFieldBuilder() {
        if (productionBuilder_ == null) {
          productionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.ProductionOuterClass.ProductionLimitedFieldsResponseOrBuilder>(
                  getProduction(),
                  getParentForChildren(),
                  isClean());
          production_ = null;
        }
        return productionBuilder_;
      }

      private com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse venue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder> venueBuilder_;
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       * @return Whether the venue field is set.
       */
      public boolean hasVenue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       * @return The venue.
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse getVenue() {
        if (venueBuilder_ == null) {
          return venue_ == null ? com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.getDefaultInstance() : venue_;
        } else {
          return venueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public Builder setVenue(com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse value) {
        if (venueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          venue_ = value;
        } else {
          venueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public Builder setVenue(
          com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.Builder builderForValue) {
        if (venueBuilder_ == null) {
          venue_ = builderForValue.build();
        } else {
          venueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public Builder mergeVenue(com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse value) {
        if (venueBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            venue_ != null &&
            venue_ != com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.getDefaultInstance()) {
            getVenueBuilder().mergeFrom(value);
          } else {
            venue_ = value;
          }
        } else {
          venueBuilder_.mergeFrom(value);
        }
        if (venue_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public Builder clearVenue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        venue_ = null;
        if (venueBuilder_ != null) {
          venueBuilder_.dispose();
          venueBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.Builder getVenueBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVenueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      public com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder getVenueOrBuilder() {
        if (venueBuilder_ != null) {
          return venueBuilder_.getMessageOrBuilder();
        } else {
          return venue_ == null ?
              com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.getDefaultInstance() : venue_;
        }
      }
      /**
       * <pre>
       * The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
       * </pre>
       *
       * <code>.event_tickets.VenueLimitedFieldsResponse venue = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder> 
          getVenueFieldBuilder() {
        if (venueBuilder_ == null) {
          venueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponse.Builder, com.passkit.grpc.EventTickets.VenueOuterClass.VenueLimitedFieldsResponseOrBuilder>(
                  getVenue(),
                  getParentForChildren(),
                  isClean());
          venue_ = null;
        }
        return venueBuilder_;
      }

      private com.google.protobuf.Timestamp doorsOpen_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> doorsOpenBuilder_;
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       * @return Whether the doorsOpen field is set.
       */
      public boolean hasDoorsOpen() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       * @return The doorsOpen.
       */
      public com.google.protobuf.Timestamp getDoorsOpen() {
        if (doorsOpenBuilder_ == null) {
          return doorsOpen_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        } else {
          return doorsOpenBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder setDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          doorsOpen_ = value;
        } else {
          doorsOpenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder setDoorsOpen(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (doorsOpenBuilder_ == null) {
          doorsOpen_ = builderForValue.build();
        } else {
          doorsOpenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder mergeDoorsOpen(com.google.protobuf.Timestamp value) {
        if (doorsOpenBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            doorsOpen_ != null &&
            doorsOpen_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getDoorsOpenBuilder().mergeFrom(value);
          } else {
            doorsOpen_ = value;
          }
        } else {
          doorsOpenBuilder_.mergeFrom(value);
        }
        if (doorsOpen_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public Builder clearDoorsOpen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doorsOpen_ = null;
        if (doorsOpenBuilder_ != null) {
          doorsOpenBuilder_.dispose();
          doorsOpenBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getDoorsOpenBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDoorsOpenFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getDoorsOpenOrBuilder() {
        if (doorsOpenBuilder_ != null) {
          return doorsOpenBuilder_.getMessageOrBuilder();
        } else {
          return doorsOpen_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : doorsOpen_;
        }
      }
      /**
       * <pre>
       * The date/time when the doors open at the venue.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp doorsOpen = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getDoorsOpenFieldBuilder() {
        if (doorsOpenBuilder_ == null) {
          doorsOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getDoorsOpen(),
                  getParentForChildren(),
                  isClean());
          doorsOpen_ = null;
        }
        return doorsOpenBuilder_;
      }

      private com.google.protobuf.Timestamp scheduledStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> scheduledStartDateBuilder_;
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return Whether the scheduledStartDate field is set.
       */
      public boolean hasScheduledStartDate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       * @return The scheduledStartDate.
       */
      public com.google.protobuf.Timestamp getScheduledStartDate() {
        if (scheduledStartDateBuilder_ == null) {
          return scheduledStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        } else {
          return scheduledStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduledStartDate_ = value;
        } else {
          scheduledStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder setScheduledStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDate_ = builderForValue.build();
        } else {
          scheduledStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder mergeScheduledStartDate(com.google.protobuf.Timestamp value) {
        if (scheduledStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            scheduledStartDate_ != null &&
            scheduledStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getScheduledStartDateBuilder().mergeFrom(value);
          } else {
            scheduledStartDate_ = value;
          }
        } else {
          scheduledStartDateBuilder_.mergeFrom(value);
        }
        if (scheduledStartDate_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public Builder clearScheduledStartDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        scheduledStartDate_ = null;
        if (scheduledStartDateBuilder_ != null) {
          scheduledStartDateBuilder_.dispose();
          scheduledStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.Timestamp.Builder getScheduledStartDateBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getScheduledStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getScheduledStartDateOrBuilder() {
        if (scheduledStartDateBuilder_ != null) {
          return scheduledStartDateBuilder_.getMessageOrBuilder();
        } else {
          return scheduledStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : scheduledStartDate_;
        }
      }
      /**
       * <pre>
       * The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp scheduledStartDate = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getScheduledStartDateFieldBuilder() {
        if (scheduledStartDateBuilder_ == null) {
          scheduledStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getScheduledStartDate(),
                  getParentForChildren(),
                  isClean());
          scheduledStartDate_ = null;
        }
        return scheduledStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp actualStartDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> actualStartDateBuilder_;
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       * @return Whether the actualStartDate field is set.
       */
      public boolean hasActualStartDate() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       * @return The actualStartDate.
       */
      public com.google.protobuf.Timestamp getActualStartDate() {
        if (actualStartDateBuilder_ == null) {
          return actualStartDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        } else {
          return actualStartDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder setActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualStartDate_ = value;
        } else {
          actualStartDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder setActualStartDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (actualStartDateBuilder_ == null) {
          actualStartDate_ = builderForValue.build();
        } else {
          actualStartDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder mergeActualStartDate(com.google.protobuf.Timestamp value) {
        if (actualStartDateBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            actualStartDate_ != null &&
            actualStartDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getActualStartDateBuilder().mergeFrom(value);
          } else {
            actualStartDate_ = value;
          }
        } else {
          actualStartDateBuilder_.mergeFrom(value);
        }
        if (actualStartDate_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public Builder clearActualStartDate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        actualStartDate_ = null;
        if (actualStartDateBuilder_ != null) {
          actualStartDateBuilder_.dispose();
          actualStartDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getActualStartDateBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getActualStartDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getActualStartDateOrBuilder() {
        if (actualStartDateBuilder_ != null) {
          return actualStartDateBuilder_.getMessageOrBuilder();
        } else {
          return actualStartDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : actualStartDate_;
        }
      }
      /**
       * <pre>
       * The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp actualStartDate = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getActualStartDateFieldBuilder() {
        if (actualStartDateBuilder_ == null) {
          actualStartDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getActualStartDate(),
                  getParentForChildren(),
                  isClean());
          actualStartDate_ = null;
        }
        return actualStartDateBuilder_;
      }

      private com.google.protobuf.Timestamp endDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endDateBuilder_;
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       * @return Whether the endDate field is set.
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       * @return The endDate.
       */
      public com.google.protobuf.Timestamp getEndDate() {
        if (endDateBuilder_ == null) {
          return endDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        } else {
          return endDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder setEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endDate_ = value;
        } else {
          endDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder setEndDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endDateBuilder_ == null) {
          endDate_ = builderForValue.build();
        } else {
          endDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder mergeEndDate(com.google.protobuf.Timestamp value) {
        if (endDateBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            endDate_ != null &&
            endDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getEndDateBuilder().mergeFrom(value);
          } else {
            endDate_ = value;
          }
        } else {
          endDateBuilder_.mergeFrom(value);
        }
        if (endDate_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndDateBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getEndDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndDateOrBuilder() {
        if (endDateBuilder_ != null) {
          return endDateBuilder_.getMessageOrBuilder();
        } else {
          return endDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endDate_;
        }
      }
      /**
       * <pre>
       * The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp endDate = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndDateFieldBuilder() {
        if (endDateBuilder_ == null) {
          endDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndDate(),
                  getParentForChildren(),
                  isClean());
          endDate_ = null;
        }
        return endDateBuilder_;
      }

      private com.google.protobuf.Timestamp relevantDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> relevantDateBuilder_;
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       * @return Whether the relevantDate field is set.
       */
      public boolean hasRelevantDate() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       * @return The relevantDate.
       */
      public com.google.protobuf.Timestamp getRelevantDate() {
        if (relevantDateBuilder_ == null) {
          return relevantDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        } else {
          return relevantDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder setRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relevantDate_ = value;
        } else {
          relevantDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder setRelevantDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (relevantDateBuilder_ == null) {
          relevantDate_ = builderForValue.build();
        } else {
          relevantDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder mergeRelevantDate(com.google.protobuf.Timestamp value) {
        if (relevantDateBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            relevantDate_ != null &&
            relevantDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getRelevantDateBuilder().mergeFrom(value);
          } else {
            relevantDate_ = value;
          }
        } else {
          relevantDateBuilder_.mergeFrom(value);
        }
        if (relevantDate_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public Builder clearRelevantDate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        relevantDate_ = null;
        if (relevantDateBuilder_ != null) {
          relevantDateBuilder_.dispose();
          relevantDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public com.google.protobuf.Timestamp.Builder getRelevantDateBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getRelevantDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getRelevantDateOrBuilder() {
        if (relevantDateBuilder_ != null) {
          return relevantDateBuilder_.getMessageOrBuilder();
        } else {
          return relevantDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : relevantDate_;
        }
      }
      /**
       * <pre>
       * Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp relevantDate = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getRelevantDateFieldBuilder() {
        if (relevantDateBuilder_ == null) {
          relevantDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getRelevantDate(),
                  getParentForChildren(),
                  isClean());
          relevantDate_ = null;
        }
        return relevantDateBuilder_;
      }

      private com.passkit.grpc.Billing.Quota quota_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> quotaBuilder_;
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       * @return Whether the quota field is set.
       */
      public boolean hasQuota() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       * @return The quota.
       */
      public com.passkit.grpc.Billing.Quota getQuota() {
        if (quotaBuilder_ == null) {
          return quota_ == null ? com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        } else {
          return quotaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder setQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          quota_ = value;
        } else {
          quotaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder setQuota(
          com.passkit.grpc.Billing.Quota.Builder builderForValue) {
        if (quotaBuilder_ == null) {
          quota_ = builderForValue.build();
        } else {
          quotaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder mergeQuota(com.passkit.grpc.Billing.Quota value) {
        if (quotaBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            quota_ != null &&
            quota_ != com.passkit.grpc.Billing.Quota.getDefaultInstance()) {
            getQuotaBuilder().mergeFrom(value);
          } else {
            quota_ = value;
          }
        } else {
          quotaBuilder_.mergeFrom(value);
        }
        if (quota_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public Builder clearQuota() {
        bitField0_ = (bitField0_ & ~0x00000100);
        quota_ = null;
        if (quotaBuilder_ != null) {
          quotaBuilder_.dispose();
          quotaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public com.passkit.grpc.Billing.Quota.Builder getQuotaBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getQuotaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      public com.passkit.grpc.Billing.QuotaOrBuilder getQuotaOrBuilder() {
        if (quotaBuilder_ != null) {
          return quotaBuilder_.getMessageOrBuilder();
        } else {
          return quota_ == null ?
              com.passkit.grpc.Billing.Quota.getDefaultInstance() : quota_;
        }
      }
      /**
       * <pre>
       * The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
       * </pre>
       *
       * <code>.io.Quota quota = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder> 
          getQuotaFieldBuilder() {
        if (quotaBuilder_ == null) {
          quotaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Billing.Quota, com.passkit.grpc.Billing.Quota.Builder, com.passkit.grpc.Billing.QuotaOrBuilder>(
                  getQuota(),
                  getParentForChildren(),
                  isClean());
          quota_ = null;
        }
        return quotaBuilder_;
      }

      private com.passkit.grpc.MetricsOuterClass.Metrics metrics_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> metricsBuilder_;
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       * @return Whether the metrics field is set.
       */
      public boolean hasMetrics() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       * @return The metrics.
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics getMetrics() {
        if (metricsBuilder_ == null) {
          return metrics_ == null ? com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        } else {
          return metricsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public Builder setMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metrics_ = value;
        } else {
          metricsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public Builder setMetrics(
          com.passkit.grpc.MetricsOuterClass.Metrics.Builder builderForValue) {
        if (metricsBuilder_ == null) {
          metrics_ = builderForValue.build();
        } else {
          metricsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public Builder mergeMetrics(com.passkit.grpc.MetricsOuterClass.Metrics value) {
        if (metricsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            metrics_ != null &&
            metrics_ != com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance()) {
            getMetricsBuilder().mergeFrom(value);
          } else {
            metrics_ = value;
          }
        } else {
          metricsBuilder_.mergeFrom(value);
        }
        if (metrics_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public Builder clearMetrics() {
        bitField0_ = (bitField0_ & ~0x00000200);
        metrics_ = null;
        if (metricsBuilder_ != null) {
          metricsBuilder_.dispose();
          metricsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.Metrics.Builder getMetricsBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getMetricsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder getMetricsOrBuilder() {
        if (metricsBuilder_ != null) {
          return metricsBuilder_.getMessageOrBuilder();
        } else {
          return metrics_ == null ?
              com.passkit.grpc.MetricsOuterClass.Metrics.getDefaultInstance() : metrics_;
        }
      }
      /**
       * <pre>
       * Performance analytics for the event. Not writable.
       * </pre>
       *
       * <code>.io.Metrics metrics = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder> 
          getMetricsFieldBuilder() {
        if (metricsBuilder_ == null) {
          metricsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.MetricsOuterClass.Metrics, com.passkit.grpc.MetricsOuterClass.Metrics.Builder, com.passkit.grpc.MetricsOuterClass.MetricsOrBuilder>(
                  getMetrics(),
                  getParentForChildren(),
                  isClean());
          metrics_ = null;
        }
        return metricsBuilder_;
      }

      private com.google.protobuf.Timestamp created_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdBuilder_;
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       * @return Whether the created field is set.
       */
      public boolean hasCreated() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       * @return The created.
       */
      public com.google.protobuf.Timestamp getCreated() {
        if (createdBuilder_ == null) {
          return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        } else {
          return createdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public Builder setCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          created_ = value;
        } else {
          createdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public Builder setCreated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (createdBuilder_ == null) {
          created_ = builderForValue.build();
        } else {
          createdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public Builder mergeCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            created_ != null &&
            created_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getCreatedBuilder().mergeFrom(value);
          } else {
            created_ = value;
          }
        } else {
          createdBuilder_.mergeFrom(value);
        }
        if (created_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public Builder clearCreated() {
        bitField0_ = (bitField0_ & ~0x00000400);
        created_ = null;
        if (createdBuilder_ != null) {
          createdBuilder_.dispose();
          createdBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreatedBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getCreatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
        if (createdBuilder_ != null) {
          return createdBuilder_.getMessageOrBuilder();
        } else {
          return created_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        }
      }
      /**
       * <pre>
       * The date the event was created. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreatedFieldBuilder() {
        if (createdBuilder_ == null) {
          createdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreated(),
                  getParentForChildren(),
                  isClean());
          created_ = null;
        }
        return createdBuilder_;
      }

      private com.google.protobuf.Timestamp updated_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updatedBuilder_;
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       * @return Whether the updated field is set.
       */
      public boolean hasUpdated() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       * @return The updated.
       */
      public com.google.protobuf.Timestamp getUpdated() {
        if (updatedBuilder_ == null) {
          return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        } else {
          return updatedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public Builder setUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updated_ = value;
        } else {
          updatedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public Builder setUpdated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updatedBuilder_ == null) {
          updated_ = builderForValue.build();
        } else {
          updatedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public Builder mergeUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
            updated_ != null &&
            updated_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getUpdatedBuilder().mergeFrom(value);
          } else {
            updated_ = value;
          }
        } else {
          updatedBuilder_.mergeFrom(value);
        }
        if (updated_ != null) {
          bitField0_ |= 0x00000800;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public Builder clearUpdated() {
        bitField0_ = (bitField0_ & ~0x00000800);
        updated_ = null;
        if (updatedBuilder_ != null) {
          updatedBuilder_.dispose();
          updatedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdatedBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getUpdatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
        if (updatedBuilder_ != null) {
          return updatedBuilder_.getMessageOrBuilder();
        } else {
          return updated_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        }
      }
      /**
       * <pre>
       * The date the event updated. Not writable.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdatedFieldBuilder() {
        if (updatedBuilder_ == null) {
          updatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdated(),
                  getParentForChildren(),
                  isClean());
          updated_ = null;
        }
        return updatedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_tickets.EventListResponse)
    }

    // @@protoc_insertion_point(class_scope:event_tickets.EventListResponse)
    private static final com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse();
    }

    public static com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventListResponse>
        PARSER = new com.google.protobuf.AbstractParser<EventListResponse>() {
      @java.lang.Override
      public EventListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventListResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventListResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.EventTickets.EventOuterClass.EventListResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_Event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_EventListRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_EventListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_GetEventRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_GetEventRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_EventLimitedFieldsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_EventLimitedFieldsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_EventLimitedFieldsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_EventLimitedFieldsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_tickets_EventListResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_tickets_EventListResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034io/event_tickets/event.proto\022\revent_ti" +
      "ckets\032\037google/protobuf/timestamp.proto\032\027" +
      "io/common/billing.proto\032\027io/common/metri" +
      "cs.proto\032\026io/common/filter.proto\032!io/eve" +
      "nt_tickets/production.proto\032\034io/event_ti" +
      "ckets/venue.proto\032.protoc-gen-openapiv2/" +
      "options/annotations.proto\"\263\005\n\005Event\022\n\n\002i" +
      "d\030\001 \001(\t\022-\n\nproduction\030\002 \001(\0132\031.event_tick" +
      "ets.Production\022#\n\005venue\030\003 \001(\0132\024.event_ti" +
      "ckets.Venue\022-\n\tdoorsOpen\030\004 \001(\0132\032.google." +
      "protobuf.Timestamp\0226\n\022scheduledStartDate" +
      "\030\005 \001(\0132\032.google.protobuf.Timestamp\0223\n\017ac" +
      "tualStartDate\030\006 \001(\0132\032.google.protobuf.Ti" +
      "mestamp\022+\n\007endDate\030\007 \001(\0132\032.google.protob" +
      "uf.Timestamp\0220\n\014relevantDate\030\010 \001(\0132\032.goo" +
      "gle.protobuf.Timestamp\022\030\n\005quota\030\t \001(\0132\t." +
      "io.Quota\022#\n\007metrics\030\n \001(\0132\013.io.MetricsB\005" +
      "\222A\002@\001\0222\n\007created\030\013 \001(\0132\032.google.protobuf" +
      ".TimestampB\005\222A\002@\001\0222\n\007updated\030\014 \001(\0132\032.goo" +
      "gle.protobuf.TimestampB\005\222A\002@\001:\247\001\222A\243\001\n\240\001*" +
      "\005Event2vEvent is an instance of a Produc" +
      "tion; an event is showing; it holds the " +
      "event start & end date/time and venue de" +
      "tails.\322\001\nproduction\322\001\005venue\322\001\tstartDate\"" +
      "\320\001\n\020EventListRequest\022\026\n\014productionId\030\001 \001" +
      "(\tH\000\022\027\n\rproductionUid\030\002 \001(\tH\000\022\017\n\007venueId" +
      "\030\003 \001(\t\022\034\n\007filters\030\004 \001(\0132\013.io.Filters:N\222A" +
      "K\nI*\022Event List Request2&Used to list ev" +
      "ents in the production.\322\001\nproductionB\014\n\n" +
      "production\"\226\002\n\017GetEventRequest\022\026\n\014produc" +
      "tionId\030\001 \001(\tH\000\022\027\n\rproductionUid\030\002 \001(\tH\000\022" +
      "\021\n\007venueId\030\003 \001(\tH\001\022\022\n\010venueUid\030\004 \001(\tH\001\0226" +
      "\n\022scheduledStartDate\030\005 \001(\0132\032.google.prot" +
      "obuf.Timestamp:\\\222AY\nW*\021Get Event Request" +
      "2!Used to retrieve an event record.\322\001\npr" +
      "oduction\322\001\005venue\322\001\tstartDateB\014\n\nproducti" +
      "onB\007\n\005venue\"\327\002\n\032EventLimitedFieldsRespon" +
      "se\022\n\n\002id\030\001 \001(\t\0226\n\022scheduledStartDate\030\002 \001" +
      "(\0132\032.google.protobuf.Timestamp\0223\n\017actual" +
      "StartDate\030\003 \001(\0132\032.google.protobuf.Timest" +
      "amp\022+\n\007endDate\030\004 \001(\0132\032.google.protobuf.T" +
      "imestamp:\222\001\222A\216\001\n\213\001*\021Event (Light ver)2vE" +
      "vent is an instance of a Production; an " +
      "event is showing; it holds the event sta" +
      "rt & end date/time and venue details.\"\222\005" +
      "\n\031EventLimitedFieldsRequest\022\024\n\014productio" +
      "nId\030\001 \001(\t\022\017\n\007venueId\030\002 \001(\t\022-\n\tdoorsOpen\030" +
      "\003 \001(\0132\032.google.protobuf.Timestamp\0226\n\022sch" +
      "eduledStartDate\030\004 \001(\0132\032.google.protobuf." +
      "Timestamp\0223\n\017actualStartDate\030\005 \001(\0132\032.goo" +
      "gle.protobuf.Timestamp\022+\n\007endDate\030\006 \001(\0132" +
      "\032.google.protobuf.Timestamp\0220\n\014relevantD" +
      "ate\030\007 \001(\0132\032.google.protobuf.Timestamp\022\030\n" +
      "\005quota\030\010 \001(\0132\t.io.Quota\022\034\n\007metrics\030\t \001(\013" +
      "2\013.io.Metrics\022+\n\007created\030\n \001(\0132\032.google." +
      "protobuf.Timestamp\022+\n\007updated\030\013 \001(\0132\032.go" +
      "ogle.protobuf.Timestamp:\300\001\222A\274\001\n\271\001*\021Event" +
      " (Light ver)2vEvent is an instance of a " +
      "Production; an event is showing; it hold" +
      "s the event start & end date/time and ve" +
      "nue details.\322\001\014productionId\322\001\007venueId\322\001\022" +
      "scheduledStartDate\"\227\005\n\021EventListResponse" +
      "\022\n\n\002id\030\001 \001(\t\022B\n\nproduction\030\002 \001(\0132..event" +
      "_tickets.ProductionLimitedFieldsResponse" +
      "\0228\n\005venue\030\003 \001(\0132).event_tickets.VenueLim" +
      "itedFieldsResponse\022-\n\tdoorsOpen\030\004 \001(\0132\032." +
      "google.protobuf.Timestamp\0226\n\022scheduledSt" +
      "artDate\030\005 \001(\0132\032.google.protobuf.Timestam" +
      "p\0223\n\017actualStartDate\030\006 \001(\0132\032.google.prot" +
      "obuf.Timestamp\022+\n\007endDate\030\007 \001(\0132\032.google" +
      ".protobuf.Timestamp\0220\n\014relevantDate\030\010 \001(" +
      "\0132\032.google.protobuf.Timestamp\022\030\n\005quota\030\t" +
      " \001(\0132\t.io.Quota\022\034\n\007metrics\030\n \001(\0132\013.io.Me" +
      "trics\022+\n\007created\030\013 \001(\0132\032.google.protobuf" +
      ".Timestamp\022+\n\007updated\030\014 \001(\0132\032.google.pro" +
      "tobuf.Timestamp:k\222Ah\nf*\023Event List Respo" +
      "nse2OContains event search result. Produ" +
      "ction and venue objects have limited fie" +
      "lds.Bo\n\035com.passkit.grpc.EventTicketsZ2s" +
      "tash.passkit.com/io/model/sdk/go/io/even" +
      "t_tickets\252\002\031PassKit.Grpc.EventTicketsb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.passkit.grpc.Billing.getDescriptor(),
          com.passkit.grpc.MetricsOuterClass.getDescriptor(),
          com.passkit.grpc.Filter.getDescriptor(),
          com.passkit.grpc.EventTickets.ProductionOuterClass.getDescriptor(),
          com.passkit.grpc.EventTickets.VenueOuterClass.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    internal_static_event_tickets_Event_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_tickets_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_Event_descriptor,
        new java.lang.String[] { "Id", "Production", "Venue", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated", });
    internal_static_event_tickets_EventListRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_event_tickets_EventListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_EventListRequest_descriptor,
        new java.lang.String[] { "ProductionId", "ProductionUid", "VenueId", "Filters", "Production", });
    internal_static_event_tickets_GetEventRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_event_tickets_GetEventRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_GetEventRequest_descriptor,
        new java.lang.String[] { "ProductionId", "ProductionUid", "VenueId", "VenueUid", "ScheduledStartDate", "Production", "Venue", });
    internal_static_event_tickets_EventLimitedFieldsResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_event_tickets_EventLimitedFieldsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_EventLimitedFieldsResponse_descriptor,
        new java.lang.String[] { "Id", "ScheduledStartDate", "ActualStartDate", "EndDate", });
    internal_static_event_tickets_EventLimitedFieldsRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_event_tickets_EventLimitedFieldsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_EventLimitedFieldsRequest_descriptor,
        new java.lang.String[] { "ProductionId", "VenueId", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated", });
    internal_static_event_tickets_EventListResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_event_tickets_EventListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_tickets_EventListResponse_descriptor,
        new java.lang.String[] { "Id", "Production", "Venue", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Field);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.TimestampProto.getDescriptor();
    com.passkit.grpc.Billing.getDescriptor();
    com.passkit.grpc.MetricsOuterClass.getDescriptor();
    com.passkit.grpc.Filter.getDescriptor();
    com.passkit.grpc.EventTickets.ProductionOuterClass.getDescriptor();
    com.passkit.grpc.EventTickets.VenueOuterClass.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
