// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/core/a_rpc_distribution.proto

// Protobuf Java Version: 3.25.0
package com.passkit.grpc;

public final class ARpcDistribution {
  private ARpcDistribution() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n io/core/a_rpc_distribution.proto\022\002io\032\034" +
      "google/api/annotations.proto\032\033google/pro" +
      "tobuf/empty.proto\032.protoc-gen-openapiv2/" +
      "options/annotations.proto\032\036io/common/com" +
      "mon_objects.proto\032\034io/common/distributio" +
      "n.proto2\242\r\n\014Distribution\022\257\001\n\020sendWelcome" +
      "Email\022\034.io.EmailDistributionRequest\032\026.go" +
      "ogle.protobuf.Empty\"e\222AD\022\022Send Welcome E" +
      "mail\032.Sends a welcome email to an indivi" +
      "dual record.\202\323\344\223\002\030\"\023/distribution/email:" +
      "\001*\022\335\001\n\020getSmartPassLink\022\030.io.SmartPassLi" +
      "nkRequest\032\007.io.Url\"\245\001\222A|\022\022Get SmartPass " +
      "Link\032fGet SmartPass returns encrypted Sm" +
      "artPass link based on a pass payload for" +
      " a member, coupon or ticket.\202\323\344\223\002 \"\033/dis" +
      "tribution/smartpasslink:\001*\022\305\002\n\033getDataCo" +
      "llectionPageFields\022\024.io.ClassObjectInput" +
      "\032\030.io.DataCollectionFields\"\365\001\222A\325\001\022\037Get D" +
      "ata Collection Page Fields\032nRetrieves a " +
      "list of fields used on the data collecti" +
      "on page. ClassId is required only for th" +
      "e Member protocol.J\"\n\003403\022\033\n\031User lacks " +
      "authorization.J\036\n\003404\022\027\n\025Record was not " +
      "found.\202\323\344\223\002\026\022\024/distribution/fields\022\230\002\n\022u" +
      "ploadSmartPassCsv\022\035.io.SmartPassCsvUploa" +
      "dRequest\032\026.google.protobuf.Empty\"\312\001\222A\244\001\022" +
      "\024Upload SmartPass Csv\032\213\001Upload SmartPass" +
      " Csv sends a projects short code and fil" +
      "e bytes to be processed. Processed file " +
      "will be sent to the users registered ema" +
      "il.\202\323\344\223\002\034\"\027/distribution/smartpass:\001*\022\337\001" +
      "\n\021importProtocolCsv\022\031.io.ImportProtocolR" +
      "equest\032\026.google.protobuf.Empty\"\226\001\222Ap\022\023Im" +
      "port Protocol Csv\032YImport protocol csv t" +
      "akes a formatted CSV and creates billabl" +
      "e protocol specific records.\202\323\344\223\002\035\"\030/dis" +
      "tribution/csv-import:\001*\022\272\003\n\017validateBarc" +
      "ode\022\013.io.Payload\032\013.io.Payload\"\214\003\222A\340\002\022\020Va" +
      "lidate Barcode\032\270\001Validate a TOTP barcode" +
      ". Send the full barcode format {{payload" +
      "}}||{{key}||{{timestamp}}||{{totp}}. If " +
      "TOTP is valid and recent, the barcode pa" +
      "yload without TOTP data will be returned" +
      ".JL\n\003400\022E\nCBarcode payload provided was" +
      " not in a format recognized by PassKit.J" +
      "C\n\003401\022<\n:The barcode TOTP was not valid" +
      " and should not be accepted.\202\323\344\223\002\"\"\035/dis" +
      "tribution/validateBarcode:\001*B\201\007\n\020com.pas" +
      "skit.grpcZ$stash.passkit.com/io/model/sd" +
      "k/go/io\252\002\014PassKit.Grpc\222A\266\006\022\361\001\n\030PassKit D" +
      "istribution API\022ZAPI for generating Smar" +
      "tPass links and distribution of your pas" +
      "ses via different channels.\0328https://pas" +
      "skit.com/legal/terms-of-subscription-ser" +
      "vice/\"?\n\017PassKit Support\022\027https://docs.p" +
      "asskit.io\032\023support@passkit.com*\001\0022\020appli" +
      "cation/json:\020application/jsonR9\n\003200\0222\n(" +
      "Returned when the request is successful." +
      "\022\006\n\004\232\002\001\007R4\n\003400\022-\n+Returned when wrong u" +
      "ser input is provided.R0\n\003401\022)\n\'Returne" +
      "d when the user is unauthorized.RP\n\003403\022" +
      "I\nGReturned when the user does not have " +
      "permission to access the resource.R;\n\00340" +
      "4\0224\n*Returned when the resource does not" +
      " exist.\022\006\n\004\232\002\001\007R<\n\003500\0225\n+Returned when " +
      "there is an unexpected error.\022\006\n\004\232\002\001\007RW\n" +
      "\003503\022P\nNServer is unavailable. Back off " +
      "for 250ms and repeat request until succe" +
      "ssful.Z>\n<\n\napiKeyAuth\022.\010\002\022\031JWT Authenti" +
      "cation token.\032\rAuthorization \002b\020\n\016\n\napiK" +
      "eyAuth\022\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
          com.passkit.grpc.CommonObjects.getDescriptor(),
          com.passkit.grpc.Distribution.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Operation);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Swagger);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
    com.passkit.grpc.CommonObjects.getDescriptor();
    com.passkit.grpc.Distribution.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
