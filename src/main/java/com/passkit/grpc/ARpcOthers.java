// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: io/core/a_rpc_others.proto
// Protobuf Java Version: 4.27.2

package com.passkit.grpc;

public final class ARpcOthers {
  private ARpcOthers() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      ARpcOthers.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032io/core/a_rpc_others.proto\022\002io\032\034google" +
      "/api/annotations.proto\032\033google/protobuf/" +
      "empty.proto\032.protoc-gen-openapiv2/option" +
      "s/annotations.proto\032\036io/common/common_ob" +
      "jects.proto\032\027io/common/project.proto\032\032io" +
      "/common/pagination.proto\032\026io/common/filt" +
      "er.proto\032\033io/common/integration.proto\032\022i" +
      "o/user/user.proto2\242)\n\005Users\022@\n\ncreateUse" +
      "r\022\013.io.NewUser\032\023.io.NewUserResponse\"\020\202\323\344" +
      "\223\002\n\"\005/user:\001*\0225\n\007newUser\022\013.io.NewUser\032\007." +
      "io.JWT\"\024\202\323\344\223\002\016\"\t/user/new:\001*\022A\n\006verify\022\021" +
      ".io.VerifyRequest\032\013.io.Boolean\"\027\202\323\344\223\002\021\032\014" +
      "/user/verify:\001*\022^\n\027resendVerificationEma" +
      "il\022\026.google.protobuf.Empty\032\013.io.Boolean\"" +
      "\036\202\323\344\223\002\030\"\023/user/verify/resend:\001*\022M\n\007getUs" +
      "er\022\026.google.protobuf.Empty\032\023.io.GetUserR" +
      "esponse\"\025\202\323\344\223\002\017\022\r/user/profile\0224\n\005login\022" +
      "\017.io.Credentials\032\007.io.JWT\"\021\202\323\344\223\002\013\"\006/logi" +
      "n:\001*\022J\n\rget2faBarcode\022\026.google.protobuf." +
      "Empty\032\007.io.Url\"\030\202\323\344\223\002\022\022\020/user/2faBarcode" +
      "\022P\n\rresetPassword\022\017.io.Credentials\032\026.goo" +
      "gle.protobuf.Empty\"\026\202\323\344\223\002\020\032\013/user/reset:" +
      "\001*\022^\n\025sendPasswordResetLink\022\014.io.Usernam" +
      "e\032\026.google.protobuf.Empty\"\037\202\323\344\223\002\031\"\024/user" +
      "/reset/password:\001*\022a\n\016changePassword\022\026.i" +
      "o.PasswordResetInput\032\026.google.protobuf.E" +
      "mpty\"\037\202\323\344\223\002\031\032\024/user/reset/password:\001*\022N\n" +
      "\013changeEmail\022\t.io.Email\032\026.google.protobu" +
      "f.Empty\"\034\202\323\344\223\002\026\"\021/user/reset/email:\001*\022g\n" +
      "\022confirmEmailChange\022\033.io.ConfirmEmailCha" +
      "ngeInput\032\026.google.protobuf.Empty\"\034\202\323\344\223\002\026" +
      "\032\021/user/reset/email:\001*\022[\n\021updateCompanyN" +
      "ame\022\017.io.CompanyName\032\026.google.protobuf.E" +
      "mpty\"\035\202\323\344\223\002\027\032\022/user/company/name:\001*\022`\n!g" +
      "etProjectsForUserQueryDeprecated\022\016.io.Pa" +
      "gination\032\013.io.Project\"\034\202\323\344\223\002\026\022\024/projects" +
      "/user/query0\001\022T\n\032getProjectsQueryDepreca" +
      "ted\022\016.io.Pagination\032\013.io.Project\"\027\202\323\344\223\002\021" +
      "\022\017/projects/query0\001\022U\n\027getProjectsForUse" +
      "rQuery\022\013.io.Filters\032\013.io.Project\"\036\202\323\344\223\002\030" +
      "\"\023/projects/user/list:\001*0\001\022I\n\020getProject" +
      "sQuery\022\013.io.Filters\032\013.io.Project\"\031\202\323\344\223\002\023" +
      "\"\016/projects/list:\001*0\001\022B\n\020getProjectByUui" +
      "d\022\006.io.Id\032\013.io.Project\"\031\202\323\344\223\002\023\022\021/project" +
      "s/id/{id}\022c\n getProjectAndTemplateByShor" +
      "tCode\022\006.io.Id\032\034.io.ProjectByShortCodeRes" +
      "ult\"\031\202\323\344\223\002\023\022\021/projects/sc/{id}\022]\n\022getPro" +
      "jectsForUser\022\027.io.ProjectStatusFilter\032\013." +
      "io.Project\"\037\202\323\344\223\002\031\022\027/projects/user/{stat" +
      "us}0\001\022Q\n\013getProjects\022\027.io.ProjectStatusF" +
      "ilter\032\013.io.Project\"\032\202\323\344\223\002\024\022\022/projects/{s" +
      "tatus}0\001\022[\n\020getScannerConfig\022\026.google.pr" +
      "otobuf.Empty\032\030.io.ScannerConfiguration\"\025" +
      "\202\323\344\223\002\017\022\r/user/scanner\022a\n\023createScannerCo" +
      "nfig\022\030.io.ScannerConfiguration\032\026.google." +
      "protobuf.Empty\"\030\202\323\344\223\002\022\"\r/user/scanner:\001*" +
      "\022c\n\023updateScannerConfig\022\030.io.ScannerConf" +
      "iguration\032\030.io.ScannerConfiguration\"\030\202\323\344" +
      "\223\002\022\032\r/user/scanner:\001*\022\255\002\n\033createAuthoriz" +
      "ationResource\022\036.io.OAuth2AuthorizationRe" +
      "quest\032\006.io.Id\"\345\001\222A\313\001\022-Requests an access" +
      " token from an external API\0322Creates a r" +
      "ecord of an oauth2 access token requestJ" +
      "0\n\003400\022)\n\'There is a problem with the in" +
      "put data.J4\n\003403\022-\n+Returned when the us" +
      "er lacks authorization.\202\323\344\223\002\020\"\013/user/oau" +
      "th:\001*\022\371\001\n\033deleteAuthorizationResource\022\006." +
      "io.Id\032\026.google.protobuf.Empty\"\271\001\222A\235\001\022\035De" +
      "lete Authorization Resource\032:Deletes an " +
      "oauth2 authorization resource from the d" +
      "atabaseJ!\n\003403\022\032\n\030User lacks authorizati" +
      "onJ\035\n\003404\022\026\n\024Record was not found\202\323\344\223\002\022*" +
      "\020/user/oauth/{id}\022\333\002\n\020refreshApiSecret\022\026" +
      ".google.protobuf.Empty\032\026.google.protobuf" +
      ".Empty\"\226\002\222A\366\001\022\022Refresh API Secret\032\274\001Gene" +
      "rates a new API secret. Note that the ex" +
      "isting certificate will not be able to b" +
      "e used after this method is invoked. Use" +
      "rs may also need to log out and log back" +
      " into the PassKit PortalJ!\n\003403\022\032\n\030User " +
      "lacks authorization\202\323\344\223\002\026\022\024/user/secret/" +
      "refresh\022\277\005\n\rdeleteAccount\022\030.io.DeleteAcc" +
      "ountRequest\032\026.google.protobuf.Empty\"\373\004\222A" +
      "\337\004\022\016Delete Account\032\323\003Permanently and irr" +
      "ecoverably delete a PassKit account, inc" +
      "luding all projects, assets, passes and " +
      "pass holder information. All current pas" +
      "ses will be invalidated making them impo" +
      "ssible to be reactivate. This action can" +
      "not be undone. A confirmation will be se" +
      "nt by email once the request has been ex" +
      "ecuted. To delete your account, please d" +
      "elete all of projects belong to the owne" +
      "r and subusers\' accounts. Only users wit" +
      "h owner permission can execute account d" +
      "eletion.J0\n\003400\022)\n\'There is a problem wi" +
      "th the input data.J\036\n\003404\022\027\n\025Record was " +
      "not found.J%\n\003500\022\036\n\034There was an intern" +
      "al error.\202\323\344\223\002\022*\r/user/account:\001*\022\243\004\n\027re" +
      "vokeLegacyCredentials\022\026.google.protobuf." +
      "Empty\032\026.google.protobuf.Empty\"\327\003\222A\267\003\022\026Re" +
      "voke Old Credentials\032\277\002When replacing gR" +
      "PC certificates and private keys, the ol" +
      "d certificates remain valid for a period" +
      " of 30 days to allow you to update your " +
      "integration with the new keys.  If you w" +
      "ish to revoke the keys earlier this, the" +
      "n this endpoint will immediately revoke " +
      "any old certificates that were replaced " +
      "less than 30 days ago.J4\n\003403\022-\n+Returne" +
      "d when the user lacks authorization.J%\n\003" +
      "500\022\036\n\034There was an internal error.\202\323\344\223\002" +
      "\026*\021/user/credentials:\001*\022D\n\020createTeamMem" +
      "ber\022\021.io.NewTeamMember\032\006.io.Id\"\025\202\323\344\223\002\017\"\n" +
      "/user/team:\001*\022f\n\036createPermissionsForTea" +
      "mMember\022\031.io.TeamMemberPermissions\032\006.io." +
      "Id\"!\202\323\344\223\002\033\"\026/user/team/permissions:\001*\022j\n" +
      "\033updateTeamMemberPermissions\022\031.io.TeamMe" +
      "mberPermissions\032\031.io.TeamMemberPermissio" +
      "ns\"\025\202\323\344\223\002\017\032\n/user/team:\001*\022i\n\032patchTeamMe" +
      "mberPermissions\022\031.io.TeamMemberPermissio" +
      "ns\032\031.io.TeamMemberPermissions\"\025\202\323\344\223\002\0172\n/" +
      "user/team:\001*\022K\n\rgetTeamMember\022\006.io.Id\032\031." +
      "io.GetTeamMemberResponse\"\027\202\323\344\223\002\021\022\017/user/" +
      "team/{id}\022[\n\016getTeamMembers\022\026.google.pro" +
      "tobuf.Empty\032\033.io.ListTeamMembersResponse" +
      "\"\022\202\323\344\223\002\014\022\n/user/team0\001\022K\n\020deleteTeamMemb" +
      "er\022\006.io.Id\032\026.google.protobuf.Empty\"\027\202\323\344\223" +
      "\002\021*\017/user/team/{id}\022\270\003\n\021getTeamMemberLog" +
      "s\022\023.io.AuditLogRequest\032\014.io.AuditLog\"\375\002\222" +
      "A\337\002\022\024Retrieve log entries\032\351\001Retrieves ac" +
      "cess log records for a company or a user" +
      ". Team members are only able to retrieve" +
      " their own logs. Note that this may be a" +
      " slow running call. If called over REST," +
      " the response time may be longer than re" +
      "quest timeout period.J4\n\003403\022-\n+Returned" +
      " when the user lacks authorization.J%\n\0035" +
      "00\022\036\n\034There was an internal error.\202\323\344\223\002\024" +
      "\"\017/user/team/logs:\001*0\0012\303\032\n\014Integrations\022" +
      "\201\002\n\022createIntegrations\022\026.io.IntegrationC" +
      "onfigs\032\006.io.Id\"\312\001\222A\242\001\022\023Create Integratio" +
      "ns\032#Sets up integration configurations.J" +
      "0\n\003400\022)\n\'There is a problem with the in" +
      "put data.J4\n\003403\022-\n+Returned when the us" +
      "er lacks authorization.\202\323\344\223\002\036\"\031/integrat" +
      "ions/integration:\001*\022\367\001\n\017getIntegrations\022" +
      "\023.io.ProtocolIdInput\032\026.io.IntegrationCon" +
      "figs\"\266\001\222A}\022\020Get Integrations\032%Retrieves " +
      "integration configurations.J\"\n\003403\022\033\n\031Us" +
      "er lacks authorization.J\036\n\003404\022\027\n\025Record" +
      " was not found.\202\323\344\223\0020\022./integrations/int" +
      "egration/{protocol}/{classId}\022\343\002\n\022update" +
      "Integrations\022\026.io.IntegrationConfigs\032\006.i" +
      "o.Id\"\254\002\222A\204\002\022\023Update Integrations\032\036Update" +
      "s an integration record.J0\n\003400\022)\n\'There" +
      " is a problem with the input data.J\"\n\00340" +
      "3\022\033\n\031User lacks authorization.J\036\n\003404\022\027\n" +
      "\025Record was not found.JW\n\003503\022P\nNServer " +
      "is unavailable. Back off for 250ms and r" +
      "epeat request until successful.\202\323\344\223\002\036\032\031/" +
      "integrations/integration:\001*\022\365\001\n\022deleteIn" +
      "tegrations\022\023.io.ProtocolIdInput\032\026.google" +
      ".protobuf.Empty\"\261\001\222Ax\022\023Delete Integratio" +
      "ns\032\035Deletes an integration recordJ\"\n\003403" +
      "\022\033\n\031User lacks authorization.J\036\n\003404\022\027\n\025" +
      "Record was not found.\202\323\344\223\0020*./integratio" +
      "ns/integration/{protocol}/{classId}\022\310\002\n\026" +
      "createSinkSubscription\022\024.io.SinkSubscrip" +
      "tion\032\006.io.Id\"\217\002\222A\356\001\022\030Create Sink Subscri" +
      "ption\032jCreates a sink subscription so th" +
      "at PassKit can send a message to a URL a" +
      "fter certain event has completed.J0\n\003400" +
      "\022)\n\'There is a problem with the input da" +
      "ta.J4\n\003403\022-\n+Returned when the user lac" +
      "ks authorization.\202\323\344\223\002\027\"\022/integrations/s" +
      "ink:\001*\022\203\002\n\023getSinkSubscription\022\027.io.Subs" +
      "criptionRequest\032\024.io.SinkSubscription\"\274\001" +
      "\222A\202\001\022\025Get Sink Subscription\032%Retrieves a" +
      " sink subscription config.J\"\n\003403\022\033\n\031Use" +
      "r lacks authorization.J\036\n\003404\022\027\n\025Record " +
      "was not found.\202\323\344\223\0020\022./integrations/sink" +
      "/{protocol}/{subscriptionId}\022\326\002\n\037listSin" +
      "kSubscriptionsDeprecated\022\031.io.ListReques" +
      "tDeprecated\032\024.io.SinkSubscription\"\377\001\222A\333\001" +
      "\022$List Sink Subscriptions [DEPRECATED]\032o" +
      "[DEPRECATED: OR operator is not supporte" +
      "d] List all sink subscriptions for a giv" +
      "en segment. Support pagination.J\"\n\003403\022\033" +
      "\n\031User lacks authorization.J\036\n\003404\022\027\n\025Re" +
      "cord was not found.\202\323\344\223\002\032\022\030/integrations" +
      "/sinks/list0\001\022\215\002\n\025listSinkSubscriptions\022" +
      "\017.io.ListRequest\032\024.io.SinkSubscription\"\312" +
      "\001\222A\243\001\022\027List Sink Subscriptions\032DList all" +
      " sink subscriptions for a given segment." +
      " Support pagination.J\"\n\003403\022\033\n\031User lack" +
      "s authorization.J\036\n\003404\022\027\n\025Record was no" +
      "t found.\202\323\344\223\002\035\"\030/integrations/sinks/list" +
      ":\001*0\001\022\350\002\n\026updateSinkSubscription\022\024.io.Si" +
      "nkSubscription\032\006.io.Id\"\257\002\222A\216\002\022\030Update Si" +
      "nk Subscription\032#Updates a sink subscrip" +
      "tion record.J0\n\003400\022)\n\'There is a proble" +
      "m with the input data.J\"\n\003403\022\033\n\031User la" +
      "cks authorization.J\036\n\003404\022\027\n\025Record was " +
      "not found.JW\n\003503\022P\nNServer is unavailab" +
      "le. Back off for 250ms and repeat reques" +
      "t until successful.\202\323\344\223\002\027\032\022/integrations" +
      "/sink:\001*\022\211\002\n\026deleteSinkSubscription\022\027.io" +
      ".SubscriptionRequest\032\026.google.protobuf.E" +
      "mpty\"\275\001\222A\203\001\022\030Delete Sink Subscription\032#D" +
      "eletes an sink subscription recordJ\"\n\00340" +
      "3\022\033\n\031User lacks authorization.J\036\n\003404\022\027\n" +
      "\025Record was not found.\202\323\344\223\0020*./integrati" +
      "ons/sink/{protocol}/{subscriptionId}\022\357\001\n" +
      "\032getSampleSubscriptionEvent\022\006.io.Id\032\024.io" +
      ".SinkSubscription\"\262\001\222A\215\001\022\035Get Sample Sub" +
      "scription Event\032(Retrieves a sample subs" +
      "cription payload.J\"\n\003403\022\033\n\031User lacks a" +
      "uthorization.J\036\n\003404\022\027\n\025Record was not f" +
      "ound.\202\323\344\223\002\033\022\031/integrations/sink/sample\022\263" +
      "\001\n\016callDynamicApi\022\023.io.DynamicApiInput\032\026" +
      ".io.DynamicApiResponse\"t\222AU\022\020Call Dynami" +
      "c API\032AMakes an API call to the third pa" +
      "rty app integrated with PassKit.\202\323\344\223\002\026\"\021" +
      "/integrations/api:\001*BG\n\020com.passkit.grpc" +
      "Z$stash.passkit.com/io/model/sdk/go/io\252\002" +
      "\014PassKit.Grpcb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
          com.passkit.grpc.CommonObjects.getDescriptor(),
          com.passkit.grpc.ProjectOuterClass.getDescriptor(),
          com.passkit.grpc.PaginationOuterClass.getDescriptor(),
          com.passkit.grpc.Filter.getDescriptor(),
          com.passkit.grpc.Integration.getDescriptor(),
          com.passkit.grpc.User.getDescriptor(),
        });
    descriptor.resolveAllFeaturesImmutable();
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
    com.passkit.grpc.CommonObjects.getDescriptor();
    com.passkit.grpc.ProjectOuterClass.getDescriptor();
    com.passkit.grpc.PaginationOuterClass.getDescriptor();
    com.passkit.grpc.Filter.getDescriptor();
    com.passkit.grpc.Integration.getDescriptor();
    com.passkit.grpc.User.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Operation);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
